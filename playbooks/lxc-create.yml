---
# Copyright 2017 IBM Corp.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- include: verify_sudo_pass.yml

- name: lxc-create.yml
  hosts: localhost
  vars:
    networks_only: False
  environment: "{{ deployment_environment }}"
  tasks:
    - name: "Read {{ config_local }}"
      include_vars:
        name: config
        file: "{{ config_local }}"

    - name: "Back-up config file"
      copy:
        src: "{{ config_local }}"
        dest: "{{ config_local_backup }}"
        mode: 0444

    - name: "RHEL/CentOS: Enable IP Forwarding"
      lineinfile:
        dest: /etc/sysctl.conf
        regexp: '^net.ipv4.ip_forward'
        line: 'net.ipv4.ip_forward = 1'
      become: yes
      become_method: sudo
      when: ansible_distribution in ['RedHat','CentOS']

    - name: "Create private/public ssh key pair"
      user:
        name: "{{ ansible_env.USER }}"
        generate_ssh_key: yes
        ssh_key_file: "{{ ssh_key_private }}"
      when: not networks_only

    - name: "Register container internal ip address"
      shell: lxc-info -Hin {{ container_name }} | sed -e '/^10\./!d'
      register: container_ipaddr
      when: not networks_only
      become: yes
      become_method: sudo

    - name: "Create Ansible host for \"deployer\""
      lineinfile:
        dest: "{{ project_path_local }}/playbooks/hosts"
        insertafter: '^\[deployers\]'
        regexp: '^deployer'
        line: >
          deployer ansible_user={{ user }}
          ansible_ssh_private_key_file={{ ssh_key_private }}
          ansible_host={{ container_ipaddr.stdout }}

    - block:
      - name: Remove any existing known_hosts file
        file:
          path: "{{ known_hosts }}"
          state: absent

      - name: Create known_hosts file
        file:
          path: "{{ known_hosts }}"
          state: touch
          mode: 0600

      - name: |
          Use ssh-keyscan to collect container host keys (retry until ssh is up)
        command: |
          /usr/bin/ssh-keyscan -H {{ container_ipaddr.stdout }}
        register: ssh_keyscan_output
        until: ssh_keyscan_output.stdout != ''
        retries: 6
        delay: 10

      - name: Append keys to playbooks/known_hosts and ~/.ssh/known_hosts
        lineinfile:
          line: "{{ item[0] }}"
          dest: "{{ item[1] }}"
          state: present
          create: "yes"
          mode: 0600
        with_nested:
          - "{{ ssh_keyscan_output.stdout_lines }}"
          -   - "{{ known_hosts }}"
              - "~/.ssh/known_hosts"
      when: not networks_only
