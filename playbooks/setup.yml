---
# Copyright 2017 IBM Corp.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: setup.yml
  hosts: localhost
  tasks:
    - name: "Print default Log Level"
      debug:
        msg: "Log Level: {{ log_level }}"

    - name: "Read {{ config_local }}"
      include_vars:
        name: config_file
        file: "{{ config_local }}"

    - block:
        - name: "Print Log Level in {{ config_local }}"
          debug:
            msg: "Log Level: {{ config_file.log_level }}"

        - name: "Update default Log Level"
          replace:
            dest: "{{ project_path_local }}/playbooks/group_vars/all"
            regexp: '^(log_level:).*$'
            replace: '\1 {{ config_file.log_level }}'
      when:
        - config_file.log_level is defined
        - config_file.log_level is not none

    - name: "Clear deployment-environment in group_vars/all"
      blockinfile:
        path: "{{ project_path_local }}/playbooks/group_vars/all"
        marker: "# {mark} deployment_environment"
        content: ""

    - block:
        - name: "Print deployment-environment in {{ config_local }}"
          debug:
            msg: >
                deployment_environment:
                {{ config_file['deployment-environment'] }}

        - name: "Add deployment-environment to group_vars/all"
          vars:
            output:
                deployment_environment:
                    "{{ config_file['deployment-environment'] }}"
          blockinfile:
            path: "{{ project_path_local }}/playbooks/group_vars/all"
            content: "{{ output | to_nice_yaml }}"
            marker: "# {mark} deployment_environment"
      when:
        - config_file['deployment-environment'] is defined
        - config_file['deployment-environment'] is not none

    - name: "Add empty deployment-environment to group_vars/all"
      blockinfile:
        dest: "{{ project_path_local }}/playbooks/group_vars/all"
        content: "deployment_environment: {}"
        marker: "# {mark} deployment_environment"
      when: (config_file['deployment-environment'] is not defined) or
            (config_file['deployment-environment'] is none)

    - name: "Register container management IP address offset"
      shell: "grep container-mgmt-ipaddr-offset {{ config_local }} | grep -v '^ *#' | awk '{print $2}'"
      register: container_mgmt_ipaddr_offset

    - name: "Update group_vars/all container_mgmt_ipv4_offset"
      replace:
        dest: "{{ project_path_local }}/playbooks/group_vars/all"
        regexp: '^(container_mgmt_ipv4_offset:).*$'
        replace: '\1 {{ container_mgmt_ipaddr_offset.stdout }}'
      when: container_mgmt_ipaddr_offset.stdout != ""

    - name: "Register container bridge IP address offset"
      shell: "grep container-bridge-ipaddr-offset {{ config_local }} | grep -v '^ *#' | awk '{print $2}'"
      register: container_bridge_ipaddr_offset

    - name: "Update group_vars/all container_bridge_ipv4_offset"
      replace:
        dest: "{{ project_path_local }}/playbooks/group_vars/all"
        regexp: '^(container_bridge_ipv4_offset:).*$'
        replace: '\1 {{ container_bridge_ipaddr_offset.stdout }}'
      when: container_bridge_ipaddr_offset.stdout != ""
