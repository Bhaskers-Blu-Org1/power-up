[36mcommit 22ae7caf1044c303b70577c515b3b0d7e950689c
[0m[36mAuthor: Jay W. Carman <jwcarman@us.ibm.com>
[0m[36mDate:   Mon Oct 15 12:01:16 2018 -0500
[0m[36m
[0m[36m    WIP: Use Python3
[0m[36m
[0m[36mdiff --git a/docs/Dev-Guide.rst b/docs/Dev-Guide.rst
[0m[36mindex 0e89ac0..f51fc01 100644
[0m[33m--- a/docs/Dev-Guide.rst
[0m[33m+++ b/docs/Dev-Guide.rst
[0m[1;34m@@ -19,9 +19,6 @@ Coding Style
[0m[33m19[0m [0mCode should be implemented in accordance with[0m                                                                                        [0m[33m19[0m [0mCode should be implemented in accordance with[0m
[33m20[0m [0m`PEP 8 -- Style Guide for Python Code <https://www.python.org/dev/peps/pep-0008/>`_.[0m                                                 [0m[33m20[0m [0m`PEP 8 -- Style Guide for Python Code <https://www.python.org/dev/peps/pep-0008/>`_.[0m
[33m21[0m [1;31m[0m [0m[33m  [0m 
[33m22[0m [1;31mIt is requested that modules contain appropriate *__future__* imports to simplify[0m [0m[33m  [0m 
[33m23[0m [1;31mfuture migration to Python3.[0m [0m[33m  [0m 
[33m24[0m [0m[0m                                                                                                                                     [0m[33m21[0m [0m[0m
[33m25[0m [0mCommit Message Rules[0m                                                                                                                 [0m[33m22[0m [0mCommit Message Rules[0m
[33m26[0m [0m--------------------[0m                                                                                                                 [0m[33m23[0m [0m--------------------[0m
[33m27[0m [0m[0m                                                                                                                                     [0m[33m24[0m [0m[0m
[36mdiff --git a/scripts/install.sh b/scripts/install.sh
[0m[36mindex 2bb12e2..131806b 100755
[0m[33m--- a/scripts/install.sh
[0m[33m+++ b/scripts/install.sh
[0m[1;34m@@ -21,22 +21,23 @@ source /etc/os-release
[0m[33m21[0m [0mif [[ $ID == "ubuntu" ]]; then[0m                                                                                                       [0m[33m21[0m [0mif [[ $ID == "ubuntu" ]]; then[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[33m23[0m [0m    sudo apt-get update[0m                                                                                                              [0m[33m23[0m [0m    sudo apt-get update[0m
[33m24[0m [31m    sudo apt-get -y install[7m[31m python-pip python-dev[0m[31m libffi-dev libssl-dev \[0m                                                            [0m[33m24[0m [32m    sudo apt-get -y install libffi-dev libssl-dev \[0m
[33m25[0m [0m        python-netaddr ipmitool aptitude lxc vim vlan bridge-utils gcc cpp \[0m                                                         [0m[33m25[0m [0m        python-netaddr ipmitool aptitude lxc vim vlan bridge-utils gcc cpp \[0m
[33m26[0m [0m        python-tabulate fping g++ make unzip libncurses5 libncurses5-dev[0m                                                             [0m[33m26[0m [0m        python-tabulate fping g++ make unzip libncurses5 libncurses5-dev[0m
[33m27[0m [0m[0m                                                                                                                                     [0m[33m27[0m [0m[0m
[33m28[0m [0m    if [[ $VERSION_ID == "14.04" ]]; then[0m                                                                                            [0m[33m28[0m [0m    if [[ $VERSION_ID == "14.04" ]]; then[0m
[33m29[0m [31m        sudo apt-get -y install lxc-dev liblxc1[0m                                                                                      [0m[33m29[0m [32m        sudo apt-get -y install lxc-dev liblxc1[7m[32m python3-dev[0m[32m[0m
[33m30[0m [0m    elif [[ $VERSION_ID == "16.04" ]]; then[0m                                                                                          [0m[33m30[0m [0m    elif [[ $VERSION_ID == "16.04" ]]; then[0m
[33m31[0m [31m        sudo apt-get -y install python-lxc[0m                                                                                           [0m[33m31[0m [32m        sudo apt-get -y install python-lxc[7m[32m python3-dev[0m[32m[0m
[33m32[0m [0m    fi[0m                                                                                                                               [0m[33m32[0m [0m    fi[0m
[33m33[0m [0m[0m                                                                                                                                     [0m[33m33[0m [0m[0m
[33m34[0m [0melif [[ $ID == "rhel" ]]; then[0m                                                                                                       [0m[33m34[0m [0melif [[ $ID == "rhel" ]]; then[0m
[33m35[0m [31m    sudo yum -y install python[4m[31m-pip python[0m[31m-devel libffi-devel [7m[31mopenssl-devel [0m[31m\[0m                                                         [0m[33m35[0m [32m    sudo yum -y install python[4m[32m36[0m[32m-devel libffi-devel \[0m
[33m36[0m [31m       [7m[31m python-netaddr ipmitool[0m[31m lxc lxc-devel lxc-extra lxc-templates libvirt \[0m                                                      [0m[33m36[0m [32m        lxc lxc-devel lxc-extra lxc-templates libvirt [7m[32mipmitool[0m[32m\[0m
[33m37[0m [31m        debootstrap gcc vim[7m[31m vlan[0m[31m bridge-utils cpp flex bison unzip cmake \[0m                                                           [0m[33m37[0m [32m        debootstrap gcc vim bridge-utils cpp flex bison unzip cmake \[0m
[33m38[0m [0m        fping gcc-c++ patch perl-ExtUtils-MakeMaker perl-Thread-Queue \[0m                                                              [0m[33m38[0m [0m        fping gcc-c++ patch perl-ExtUtils-MakeMaker perl-Thread-Queue \[0m
[33m  [0m                                                                                                                                      [0m[33m39[0m [32m        ncurses-devel bash-completion yum-utils createrepo sshpass \[0m
[33m39[0m [31m        python-tabulate n[7m[31mcur[0m[31ms[7m[31me[0m[31ms-devel[0m                                                                                                [0m[33m40[0m [32m        python-tabulate [7m[32mope[0m[32mnss[7m[32ml[0m[32m-devel[0m
[33m40[0m [0m    sudo systemctl start lxc.service[0m                                                                                                 [0m[33m41[0m [0m    sudo systemctl start lxc.service[0m
[33m41[0m [0m    sudo systemctl start libvirtd[0m                                                                                                    [0m[33m42[0m [0m    sudo systemctl start libvirtd[0m
[33m42[0m [0m[0m                                                                                                                                     [0m[33m43[0m [0m[0m
[1;34m@@ -45,12 +46,9 @@ else
[0m[33m45[0m [0m    exit 1[0m                                                                                                                           [0m[33m46[0m [0m    exit 1[0m
[33m46[0m [0mfi[0m                                                                                                                                   [0m[33m47[0m [0mfi[0m
[33m47[0m [0m[0m                                                                                                                                     [0m[33m48[0m [0m[0m
[33m48[0m [31msudo -E -H pip install --upgrade pip[0m                                                                                                 [0m[33m49[0m [32msudo -E -H pip install --upgrade pip[7m[32m==18.0[0m[32m[0m
[33m49[0m [0msudo -E -H pip install --upgrade setuptools[0m                                                                                          [0m[33m50[0m [0msudo -E -H pip install --upgrade setuptools[0m
[33m50[0m [0msudo -E -H pip install --upgrade wheel[0m                                                                                               [0m[33m51[0m [0msudo -E -H pip install --upgrade wheel[0m
[33m51[0m [1;31mif [[ $VERSION_ID == "14.04" || $ID == "rhel" ]]; then[0m [0m[33m  [0m 
[33m52[0m [1;31m    sudo -E -H pip install --upgrade lxc-python2[0m [0m[33m  [0m 
[33m53[0m [1;31mfi[0m [0m[33m  [0m 
[33m54[0m [0m[0m                                                                                                                                     [0m[33m52[0m [0m[0m
[33m55[0m [0m/bin/bash "${BASH_SOURCE%/*}/venv_install.sh"[0m                                                                                        [0m[33m53[0m [0m/bin/bash "${BASH_SOURCE%/*}/venv_install.sh"[0m
[33m56[0m [0m[0m                                                                                                                                     [0m[33m54[0m [0m[0m
[36mdiff --git a/scripts/inventory.py b/scripts/inventory.py
[0m[36mindex 5e933fd..627e95c 100755
[0m[33m--- a/scripts/inventory.py
[0m[33m+++ b/scripts/inventory.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport yaml[0m                                                                                                                          [0m[33m18[0m [0mimport yaml[0m
[33m22[0m [0mimport sys[0m                                                                                                                           [0m[33m19[0m [0mimport sys[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/clear_port_macs.py b/scripts/python/clear_port_macs.py
[0m[36mindex d3ddeb3..f9f7f55 100644
[0m[33m--- a/scripts/python/clear_port_macs.py
[0m[33m+++ b/scripts/python/clear_port_macs.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mfrom lib.genesis import GEN_PATH[0m                                                                                                     [0m[33m20[0m [0mfrom lib.genesis import GEN_PATH[0m
[36mdiff --git a/scripts/python/client_ip_list.py b/scripts/python/client_ip_list.py
[0m[36mindex 42d56c2..2368585 100755
[0m[33m--- a/scripts/python/client_ip_list.py
[0m[33m+++ b/scripts/python/client_ip_list.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/cobbler_add_distros.py b/scripts/python/cobbler_add_distros.py
[0m[36mindex 9901421..f63dece 100644
[0m[33m--- a/scripts/python/cobbler_add_distros.py
[0m[33m+++ b/scripts/python/cobbler_add_distros.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport os[0m                                                                                                                            [0m[33m18[0m [0mimport os[0m
[33m22[0m [0mimport xmlrpclib[0m                                                                                                                     [0m[33m19[0m [0mimport xmlrpclib[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/cobbler_add_introspection.py b/scripts/python/cobbler_add_introspection.py
[0m[36mindex 2e7e7b3..1bd3e2b 100644
[0m[33m--- a/scripts/python/cobbler_add_introspection.py
[0m[33m+++ b/scripts/python/cobbler_add_introspection.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport xmlrpclib[0m                                                                                                                     [0m[33m19[0m [0mimport xmlrpclib[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/cobbler_add_systems.py b/scripts/python/cobbler_add_systems.py
[0m[36mindex e6d9139..a927c68 100644
[0m[33m--- a/scripts/python/cobbler_add_systems.py
[0m[33m+++ b/scripts/python/cobbler_add_systems.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport argparse[0m                                                                                                                      [0m[33m20[0m [0mimport argparse[0m
[36mdiff --git a/scripts/python/cobbler_install.py b/scripts/python/cobbler_install.py
[0m[36mindex 840a0a7..8baaa89 100755
[0m[33m--- a/scripts/python/cobbler_install.py
[0m[33m+++ b/scripts/python/cobbler_install.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os[0m                                                                                                                            [0m[33m19[0m [0mimport os[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[1;34m@@ -90,7 +87,7 @@ def cobbler_install(config_path=None):
[0m[33m90[0m [0m            log.warning(error.output)[0m                                                                                                [0m[33m87[0m [0m            log.warning(error.output)[0m
[33m91[0m [0m            print("\nPress enter to remove Cobbler and attempt to ")[0m                                                                 [0m[33m88[0m [0m            print("\nPress enter to remove Cobbler and attempt to ")[0m
[33m92[0m [0m            print("re-install, or 'T' to terminate.")[0m                                                                                [0m[33m89[0m [0m            print("re-install, or 'T' to terminate.")[0m
[33m93[0m [31m            resp = [7m[31mraw_[0m[31minput("\nEnter or 'T': ")[0m                                                                                     [0m[33m90[0m [32m            resp = input("\nEnter or 'T': ")[0m
[33m94[0m [0m            log.debug("User response = \'{}\'".format(resp))[0m                                                                         [0m[33m91[0m [0m            log.debug("User response = \'{}\'".format(resp))[0m
[33m95[0m [0m            if resp == 'T':[0m                                                                                                          [0m[33m92[0m [0m            if resp == 'T':[0m
[33m96[0m [0m                sys.exit('POWER-Up stopped at user request')[0m                                                                         [0m[33m93[0m [0m                sys.exit('POWER-Up stopped at user request')[0m
[36mdiff --git a/scripts/python/cobbler_set_netboot_enabled.py b/scripts/python/cobbler_set_netboot_enabled.py
[0m[36mindex 6a8972e..294df16 100644
[0m[33m--- a/scripts/python/cobbler_set_netboot_enabled.py
[0m[33m+++ b/scripts/python/cobbler_set_netboot_enabled.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport xmlrpclib[0m                                                                                                                     [0m[33m19[0m [0mimport xmlrpclib[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/configure_data_switches.py b/scripts/python/configure_data_switches.py
[0m[36mindex cd8bcad..0f1f9cb 100755
[0m[33m--- a/scripts/python/configure_data_switches.py
[0m[33m+++ b/scripts/python/configure_data_switches.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport os[0m                                                                                                                           [0m[33m 18[0m [0mimport os[0m
[33m 22[0m [0mimport sys[0m                                                                                                                          [0m[33m 19[0m [0mimport sys[0m
[33m 23[0m [0mimport pprint[0m                                                                                                                       [0m[33m 20[0m [0mimport pprint[0m
[1;34m@@ -382,7 +379,7 @@ def configure_data_switch(config_path):
[0m[33m382[0m [0m            except SwitchException as exc:[0m                                                                                          [0m[33m379[0m [0m            except SwitchException as exc:[0m
[33m383[0m [0m                log.warning('Switch: {}. Failed adding vlans {} to port {}'.[0m                                                        [0m[33m380[0m [0m                log.warning('Switch: {}. Failed adding vlans {} to port {}'.[0m
[33m384[0m [0m                            format(switch, port_vlans[switch][port], port))[0m                                                         [0m[33m381[0m [0m                            format(switch, port_vlans[switch][port], port))[0m
[33m385[0m [31m                log.warning(exc[4m[31m.message[0m[31m)[0m                                                                                            [0m[33m382[0m [32m                log.warning([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m386[0m [0m            log.debug('switch: {} port: {} vlans: {}'.format([0m                                                                       [0m[33m383[0m [0m            log.debug('switch: {} port: {} vlans: {}'.format([0m
[33m387[0m [0m                switch, port, port_vlans[switch][port]))[0m                                                                            [0m[33m384[0m [0m                switch, port, port_vlans[switch][port]))[0m
[33m388[0m [0m[0m                                                                                                                                    [0m[33m385[0m [0m[0m
[1;34m@@ -460,7 +457,7 @@ def configure_data_switch(config_path):
[0m[33m460[0m [0m                                    port_grp, chan_num)[0m                                                                             [0m[33m457[0m [0m                                    port_grp, chan_num)[0m
[33m461[0m [0m                            except SwitchException as exc:[0m                                                                          [0m[33m458[0m [0m                            except SwitchException as exc:[0m
[33m462[0m [0m                                log.warning('Failure configuring port in switch:'[0m                                                   [0m[33m459[0m [0m                                log.warning('Failure configuring port in switch:'[0m
[33m463[0m [31m                                            ' {}.\n{}'.format(sw, exc[4m[31m.message[0m[31m))[0m                                                     [0m[33m460[0m [32m                                            ' {}.\n{}'.format(sw, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m))[0m
[33m464[0m [0m                else:[0m                                                                                                               [0m[33m461[0m [0m                else:[0m
[33m465[0m [0m                    # Configure LAG[0m                                                                                                 [0m[33m462[0m [0m                    # Configure LAG[0m
[33m466[0m [0m                    for sw in chan_ports[bond][ntmpl][mstr_sw]:[0m                                                                     [0m[33m463[0m [0m                    for sw in chan_ports[bond][ntmpl][mstr_sw]:[0m
[1;34m@@ -496,7 +493,7 @@ def configure_data_switch(config_path):
[0m[33m496[0m [0m                                    port_grp, chan_num)[0m                                                                             [0m[33m493[0m [0m                                    port_grp, chan_num)[0m
[33m497[0m [0m                            except SwitchException as exc:[0m                                                                          [0m[33m494[0m [0m                            except SwitchException as exc:[0m
[33m498[0m [0m                                log.warning('Failure configuring port in switch:'[0m                                                   [0m[33m495[0m [0m                                log.warning('Failure configuring port in switch:'[0m
[33m499[0m [31m                                            '{}.\n {}'.format(sw, exc[4m[31m.message[0m[31m))[0m                                                     [0m[33m496[0m [32m                                            '{}.\n {}'.format(sw, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m))[0m
[33m500[0m [0m[0m                                                                                                                                    [0m[33m497[0m [0m[0m
[33m501[0m [0m[0m                                                                                                                                    [0m[33m498[0m [0m[0m
[33m502[0m [0mdef deconfigure_data_switch(config_path):[0m                                                                                           [0m[33m499[0m [0mdef deconfigure_data_switch(config_path):[0m
[1;34m@@ -556,7 +553,7 @@ def deconfigure_data_switch(config_path):
[0m[33m556[0m [0m                print('\n\nDo you wish to deconfigure MLAG on switch {}?'.format(sw))[0m                                               [0m[33m553[0m [0m                print('\n\nDo you wish to deconfigure MLAG on switch {}?'.format(sw))[0m
[33m557[0m [0m                print('This will stop all MLAG communication on all switch ports')[0m                                                  [0m[33m554[0m [0m                print('This will stop all MLAG communication on all switch ports')[0m
[33m558[0m [0m                print('OK to deconfigure MLAG?')[0m                                                                                    [0m[33m555[0m [0m                print('OK to deconfigure MLAG?')[0m
[33m559[0m [31m                resp = [7m[31mraw_[0m[31minput("Enter (Y/yes/n): ")[0m                                                                               [0m[33m556[0m [32m                resp = input("Enter (Y/yes/n): ")[0m
[33m560[0m [0m                if resp in ['Y', 'yes']:[0m                                                                                            [0m[33m557[0m [0m                if resp in ['Y', 'yes']:[0m
[33m561[0m [0m                    log.info('Deconfiguring MLAG on switch: {}'.format(sw))[0m                                                         [0m[33m558[0m [0m                    log.info('Deconfiguring MLAG on switch: {}'.format(sw))[0m
[33m562[0m [0m                    sw_dict[sw].deconfigure_mlag()[0m                                                                                  [0m[33m559[0m [0m                    sw_dict[sw].deconfigure_mlag()[0m
[36mdiff --git a/scripts/python/configure_mgmt_switches.py b/scripts/python/configure_mgmt_switches.py
[0m[36mindex b5d0790..be0b6aa 100644
[0m[33m--- a/scripts/python/configure_mgmt_switches.py
[0m[33m+++ b/scripts/python/configure_mgmt_switches.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[1;34m@@ -38,7 +35,7 @@ PASSIVE = 'passive'
[0m[33m38[0m [0mdef rlinput(prompt, prefill=''):[0m                                                                                                     [0m[33m35[0m [0mdef rlinput(prompt, prefill=''):[0m
[33m39[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m                                                                 [0m[33m36[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m
[33m40[0m [0m    try:[0m                                                                                                                             [0m[33m37[0m [0m    try:[0m
[33m41[0m [31m        return [7m[31mraw_[0m[31minput(prompt)[0m                                                                                                     [0m[33m38[0m [32m        return input(prompt)[0m
[33m42[0m [0m    finally:[0m                                                                                                                         [0m[33m39[0m [0m    finally:[0m
[33m43[0m [0m        readline.set_startup_hook()[0m                                                                                                  [0m[33m40[0m [0m        readline.set_startup_hook()[0m
[33m44[0m [0m[0m                                                                                                                                     [0m[33m41[0m [0m[0m
[36mdiff --git a/scripts/python/docgen.py b/scripts/python/docgen.py
[0m[36mindex 5e4c62a..19623f7 100755
[0m[33m--- a/scripts/python/docgen.py
[0m[33m+++ b/scripts/python/docgen.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport yaml[0m                                                                                                                          [0m[33m19[0m [0mimport yaml[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/download_os_images.py b/scripts/python/download_os_images.py
[0m[36mindex e68dd24..af1d5a3 100644
[0m[33m--- a/scripts/python/download_os_images.py
[0m[33m+++ b/scripts/python/download_os_images.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport sys[0m                                                                                                                           [0m[33m19[0m [0mimport sys[0m
[33m23[0m [0mimport yaml[0m                                                                                                                          [0m[33m20[0m [0mimport yaml[0m
[36mdiff --git a/scripts/python/enable_deployer_gateway.py b/scripts/python/enable_deployer_gateway.py
[0m[36mindex 6be1a4d..575cd8e 100755
[0m[33m--- a/scripts/python/enable_deployer_gateway.py
[0m[33m+++ b/scripts/python/enable_deployer_gateway.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[1;34m@@ -61,8 +58,9 @@ def _create_nat_gateway_rule(network, remove=False):
[0m[33m61[0m [0m    log = logger.getlogger()[0m                                                                                                         [0m[33m58[0m [0m    log = logger.getlogger()[0m
[33m62[0m [0m    network = str(IPNetwork(network).cidr)[0m                                                                                           [0m[33m59[0m [0m    network = str(IPNetwork(network).cidr)[0m
[33m63[0m [0m    # Check if POSTROUTING nat rule already exists for client network[0m                                                                [0m[33m60[0m [0m    # Check if POSTROUTING nat rule already exists for client network[0m
[33m64[0m [31m    output = subprocess.check_output([0m                                                                                                [0m[33m61[0m [32m    output = subprocess.check_output([7m[32m['bash', '-c',[0m[32m[0m
[33m65[0m [31m[7m[31m        ['bash', '-c', 'iptables -L POSTROUTING -t nat']).splitlines()[0m[31m[0m                                                               [0m[33m62[0m [32m[7m[32m                                      'iptables -L POSTROUTING -t nat'][0m[32m[0m
[33m  [0m                                                                                                                                      [0m[33m63[0m [32m                                     ).decode("utf-8").splitlines()[0m
[33m66[0m [0m    for line in output:[0m                                                                                                              [0m[33m64[0m [0m    for line in output:[0m
[33m67[0m [0m        if "MASQUERADE" in line and network in line:[0m                                                                                 [0m[33m65[0m [0m        if "MASQUERADE" in line and network in line:[0m
[33m68[0m [0m            log.debug('Found existing MASQUERADE NAT rule for {}: {}'.[0m                                                               [0m[33m66[0m [0m            log.debug('Found existing MASQUERADE NAT rule for {}: {}'.[0m
[36mdiff --git a/scripts/python/enable_deployer_ifc.py b/scripts/python/enable_deployer_ifc.py
[0m[36mindex a24aa41..e6d070c 100644
[0m[33m--- a/scripts/python/enable_deployer_ifc.py
[0m[33m+++ b/scripts/python/enable_deployer_ifc.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport netaddr[0m                                                                                                                       [0m[33m20[0m [0mimport netaddr[0m
[36mdiff --git a/scripts/python/enable_deployer_networks.py b/scripts/python/enable_deployer_networks.py
[0m[36mindex 2f8b735..dad0ac6 100755
[0m[33m--- a/scripts/python/enable_deployer_networks.py
[0m[33m+++ b/scripts/python/enable_deployer_networks.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport argparse[0m                                                                                                                     [0m[33m 18[0m [0mimport argparse[0m
[33m 22[0m [0mimport os[0m                                                                                                                           [0m[33m 19[0m [0mimport os[0m
[33m 23[0m [0mimport re[0m                                                                                                                           [0m[33m 20[0m [0mimport re[0m
[1;34m@@ -212,7 +209,7 @@ def _create_network(
[0m[33m212[0m [0m            LOG.info('{}NOTE: bridge {} is already configured.{}'.format(Color.bold,[0m                                                [0m[33m209[0m [0m            LOG.info('{}NOTE: bridge {} is already configured.{}'.format(Color.bold,[0m
[33m213[0m [0m                     br_label, Color.endc))[0m                                                                                         [0m[33m210[0m [0m                     br_label, Color.endc))[0m
[33m214[0m [0m            print("Enter to continue, or 'T' to terminate deployment")[0m                                                              [0m[33m211[0m [0m            print("Enter to continue, or 'T' to terminate deployment")[0m
[33m215[0m [31m            resp = [7m[31mraw_[0m[31minput("\nEnter or 'T': ")[0m                                                                                    [0m[33m212[0m [32m            resp = input("\nEnter or 'T': ")[0m
[33m216[0m [0m            if resp == 'T':[0m                                                                                                         [0m[33m213[0m [0m            if resp == 'T':[0m
[33m217[0m [0m                sys.exit('POWER-Up stopped at user request')[0m                                                                        [0m[33m214[0m [0m                sys.exit('POWER-Up stopped at user request')[0m
[33m218[0m [0m[0m                                                                                                                                    [0m[33m215[0m [0m[0m
[1;34m@@ -270,14 +267,14 @@ def _write_br_cfg_file(bridge, ip=None, prefix=None, ifc=None, mode='w'):
[0m[33m270[0m [0m    """[0m                                                                                                                             [0m[33m267[0m [0m    """[0m
[33m271[0m [0m    opsys = platform.dist()[0][0m                                                                                                      [0m[33m268[0m [0m    opsys = platform.dist()[0][0m
[33m272[0m [0m    LOG.debug('OS: ' + opsys)[0m                                                                                                       [0m[33m269[0m [0m    LOG.debug('OS: ' + opsys)[0m
[33m273[0m [31m    if opsys not in ('[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m', 'redhat'):[0m                                                                                           [0m[33m270[0m [32m    if opsys not in ('[4m[32mde[0m[32mb[4m[32mia[0m[32mn', 'redhat'):[0m
[33m274[0m [0m        LOG.error('Unsupported Operating System')[0m                                                                                   [0m[33m271[0m [0m        LOG.error('Unsupported Operating System')[0m
[33m275[0m [0m        raise UserCriticalException('Unsupported Operating System')[0m                                                                 [0m[33m272[0m [0m        raise UserCriticalException('Unsupported Operating System')[0m
[33m276[0m [0m    network = IPNetwork(ip + '/' + str(prefix))[0m                                                                                     [0m[33m273[0m [0m    network = IPNetwork(ip + '/' + str(prefix))[0m
[33m277[0m [0m    network_addr = str(network.network)[0m                                                                                             [0m[33m274[0m [0m    network_addr = str(network.network)[0m
[33m278[0m [0m    broadcast = str(network.broadcast)[0m                                                                                              [0m[33m275[0m [0m    broadcast = str(network.broadcast)[0m
[33m279[0m [0m    netmask = str(network.netmask)[0m                                                                                                  [0m[33m276[0m [0m    netmask = str(network.netmask)[0m
[33m280[0m [31m    if opsys == '[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m':[0m                                                                                                           [0m[33m277[0m [32m    if opsys == '[4m[32mde[0m[32mb[4m[32mia[0m[32mn':[0m
[33m281[0m [0m        if mode == 'a' and os.path.exists('/etc/network/interfaces.d/' + bridge):[0m                                                   [0m[33m278[0m [0m        if mode == 'a' and os.path.exists('/etc/network/interfaces.d/' + bridge):[0m
[33m282[0m [0m            LOG.debug('Appending to bridge config file {} IP addr {}'.[0m                                                              [0m[33m279[0m [0m            LOG.debug('Appending to bridge config file {} IP addr {}'.[0m
[33m283[0m [0m                      format(bridge, ip))[0m                                                                                           [0m[33m280[0m [0m                      format(bridge, ip))[0m
[1;34m@@ -374,7 +371,7 @@ def _get_ifcs_file_list():
[0m[33m374[0m [0m    """ Returns the absolute path for all interface definition files[0m                                                                [0m[33m371[0m [0m    """ Returns the absolute path for all interface definition files[0m
[33m375[0m [0m    """[0m                                                                                                                             [0m[33m372[0m [0m    """[0m
[33m376[0m [0m    opsys = platform.dist()[0][0m                                                                                                      [0m[33m373[0m [0m    opsys = platform.dist()[0][0m
[33m377[0m [31m    if opsys == '[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m':[0m                                                                                                           [0m[33m374[0m [32m    if opsys == '[4m[32mde[0m[32mb[4m[32mia[0m[32mn':[0m
[33m378[0m [0m        path = '/etc/network/'[0m                                                                                                      [0m[33m375[0m [0m        path = '/etc/network/'[0m
[33m379[0m [0m        pathd = '/etc/network/interfaces.d/'[0m                                                                                        [0m[33m376[0m [0m        pathd = '/etc/network/interfaces.d/'[0m
[33m380[0m [0m        file_list = [][0m                                                                                                              [0m[33m377[0m [0m        file_list = [][0m
[1;34m@@ -443,7 +440,8 @@ def _is_ifc_attached_elsewhere(ifc, bridge):
[0m[33m443[0m [0m    Returns:[0m                                                                                                                        [0m[33m440[0m [0m    Returns:[0m
[33m444[0m [0m        True if the interface is already being used (is unavailable)[0m                                                                [0m[33m441[0m [0m        True if the interface is already being used (is unavailable)[0m
[33m445[0m [0m    """[0m                                                                                                                             [0m[33m442[0m [0m    """[0m
[33m446[0m [31m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][7m[31m).splitlines()[0m[31m[0m                                                    [0m[33m443[0m [32m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][0m
[33m   [0m                                                                                                                                     [0m[33m444[0m [32m                                      ).decode("utf-8").splitlines()[0m
[33m447[0m [0m    output = [][0m                                                                                                                     [0m[33m445[0m [0m    output = [][0m
[33m448[0m [0m    for line in br_list[1:]:[0m                                                                                                        [0m[33m446[0m [0m    for line in br_list[1:]:[0m
[33m449[0m [0m        if line.startswith('\t'):[0m                                                                                                   [0m[33m447[0m [0m        if line.startswith('\t'):[0m
[1;34m@@ -457,7 +455,8 @@ def _is_ifc_attached_elsewhere(ifc, bridge):
[0m[33m457[0m [0m[0m                                                                                                                                    [0m[33m455[0m [0m[0m
[33m458[0m [0m[0m                                                                                                                                    [0m[33m456[0m [0m[0m
[33m459[0m [0mdef _is_ifc_attached(ifc, bridge):[0m                                                                                                  [0m[33m457[0m [0mdef _is_ifc_attached(ifc, bridge):[0m
[33m460[0m [31m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][7m[31m).splitlines()[0m[31m[0m                                                    [0m[33m458[0m [32m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][0m
[33m   [0m                                                                                                                                     [0m[33m459[0m [32m                                      ).decode("utf-8").splitlines()[0m
[33m461[0m [0m    output = [][0m                                                                                                                     [0m[33m460[0m [0m    output = [][0m
[33m462[0m [0m    for line in br_list[1:]:[0m                                                                                                        [0m[33m461[0m [0m    for line in br_list[1:]:[0m
[33m463[0m [0m        if line.startswith('\t'):[0m                                                                                                   [0m[33m462[0m [0m        if line.startswith('\t'):[0m
[36mdiff --git a/scripts/python/format_yaml.py b/scripts/python/format_yaml.py
[0m[36mindex 1b65c77..4c35cb8 100644
[0m[33m--- a/scripts/python/format_yaml.py
[0m[33m+++ b/scripts/python/format_yaml.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m22[0m [0mimport yaml[0m                                                                                                                          [0m[33m20[0m [0mimport yaml[0m
[36mdiff --git a/scripts/python/gen.py b/scripts/python/gen.py
[0m[36mindex 72fe38c..a63ce5d 100755
[0m[33m--- a/scripts/python/gen.py
[0m[33m+++ b/scripts/python/gen.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m"""POWER-Up 'gen' command"""[0m                                                                                                        [0m[33m  2[0m [0m"""POWER-Up 'gen' command"""[0m
[33m  3[0m [0m[0m                                                                                                                                    [0m[33m  3[0m [0m[0m
[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m
[33m 18[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 18[0m [0m# limitations under the License.[0m
[33m 19[0m [1;31m[0m [0m[33m   [0m 
[33m 20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 22[0m [0m[0m                                                                                                                                    [0m[33m 19[0m [0m[0m
[33m 23[0m [0mimport os[0m                                                                                                                           [0m[33m 20[0m [0mimport os[0m
[33m 24[0m [0mimport sys[0m                                                                                                                          [0m[33m 21[0m [0mimport sys[0m
[33m 25[0m [0mimport getpass[0m                                                                                                                      [0m[33m 22[0m [0mimport getpass[0m
[1;34m@@ -164,12 +161,12 @@ class Gen(object):
[0m[33m164[0m [0m            dbase.validate_config()[0m                                                                                                 [0m[33m161[0m [0m            dbase.validate_config()[0m
[33m165[0m [0m            nodes.create_nodes()[0m                                                                                                    [0m[33m162[0m [0m            nodes.create_nodes()[0m
[33m166[0m [0m        except UserCriticalException as exc:[0m                                                                                        [0m[33m163[0m [0m        except UserCriticalException as exc:[0m
[33m167[0m [31m            [7m[31mexc.[0m[31mmessage = 'Failure: Config file validation.\n' + exc[4m[31m.message[0m[31m[0m                                                        [0m[33m164[0m [32m            message = 'Failure: Config file validation.\n' + [7m[32mstr([0m[32mexc[4m[32m)[0m[32m[0m
[33m168[0m [31m            print('{}{}{}'.format(COL.red, [7m[31mexc.[0m[31mmessage, COL.endc))[0m                                                                  [0m[33m165[0m [32m            print('{}{}{}'.format(COL.red, message, COL.endc))[0m
[33m169[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m166[0m [0m            sys.exit(1)[0m
[33m170[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m167[0m [0m        except UserException as exc:[0m
[33m171[0m [31m            [7m[31mexc.[0m[31mmessage = 'Warning: Config file validation.\n' + exc[4m[31m.message[0m[31m[0m                                                        [0m[33m168[0m [32m            message = 'Warning: Config file validation.\n' + [7m[32mstr([0m[32mexc[4m[32m)[0m[32m[0m
[33m172[0m [31m            print('{}{}{}'.format(COL.yellow, [7m[31mexc.[0m[31mmessage, COL.endc))[0m                                                               [0m[33m169[0m [32m            print('{}{}{}'.format(COL.yellow, message, COL.endc))[0m
[33m173[0m [0m        else:[0m                                                                                                                       [0m[33m170[0m [0m        else:[0m
[33m174[0m [0m            print('Successfully completed config file validation.\n')[0m                                                               [0m[33m171[0m [0m            print('Successfully completed config file validation.\n')[0m
[33m175[0m [0m[0m                                                                                                                                    [0m[33m172[0m [0m[0m
[1;34m@@ -183,16 +180,16 @@ class Gen(object):
[0m[33m183[0m [0m        try:[0m                                                                                                                        [0m[33m180[0m [0m        try:[0m
[33m184[0m [0m            val.validate_mgmt_switches()[0m                                                                                            [0m[33m181[0m [0m            val.validate_mgmt_switches()[0m
[33m185[0m [0m        except UserCriticalException as exc:[0m                                                                                        [0m[33m182[0m [0m        except UserCriticalException as exc:[0m
[33m186[0m [31m            print(exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                                     [0m[33m183[0m [32m            print([7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m187[0m [0m            print('{}Failure: Management switch validation.\n{}{}'.[0m                                                                 [0m[33m184[0m [0m            print('{}Failure: Management switch validation.\n{}{}'.[0m
[33m188[0m [31m                  format(COL.red, exc[4m[31m.message[0m[31m, COL.endc))[0m                                                                           [0m[33m185[0m [32m                  format(COL.red, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc))[0m
[33m189[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m186[0m [0m            sys.exit(1)[0m
[33m190[0m [0m[0m                                                                                                                                    [0m[33m187[0m [0m[0m
[33m191[0m [0m        try:[0m                                                                                                                        [0m[33m188[0m [0m        try:[0m
[33m192[0m [0m            val.validate_data_switches()[0m                                                                                            [0m[33m189[0m [0m            val.validate_data_switches()[0m
[33m193[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m190[0m [0m        except UserException as exc:[0m
[33m194[0m [0m            print('{}Failure: Data switch validation\n{}{}'.[0m                                                                        [0m[33m191[0m [0m            print('{}Failure: Data switch validation\n{}{}'.[0m
[33m195[0m [31m                  format(COL.yellow, exc[4m[31m.message[0m[31m, COL.endc))[0m                                                                        [0m[33m192[0m [32m                  format(COL.yellow, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc))[0m
[33m196[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m                                                            [0m[33m193[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m
[33m197[0m [0m            print('data network configuration will not succeed until issues ')[0m                                                      [0m[33m194[0m [0m            print('data network configuration will not succeed until issues ')[0m
[33m198[0m [0m            print('are resolved')[0m                                                                                                   [0m[33m195[0m [0m            print('are resolved')[0m
[1;34m@@ -202,7 +199,7 @@ class Gen(object):
[0m[33m202[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m199[0m [0m        except UserException as exc:[0m
[33m203[0m [0m            err = True[0m                                                                                                              [0m[33m200[0m [0m            err = True[0m
[33m204[0m [0m            print('{}Failure: Node IPMI validation error\n{}{}'.[0m                                                                    [0m[33m201[0m [0m            print('{}Failure: Node IPMI validation error\n{}{}'.[0m
[33m205[0m [31m                  format(COL.yellow, exc[4m[31m.message[0m[31m, COL.endc))[0m                                                                        [0m[33m202[0m [32m                  format(COL.yellow, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc))[0m
[33m206[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m                                                            [0m[33m203[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m
[33m207[0m [0m            print('Not all nodes will be deployed at this time')[0m                                                                    [0m[33m204[0m [0m            print('Not all nodes will be deployed at this time')[0m
[33m208[0m [0m[0m                                                                                                                                    [0m[33m205[0m [0m[0m
[1;34m@@ -211,7 +208,7 @@ class Gen(object):
[0m[33m211[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m208[0m [0m        except UserException as exc:[0m
[33m212[0m [0m            err = True[0m                                                                                                              [0m[33m209[0m [0m            err = True[0m
[33m213[0m [0m            print('{}Failure: Node PXE validation error\n{}{}'.[0m                                                                     [0m[33m210[0m [0m            print('{}Failure: Node PXE validation error\n{}{}'.[0m
[33m214[0m [31m                  format(COL.yellow, exc[4m[31m.message[0m[31m, COL.endc))[0m                                                                        [0m[33m211[0m [32m                  format(COL.yellow, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc))[0m
[33m215[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m                                                            [0m[33m212[0m [0m            print('Warning. POWER-Up can continue with deployment, but')[0m
[33m216[0m [0m            print('Not all nodes will be deployed at this time')[0m                                                                    [0m[33m213[0m [0m            print('Not all nodes will be deployed at this time')[0m
[33m217[0m [0m[0m                                                                                                                                    [0m[33m214[0m [0m[0m
[1;34m@@ -232,7 +229,7 @@ class Gen(object):
[0m[33m232[0m [0m        #     print("Press enter to continue using the existing inventory.")[0m                                                        [0m[33m229[0m [0m        #     print("Press enter to continue using the existing inventory.")[0m
[33m233[0m [0m        #     print("Type 'C' to continue creating a new inventory. "[0m                                                               [0m[33m230[0m [0m        #     print("Type 'C' to continue creating a new inventory. "[0m
[33m234[0m [0m        #           "WARNING: Contents of current file will be overwritten!")[0m                                                       [0m[33m231[0m [0m        #           "WARNING: Contents of current file will be overwritten!")[0m
[33m235[0m [31m        #     resp = [7m[31mraw_[0m[31minput("Type 'T' to terminate Cluster Genesis ")[0m                                                            [0m[33m232[0m [32m        #     resp = input("Type 'T' to terminate Cluster Genesis ")[0m
[33m236[0m [0m        #     if resp == 'T':[0m                                                                                                       [0m[33m233[0m [0m        #     if resp == 'T':[0m
[33m237[0m [0m        #         sys.exit('POWER-Up stopped at user request')[0m                                                                      [0m[33m234[0m [0m        #         sys.exit('POWER-Up stopped at user request')[0m
[33m238[0m [0m        #     elif resp == 'C':[0m                                                                                                     [0m[33m235[0m [0m        #     elif resp == 'C':[0m
[1;34m@@ -255,7 +252,7 @@ class Gen(object):
[0m[33m255[0m [0m        try:[0m                                                                                                                        [0m[33m252[0m [0m        try:[0m
[33m256[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m253[0m [0m            cont.run_command(cmd)[0m
[33m257[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m254[0m [0m        except UserException as exc:[0m
[33m258[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m255[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m259[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m256[0m [0m            sys.exit(1)[0m
[33m260[0m [0m[0m                                                                                                                                    [0m[33m257[0m [0m[0m
[33m261[0m [0m        deployer_inv_file = gen.get_symlink_realpath(self.config_file_path)[0m                                                         [0m[33m258[0m [0m        deployer_inv_file = gen.get_symlink_realpath(self.config_file_path)[0m
[1;34m@@ -293,7 +290,7 @@ class Gen(object):
[0m[33m293[0m [0m        try:[0m                                                                                                                        [0m[33m290[0m [0m        try:[0m
[33m294[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m291[0m [0m            cont.run_command(cmd)[0m
[33m295[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m292[0m [0m        except UserException as exc:[0m
[33m296[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m293[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m297[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m294[0m [0m            sys.exit(1)[0m
[33m298[0m [0m        print('Success: Cobbler installed')[0m                                                                                         [0m[33m295[0m [0m        print('Success: Cobbler installed')[0m
[33m299[0m [0m[0m                                                                                                                                    [0m[33m296[0m [0m[0m
[1;34m@@ -303,7 +300,7 @@ class Gen(object):
[0m[33m303[0m [0m        try:[0m                                                                                                                        [0m[33m300[0m [0m        try:[0m
[33m304[0m [0m            download_os_images.download_os_images(self.config_file_path)[0m                                                            [0m[33m301[0m [0m            download_os_images.download_os_images(self.config_file_path)[0m
[33m305[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m302[0m [0m        except UserException as exc:[0m
[33m306[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m303[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m307[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m304[0m [0m            sys.exit(1)[0m
[33m308[0m [0m[0m                                                                                                                                    [0m[33m305[0m [0m[0m
[33m309[0m [0m        cont = Container(self.config_file_path)[0m                                                                                     [0m[33m306[0m [0m        cont = Container(self.config_file_path)[0m
[1;34m@@ -312,7 +309,7 @@ class Gen(object):
[0m[33m312[0m [0m        try:[0m                                                                                                                        [0m[33m309[0m [0m        try:[0m
[33m313[0m [0m            cont.copy_dir_to_container(local_os_images, cont_os_images)[0m                                                             [0m[33m310[0m [0m            cont.copy_dir_to_container(local_os_images, cont_os_images)[0m
[33m314[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m311[0m [0m        except UserException as exc:[0m
[33m315[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m312[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m316[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m313[0m [0m            sys.exit(1)[0m
[33m317[0m [0m        print('Success: OS images downloaded and copied into container')[0m                                                            [0m[33m314[0m [0m        print('Success: OS images downloaded and copied into container')[0m
[33m318[0m [0m[0m                                                                                                                                    [0m[33m315[0m [0m[0m
[1;34m@@ -339,7 +336,7 @@ class Gen(object):
[0m[33m339[0m [0m        try:[0m                                                                                                                        [0m[33m336[0m [0m        try:[0m
[33m340[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m337[0m [0m            cont.run_command(cmd)[0m
[33m341[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m338[0m [0m        except UserException as exc:[0m
[33m342[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m339[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m343[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m340[0m [0m            sys.exit(1)[0m
[33m344[0m [0m        print('IPMI ports added to inventory')[0m                                                                                      [0m[33m341[0m [0m        print('IPMI ports added to inventory')[0m
[33m345[0m [0m[0m                                                                                                                                    [0m[33m342[0m [0m[0m
[1;34m@@ -355,7 +352,7 @@ class Gen(object):
[0m[33m355[0m [0m        try:[0m                                                                                                                        [0m[33m352[0m [0m        try:[0m
[33m356[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m353[0m [0m            cont.run_command(cmd)[0m
[33m357[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m354[0m [0m        except UserException as exc:[0m
[33m358[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m355[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m359[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m356[0m [0m            sys.exit(1)[0m
[33m360[0m [0m        print('Success: Cobbler distros and profiles added')[0m                                                                        [0m[33m357[0m [0m        print('Success: Cobbler distros and profiles added')[0m
[33m361[0m [0m[0m                                                                                                                                    [0m[33m358[0m [0m[0m
[1;34m@@ -389,7 +386,7 @@ class Gen(object):
[0m[33m389[0m [0m        try:[0m                                                                                                                        [0m[33m386[0m [0m        try:[0m
[33m390[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m387[0m [0m            cont.run_command(cmd)[0m
[33m391[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m388[0m [0m        except UserException as exc:[0m
[33m392[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m389[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m393[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m390[0m [0m            sys.exit(1)[0m
[33m394[0m [0m        print('PXE ports added to inventory')[0m                                                                                       [0m[33m391[0m [0m        print('PXE ports added to inventory')[0m
[33m395[0m [0m[0m                                                                                                                                    [0m[33m392[0m [0m[0m
[1;34m@@ -405,7 +402,7 @@ class Gen(object):
[0m[33m405[0m [0m        try:[0m                                                                                                                        [0m[33m402[0m [0m        try:[0m
[33m406[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m403[0m [0m            cont.run_command(cmd)[0m
[33m407[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m404[0m [0m        except UserException as exc:[0m
[33m408[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m405[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m409[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m406[0m [0m            sys.exit(1)[0m
[33m410[0m [0m        print('Success: IPMI and PXE IP Addresses Reserved')[0m                                                                        [0m[33m407[0m [0m        print('Success: IPMI and PXE IP Addresses Reserved')[0m
[33m411[0m [0m[0m                                                                                                                                    [0m[33m408[0m [0m[0m
[1;34m@@ -421,7 +418,7 @@ class Gen(object):
[0m[33m421[0m [0m        try:[0m                                                                                                                        [0m[33m418[0m [0m        try:[0m
[33m422[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m419[0m [0m            cont.run_command(cmd)[0m
[33m423[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m420[0m [0m        except UserException as exc:[0m
[33m424[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m421[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m425[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m422[0m [0m            sys.exit(1)[0m
[33m426[0m [0m        print('Success: Cobbler systems added')[0m                                                                                     [0m[33m423[0m [0m        print('Success: Cobbler systems added')[0m
[33m427[0m [0m[0m                                                                                                                                    [0m[33m424[0m [0m[0m
[1;34m@@ -439,7 +436,7 @@ class Gen(object):
[0m[33m439[0m [0m        try:[0m                                                                                                                        [0m[33m436[0m [0m        try:[0m
[33m440[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m437[0m [0m            cont.run_command(cmd)[0m
[33m441[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m438[0m [0m        except UserException as exc:[0m
[33m442[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m439[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m443[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m440[0m [0m            sys.exit(1)[0m
[33m444[0m [0m        _run_playbook("wait_for_clients_ping.yml", self.config_file_path)[0m                                                           [0m[33m441[0m [0m        _run_playbook("wait_for_clients_ping.yml", self.config_file_path)[0m
[33m445[0m [0m[0m                                                                                                                                    [0m[33m442[0m [0m[0m
[1;34m@@ -468,7 +465,7 @@ class Gen(object):
[0m[33m468[0m [0m            try:[0m                                                                                                                    [0m[33m465[0m [0m            try:[0m
[33m469[0m [0m                cont.run_command(cmd)[0m                                                                                               [0m[33m466[0m [0m                cont.run_command(cmd)[0m
[33m470[0m [0m            except UserException as exc:[0m                                                                                            [0m[33m467[0m [0m            except UserException as exc:[0m
[33m471[0m [31m                print('\n{}Fail: {}{}'.format(COL.red, exc[4m[31m.message[0m[31m, COL.endc),[0m                                                      [0m[33m468[0m [32m                print('\n{}Fail: {}{}'.format(COL.red, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc),[0m
[33m472[0m [0m                      file=sys.stderr)[0m                                                                                              [0m[33m469[0m [0m                      file=sys.stderr)[0m
[33m473[0m [0m            else:[0m                                                                                                                   [0m[33m470[0m [0m            else:[0m
[33m474[0m [0m                print('\nSuccesfully configured data switches')[0m                                                                     [0m[33m471[0m [0m                print('\nSuccesfully configured data switches')[0m
[1;34m@@ -476,11 +473,11 @@ class Gen(object):
[0m[33m476[0m [0m            try:[0m                                                                                                                    [0m[33m473[0m [0m            try:[0m
[33m477[0m [0m                configure_data_switches.configure_data_switch(self.args.config_file_name)[0m                                           [0m[33m474[0m [0m                configure_data_switches.configure_data_switch(self.args.config_file_name)[0m
[33m478[0m [0m            except UserException as exc:[0m                                                                                            [0m[33m475[0m [0m            except UserException as exc:[0m
[33m479[0m [31m                print('\n{}Fail: {}{}'.format(COL.red, exc[4m[31m.message[0m[31m, COL.endc),[0m                                                      [0m[33m476[0m [32m                print('\n{}Fail: {}{}'.format(COL.red, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc),[0m
[33m480[0m [0m                      file=sys.stderr)[0m                                                                                              [0m[33m477[0m [0m                      file=sys.stderr)[0m
[33m481[0m [0m            except SwitchException as exc:[0m                                                                                          [0m[33m478[0m [0m            except SwitchException as exc:[0m
[33m482[0m [0m                print('\n{}Fail (switch error): {}{}'.format([0m                                                                       [0m[33m479[0m [0m                print('\n{}Fail (switch error): {}{}'.format([0m
[33m483[0m [31m                      COL.red, exc[4m[31m.message[0m[31m, COL.endc), file=sys.stderr)[0m                                                             [0m[33m480[0m [32m                      COL.red, [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, COL.endc), file=sys.stderr)[0m
[33m484[0m [0m            else:[0m                                                                                                                   [0m[33m481[0m [0m            else:[0m
[33m485[0m [0m                print('\nSuccesfully configured data switches')[0m                                                                     [0m[33m482[0m [0m                print('\nSuccesfully configured data switches')[0m
[33m486[0m [0m[0m                                                                                                                                    [0m[33m483[0m [0m[0m
[1;34m@@ -496,7 +493,7 @@ class Gen(object):
[0m[33m496[0m [0m        try:[0m                                                                                                                        [0m[33m493[0m [0m        try:[0m
[33m497[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m494[0m [0m            cont.run_command(cmd)[0m
[33m498[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m495[0m [0m        except UserException as exc:[0m
[33m499[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m496[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m500[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m497[0m [0m            sys.exit(1)[0m
[33m501[0m [0m[0m                                                                                                                                    [0m[33m498[0m [0m[0m
[33m502[0m [0m        _run_playbook("activate_client_interfaces.yml", self.config_file_path)[0m                                                      [0m[33m499[0m [0m        _run_playbook("activate_client_interfaces.yml", self.config_file_path)[0m
[1;34m@@ -506,7 +503,7 @@ class Gen(object):
[0m[33m506[0m [0m        try:[0m                                                                                                                        [0m[33m503[0m [0m        try:[0m
[33m507[0m [0m            cont.run_command(cmd)[0m                                                                                                   [0m[33m504[0m [0m            cont.run_command(cmd)[0m
[33m508[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m505[0m [0m        except UserException as exc:[0m
[33m509[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m506[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m510[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m507[0m [0m            sys.exit(1)[0m
[33m511[0m [0m        else:[0m                                                                                                                       [0m[33m508[0m [0m        else:[0m
[33m512[0m [0m            print('Success: Gathered Client MAC addresses')[0m                                                                         [0m[33m509[0m [0m            print('Success: Gathered Client MAC addresses')[0m
[1;34m@@ -516,7 +513,7 @@ class Gen(object):
[0m[33m516[0m [0m            _run_playbook("lookup_interface_names.yml --extra-vars config_path=" +[0m                                                  [0m[33m513[0m [0m            _run_playbook("lookup_interface_names.yml --extra-vars config_path=" +[0m
[33m517[0m [0m                          self.cont_config_file_path, self.config_file_path)[0m                                                        [0m[33m514[0m [0m                          self.cont_config_file_path, self.config_file_path)[0m
[33m518[0m [0m        except UserException as exc:[0m                                                                                                [0m[33m515[0m [0m        except UserException as exc:[0m
[33m519[0m [31m            print('Fail:', exc[4m[31m.message[0m[31m, file=sys.stderr)[0m                                                                            [0m[33m516[0m [32m            print('Fail:', [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, file=sys.stderr)[0m
[33m520[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m517[0m [0m            sys.exit(1)[0m
[33m521[0m [0m[0m                                                                                                                                    [0m[33m518[0m [0m[0m
[33m522[0m [0m        print('Success: Interface names collected')[0m                                                                                 [0m[33m519[0m [0m        print('Success: Interface names collected')[0m
[1;34m@@ -570,7 +567,7 @@ class Gen(object):
[0m[33m570[0m [0m            if self.args.validate:[0m                                                                                                  [0m[33m567[0m [0m            if self.args.validate:[0m
[33m571[0m [0m                cmd = argparse_gen.Cmd.VALIDATE.value[0m                                                                               [0m[33m568[0m [0m                cmd = argparse_gen.Cmd.VALIDATE.value[0m
[33m572[0m [0m                print('\nUsing {}'.format(self.config_file_path))[0m                                                                   [0m[33m569[0m [0m                print('\nUsing {}'.format(self.config_file_path))[0m
[33m573[0m [31m                resp = [7m[31mraw_[0m[31minput('Enter to continue. "T" to terminate ')[0m                                                            [0m[33m570[0m [32m                resp = input('Enter to continue. "T" to terminate ')[0m
[33m574[0m [0m                if resp == 'T':[0m                                                                                                     [0m[33m571[0m [0m                if resp == 'T':[0m
[33m575[0m [0m                    sys.exit('POWER-Up stopped at user request')[0m                                                                    [0m[33m572[0m [0m                    sys.exit('POWER-Up stopped at user request')[0m
[33m576[0m [0m        except AttributeError:[0m                                                                                                      [0m[33m573[0m [0m        except AttributeError:[0m
[1;34m@@ -669,7 +666,7 @@ class Gen(object):
[0m[33m669[0m [0m                print("\n\nPress enter to continue with node configuration ")[0m                                                       [0m[33m666[0m [0m                print("\n\nPress enter to continue with node configuration ")[0m
[33m670[0m [0m                print("and data switch setup, or 'T' to terminate ")[0m                                                                [0m[33m667[0m [0m                print("and data switch setup, or 'T' to terminate ")[0m
[33m671[0m [0m                print("POWER-Up. (To restart, type: 'pup post-deploy)")[0m                                                             [0m[33m668[0m [0m                print("POWER-Up. (To restart, type: 'pup post-deploy)")[0m
[33m672[0m [31m                resp = [7m[31mraw_[0m[31minput("\nEnter or 'T': ")[0m                                                                                [0m[33m669[0m [32m                resp = input("\nEnter or 'T': ")[0m
[33m673[0m [0m                if resp == 'T':[0m                                                                                                     [0m[33m670[0m [0m                if resp == 'T':[0m
[33m674[0m [0m                    sys.exit('POWER-Up stopped at user request')[0m                                                                    [0m[33m671[0m [0m                    sys.exit('POWER-Up stopped at user request')[0m
[33m675[0m [0m                cmd = argparse_gen.Cmd.POST_DEPLOY.value[0m                                                                            [0m[33m672[0m [0m                cmd = argparse_gen.Cmd.POST_DEPLOY.value[0m
[36mdiff --git a/scripts/python/get_dhcp_lease_info.py b/scripts/python/get_dhcp_lease_info.py
[0m[36mindex 34cfabd..fb9f3ef 100644
[0m[33m--- a/scripts/python/get_dhcp_lease_info.py
[0m[33m+++ b/scripts/python/get_dhcp_lease_info.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport os.path[0m                                                                                                                       [0m[33m18[0m [0mimport os.path[0m
[33m22[0m [0mimport re[0m                                                                                                                            [0m[33m19[0m [0mimport re[0m
[33m23[0m [0mfrom orderedattrdict import AttrDict[0m                                                                                                 [0m[33m20[0m [0mfrom orderedattrdict import AttrDict[0m
[36mdiff --git a/scripts/python/get_mgmt_switch_config.py b/scripts/python/get_mgmt_switch_config.py
[0m[36mindex 2cbda9d..bec85e4 100644
[0m[33m--- a/scripts/python/get_mgmt_switch_config.py
[0m[33m+++ b/scripts/python/get_mgmt_switch_config.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport re[0m                                                                                                                            [0m[33m19[0m [0mimport re[0m
[33m23[0m [0mfrom orderedattrdict import AttrDict[0m                                                                                                 [0m[33m20[0m [0mfrom orderedattrdict import AttrDict[0m
[36mdiff --git a/scripts/python/get_switch_model_info.py b/scripts/python/get_switch_model_info.py
[0m[36mindex 36c6966..33aa814 100644
[0m[33m--- a/scripts/python/get_switch_model_info.py
[0m[33m+++ b/scripts/python/get_switch_model_info.py
[0m[1;34m@@ -1,7 +1,7 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Get switch model information and assign class."""[0m                                                                                 [0m[33m 2[0m [0m"""Get switch model information and assign class."""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 4[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[33m 6[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 6[0m [0m# All Rights Reserved.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[33m24[0m [0mimport re[0m                                                                                                                            [0m[33m21[0m [0mimport re[0m
[33m25[0m [0mfrom orderedattrdict import AttrDict[0m                                                                                                 [0m[33m22[0m [0mfrom orderedattrdict import AttrDict[0m
[36mdiff --git a/scripts/python/install_client_os.py b/scripts/python/install_client_os.py
[0m[36mindex 7f00949..915ff42 100644
[0m[33m--- a/scripts/python/install_client_os.py
[0m[33m+++ b/scripts/python/install_client_os.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport re[0m                                                                                                                            [0m[33m19[0m [0mimport re[0m
[33m23[0m [0mimport os.path[0m                                                                                                                       [0m[33m20[0m [0mimport os.path[0m
[1;34m@@ -41,7 +38,7 @@ IS_CONTAINER = gen.is_container()
[0m[33m41[0m [0mdef _sub_proc_exec(cmd):[0m                                                                                                             [0m[33m38[0m [0mdef _sub_proc_exec(cmd):[0m
[33m42[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m                                                                              [0m[33m39[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m
[33m43[0m [0m    stdout, stderr = data.communicate()[0m                                                                                              [0m[33m40[0m [0m    stdout, stderr = data.communicate()[0m
[33m44[0m [31m[7m[31m    return stdout, stderr[0m[31m[0m                                                                                                            [0m[33m41[0m [32m[7m[32m    return stdout.decode("utf-8"), stderr.decode("utf-8")[0m[32m[0m
[33m45[0m [0m[0m                                                                                                                                     [0m[33m42[0m [0m[0m
[33m46[0m [0m[0m                                                                                                                                     [0m[33m43[0m [0m[0m
[33m47[0m [0mdef _get_lists(latest_list, handled_list):[0m                                                                                           [0m[33m44[0m [0mdef _get_lists(latest_list, handled_list):[0m
[36mdiff --git a/scripts/python/inv_add_ipmi_data.py b/scripts/python/inv_add_ipmi_data.py
[0m[36mindex cb8d0f7..58b2d2d 100644
[0m[33m--- a/scripts/python/inv_add_ipmi_data.py
[0m[33m+++ b/scripts/python/inv_add_ipmi_data.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m19[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[33m23[0m [0mimport pyghmi.exceptions as ipmi_exc[0m                                                                                                 [0m[33m20[0m [0mimport pyghmi.exceptions as ipmi_exc[0m
[36mdiff --git a/scripts/python/inv_add_ports.py b/scripts/python/inv_add_ports.py
[0m[36mindex d610879..03c4d4b 100755
[0m[33m--- a/scripts/python/inv_add_ports.py
[0m[33m+++ b/scripts/python/inv_add_ports.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                          [0m[33m  2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[33m  5[0m [0m#[0m                                                                                                                                   [0m[33m  5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport sys[0m                                                                                                                          [0m[33m 18[0m [0mimport sys[0m
[33m 22[0m [0mimport time[0m                                                                                                                         [0m[33m 19[0m [0mimport time[0m
[33m 23[0m [0mimport os.path[0m                                                                                                                      [0m[33m 20[0m [0mimport os.path[0m
[1;34m@@ -291,7 +288,7 @@ def get_port_status(dhcp_leases_file, port_type, config_path):
[0m[33m291[0m [0m        log.warning('Incomplete! Found {} of {} nodes'.format(status[0], status[1]))[0m                                                [0m[33m288[0m [0m        log.warning('Incomplete! Found {} of {} nodes'.format(status[0], status[1]))[0m
[33m292[0m [0m        print('{}-------------------------------------------{}'.format(yellow, endc))[0m                                               [0m[33m289[0m [0m        print('{}-------------------------------------------{}'.format(yellow, endc))[0m
[33m293[0m [0m        print("\nPress enter to continue gathering port information.")[0m                                                              [0m[33m290[0m [0m        print("\nPress enter to continue gathering port information.")[0m
[33m294[0m [31m        resp = [7m[31mraw_[0m[31minput("Enter C to continue Cluster Genesis or 'T' to terminate ")[0m                                                [0m[33m291[0m [32m        resp = input("Enter C to continue Cluster Genesis or 'T' to terminate ")[0m
[33m295[0m [0m        if resp == 'T':[0m                                                                                                             [0m[33m292[0m [0m        if resp == 'T':[0m
[33m296[0m [0m            log.info("'{}' entered. Terminating Genesis at user request".format(resp))[0m                                              [0m[33m293[0m [0m            log.info("'{}' entered. Terminating Genesis at user request".format(resp))[0m
[33m297[0m [0m            sys.exit(1)[0m                                                                                                             [0m[33m294[0m [0m            sys.exit(1)[0m
[36mdiff --git a/scripts/python/inv_add_switches.py b/scripts/python/inv_add_switches.py
[0m[36mindex 7876c47..901468a 100644
[0m[33m--- a/scripts/python/inv_add_switches.py
[0m[33m+++ b/scripts/python/inv_add_switches.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mfrom lib.inventory import Inventory[0m                                                                                                  [0m[33m20[0m [0mfrom lib.inventory import Inventory[0m
[36mdiff --git a/scripts/python/inv_create.py b/scripts/python/inv_create.py
[0m[36mindex 645288b..4701051 100644
[0m[33m--- a/scripts/python/inv_create.py
[0m[33m+++ b/scripts/python/inv_create.py
[0m[1;34m@@ -1,7 +1,7 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Create inventory"""[0m                                                                                                               [0m[33m 2[0m [0m"""Create inventory"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 4[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[33m 6[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 6[0m [0m# All Rights Reserved.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport argparse[0m                                                                                                                      [0m[33m20[0m [0mimport argparse[0m
[33m24[0m [0mimport os.path[0m                                                                                                                       [0m[33m21[0m [0mimport os.path[0m
[33m25[0m [0mimport sys[0m                                                                                                                           [0m[33m22[0m [0mimport sys[0m
[36mdiff --git a/scripts/python/inv_reserve_ipmi_pxe_ips.py b/scripts/python/inv_reserve_ipmi_pxe_ips.py
[0m[36mindex 7f3b8b2..e11668d 100644
[0m[33m--- a/scripts/python/inv_reserve_ipmi_pxe_ips.py
[0m[33m+++ b/scripts/python/inv_reserve_ipmi_pxe_ips.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[36mdiff --git a/scripts/python/inv_set_interface_names.py b/scripts/python/inv_set_interface_names.py
[0m[36mindex 4b15754..b5c1209 100644
[0m[33m--- a/scripts/python/inv_set_interface_names.py
[0m[33m+++ b/scripts/python/inv_set_interface_names.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mfrom lib.inventory import Inventory[0m                                                                                                  [0m[33m20[0m [0mfrom lib.inventory import Inventory[0m
[36mdiff --git a/scripts/python/inventory.py b/scripts/python/inventory.py
[0m[36mindex 2324947..02effd2 100755
[0m[33m--- a/scripts/python/inventory.py
[0m[33m+++ b/scripts/python/inventory.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,10 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31m[0m [0m[33m  [0m 
[33m19[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m20[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m21[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m22[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m23[0m [0mimport json[0m                                                                                                                          [0m[33m19[0m [0mimport json[0m
[33m24[0m [0mimport os.path[0m                                                                                                                       [0m[33m20[0m [0mimport os.path[0m
[36mdiff --git a/scripts/python/ipmi_power_pxe.py b/scripts/python/ipmi_power_pxe.py
[0m[36mindex c9d25c7..5767324 100644
[0m[33m--- a/scripts/python/ipmi_power_pxe.py
[0m[33m+++ b/scripts/python/ipmi_power_pxe.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport time[0m                                                                                                                          [0m[33m19[0m [0mimport time[0m
[33m23[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m20[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[36mdiff --git a/scripts/python/ipmi_set_bootdev.py b/scripts/python/ipmi_set_bootdev.py
[0m[36mindex 47c8c3f..bcb22a3 100644
[0m[33m--- a/scripts/python/ipmi_set_bootdev.py
[0m[33m+++ b/scripts/python/ipmi_set_bootdev.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport time[0m                                                                                                                          [0m[33m19[0m [0mimport time[0m
[33m23[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m20[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[1;34m@@ -76,7 +73,7 @@ def ipmi_set_bootdev(bootdev, persist=False, config_path=None, client_list=None,
[0m[33m76[0m [0m                        password=password)[0m                                                                                           [0m[33m73[0m [0m                        password=password)[0m
[33m77[0m [0m                except pyghmi_exception.IpmiException as error:[0m                                                                      [0m[33m74[0m [0m                except pyghmi_exception.IpmiException as error:[0m
[33m78[0m [0m                    log.error('IPMI login try {}, address {} - {}'.[0m                                                                  [0m[33m75[0m [0m                    log.error('IPMI login try {}, address {} - {}'.[0m
[33m79[0m [31m                              format(i, ipv4, error[4m[31m.message[0m[31m))[0m                                                                        [0m[33m76[0m [32m                              format(i, ipv4, [7m[32mstr([0m[32merror[4m[32m)[0m[32m))[0m
[33m80[0m [0m                    time.sleep(1)[0m                                                                                                    [0m[33m77[0m [0m                    time.sleep(1)[0m
[33m81[0m [0m                else:[0m                                                                                                                [0m[33m78[0m [0m                else:[0m
[33m82[0m [0m                    break[0m                                                                                                            [0m[33m79[0m [0m                    break[0m
[36mdiff --git a/scripts/python/ipmi_set_power.py b/scripts/python/ipmi_set_power.py
[0m[36mindex 7696961..8a99ee6 100755
[0m[33m--- a/scripts/python/ipmi_set_power.py
[0m[33m+++ b/scripts/python/ipmi_set_power.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport time[0m                                                                                                                          [0m[33m19[0m [0mimport time[0m
[33m23[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m20[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[1;34m@@ -79,7 +76,7 @@ def ipmi_set_power(state, config_path=None, client_list=None, max_attempts=5,
[0m[33m79[0m [0m                        password=password)[0m                                                                                           [0m[33m76[0m [0m                        password=password)[0m
[33m80[0m [0m                except pyghmi_exception.IpmiException as error:[0m                                                                      [0m[33m77[0m [0m                except pyghmi_exception.IpmiException as error:[0m
[33m81[0m [0m                    log.error('IPMI login attempt {}, address {}\nIPMI error'[0m                                                        [0m[33m78[0m [0m                    log.error('IPMI login attempt {}, address {}\nIPMI error'[0m
[33m82[0m [31m                              'message: {}'.format(i, ipv4, error[4m[31m.message[0m[31m))[0m                                                          [0m[33m79[0m [32m                              'message: {}'.format(i, ipv4, [7m[32mstr([0m[32merror[4m[32m)[0m[32m))[0m
[33m83[0m [0m                    time.sleep(1)[0m                                                                                                    [0m[33m80[0m [0m                    time.sleep(1)[0m
[33m84[0m [0m                else:[0m                                                                                                                [0m[33m81[0m [0m                else:[0m
[33m85[0m [0m                    break[0m                                                                                                            [0m[33m82[0m [0m                    break[0m
[36mdiff --git a/scripts/python/ipmi_set_static_ip.py b/scripts/python/ipmi_set_static_ip.py
[0m[36mindex a9ef580..f1dba78 100644
[0m[33m--- a/scripts/python/ipmi_set_static_ip.py
[0m[33m+++ b/scripts/python/ipmi_set_static_ip.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport re[0m                                                                                                                            [0m[33m19[0m [0mimport re[0m
[33m22[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m20[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[36mdiff --git a/scripts/python/lib/cisco.py b/scripts/python/lib/cisco.py
[0m[36mindex e9add4c..33eaab1 100644
[0m[33m--- a/scripts/python/lib/cisco.py
[0m[33m+++ b/scripts/python/lib/cisco.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m
[33m15[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m15[0m [0m# limitations under the License.[0m
[33m16[0m [1;31m[0m [0m[33m  [0m 
[33m17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m19[0m [0m[0m                                                                                                                                     [0m[33m16[0m [0m[0m
[33m20[0m [0mimport os.path[0m                                                                                                                       [0m[33m17[0m [0mimport os.path[0m
[33m21[0m [0mimport datetime[0m                                                                                                                      [0m[33m18[0m [0mimport datetime[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[36mdiff --git a/scripts/python/lib/config.py b/scripts/python/lib/config.py
[0m[36mindex 43fe263..bc562c2 100644
[0m[33m--- a/scripts/python/lib/config.py
[0m[33m+++ b/scripts/python/lib/config.py
[0m[1;34m@@ -16,9 +16,6 @@
[0m[33m  16[0m [0m# See the License for the specific language governing permissions and[0m                                                              [0m[33m  16[0m [0m# See the License for the specific language governing permissions and[0m
[33m  17[0m [0m# limitations under the License.[0m                                                                                                   [0m[33m  17[0m [0m# limitations under the License.[0m
[33m  18[0m [1;31m[0m [0m[33m    [0m 
[33m  19[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m    [0m 
[33m  20[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m    [0m 
[33m  21[0m [0m[0m                                                                                                                                   [0m[33m  18[0m [0m[0m
[33m  22[0m [0mimport sys[0m                                                                                                                         [0m[33m  19[0m [0mimport sys[0m
[33m  23[0m [0mfrom enum import Enum[0m                                                                                                              [0m[33m  20[0m [0mfrom enum import Enum[0m
[33m  24[0m [0mimport netaddr[0m                                                                                                                     [0m[33m  21[0m [0mimport netaddr[0m
[1;34m@@ -877,7 +874,7 @@ class Config(object):
[0m[33m 877[0m [0m            tuple or list of tuples of access info : label (str), class (str),[0m                                                     [0m[33m 874[0m [0m            tuple or list of tuples of access info : label (str), class (str),[0m
[33m 878[0m [0m            userid (str), password (str), ip address.[0m                                                                              [0m[33m 875[0m [0m            userid (str), password (str), ip address.[0m
[33m 879[0m [0m        """[0m                                                                                                                        [0m[33m 876[0m [0m        """[0m
[33m 880[0m [31m        if index > self.get_sw_mgmt_cnt() - 1:[0m                                                                                     [0m[33m 877[0m [32m        if index [7m[32mis not None and index [0m[32m> self.get_sw_mgmt_cnt() - 1:[0m
[33m 881[0m [0m            raise UserException('switch index out of range')[0m                                                                       [0m[33m 878[0m [0m            raise UserException('switch index out of range')[0m
[33m 882[0m [0m        if index is not None:[0m                                                                                                      [0m[33m 879[0m [0m        if index is not None:[0m
[33m 883[0m [0m            switch_indices = [index][0m                                                                                               [0m[33m 880[0m [0m            switch_indices = [index][0m
[1;34m@@ -903,7 +900,7 @@ class Config(object):
[0m[33m 903[0m [0m[0m                                                                                                                                   [0m[33m 900[0m [0m[0m
[33m 904[0m [0m            ai_list.append(ai_tuple)[0m                                                                                               [0m[33m 901[0m [0m            ai_list.append(ai_tuple)[0m
[33m 905[0m [0m        # if index specified, make it a tuple[0m                                                                                      [0m[33m 902[0m [0m        # if index specified, make it a tuple[0m
[33m 906[0m [31m        if index:[0m                                                                                                                  [0m[33m 903[0m [32m        if index[7m[32m is not None[0m[32m:[0m
[33m 907[0m [0m            ai_list = ai_list[0][0m                                                                                                   [0m[33m 904[0m [0m            ai_list = ai_list[0][0m
[33m 908[0m [0m        return ai_list[0m                                                                                                             [0m[33m 905[0m [0m        return ai_list[0m
[33m 909[0m [0m[0m                                                                                                                                   [0m[33m 906[0m [0m[0m
[1;34m@@ -1683,13 +1680,13 @@ class Config(object):
[0m[33m1683[0m [0m        if index is None:[0m                                                                                                          [0m[33m1680[0m [0m        if index is None:[0m
[33m1684[0m [0m            list_ = [][0m                                                                                                             [0m[33m1681[0m [0m            list_ = [][0m
[33m1685[0m [0m            for member in self.cfg.node_templates:[0m                                                                                 [0m[33m1682[0m [0m            for member in self.cfg.node_templates:[0m
[33m1686[0m [31m                if self.CfgKey.HOSTNAME_PREFIX in member.os.[7m[31miter[0m[31mkeys():[0m                                                            [0m[33m1683[0m [32m                if self.CfgKey.HOSTNAME_PREFIX in member.os.keys():[0m
[33m1687[0m [0m                    list_.append(member.os.hostname_prefix)[0m                                                                        [0m[33m1684[0m [0m                    list_.append(member.os.hostname_prefix)[0m
[33m1688[0m [0m                else:[0m                                                                                                              [0m[33m1685[0m [0m                else:[0m
[33m1689[0m [0m                    list_.append(None)[0m                                                                                             [0m[33m1686[0m [0m                    list_.append(None)[0m
[33m1690[0m [0m            return list_[0m                                                                                                           [0m[33m1687[0m [0m            return list_[0m
[33m1691[0m [0m        if (self.CfgKey.HOSTNAME_PREFIX in[0m                                                                                         [0m[33m1688[0m [0m        if (self.CfgKey.HOSTNAME_PREFIX in[0m
[33m1692[0m [31m                self.cfg.node_templates[index].os.[7m[31miter[0m[31mkeys()):[0m                                                                     [0m[33m1689[0m [32m                self.cfg.node_templates[index].os.keys()):[0m
[33m1693[0m [0m            return self.cfg.node_templates[index].os.hostname_prefix[0m                                                               [0m[33m1690[0m [0m            return self.cfg.node_templates[index].os.hostname_prefix[0m
[33m1694[0m [0m[0m                                                                                                                                   [0m[33m1691[0m [0m[0m
[33m1695[0m [0m    def yield_ntmpl_os_hostname_prefix(self):[0m                                                                                      [0m[33m1692[0m [0m    def yield_ntmpl_os_hostname_prefix(self):[0m
[36mdiff --git a/scripts/python/lib/container.py b/scripts/python/lib/container.py
[0m[36mindex 739f5c4..1dc4294 100644
[0m[33m--- a/scripts/python/lib/container.py
[0m[33m+++ b/scripts/python/lib/container.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m"""Container"""[0m                                                                                                                     [0m[33m  2[0m [0m"""Container"""[0m
[33m  3[0m [0m[0m                                                                                                                                    [0m[33m  3[0m [0m[0m
[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m
[33m 18[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 18[0m [0m# limitations under the License.[0m
[33m 19[0m [1;31m[0m [0m[33m   [0m 
[33m 20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 22[0m [0m[0m                                                                                                                                    [0m[33m 19[0m [0m[0m
[33m 23[0m [0mimport os.path[0m                                                                                                                      [0m[33m 20[0m [0mimport os.path[0m
[33m 24[0m [0mimport sys[0m                                                                                                                          [0m[33m 21[0m [0mimport sys[0m
[33m 25[0m [0mimport re[0m                                                                                                                           [0m[33m 22[0m [0mimport re[0m
[1;34m@@ -176,7 +173,7 @@ class Container(object):
[0m[33m176[0m [0m            self.log.warning(msg)[0m                                                                                                   [0m[33m173[0m [0m            self.log.warning(msg)[0m
[33m177[0m [0m            print("\nPress enter to continue with node configuration using ")[0m                                                       [0m[33m174[0m [0m            print("\nPress enter to continue with node configuration using ")[0m
[33m178[0m [0m            print("existing container, or 'T' to terminate.")[0m                                                                       [0m[33m175[0m [0m            print("existing container, or 'T' to terminate.")[0m
[33m179[0m [31m            resp = [7m[31mraw_[0m[31minput("\nEnter or 'T': ")[0m                                                                                    [0m[33m176[0m [32m            resp = input("\nEnter or 'T': ")[0m
[33m180[0m [0m            if resp == 'T':[0m                                                                                                         [0m[33m177[0m [0m            if resp == 'T':[0m
[33m181[0m [0m                sys.exit('POWER-Up stopped at user request')[0m                                                                        [0m[33m178[0m [0m                sys.exit('POWER-Up stopped at user request')[0m
[33m182[0m [0m        else:[0m                                                                                                                       [0m[33m179[0m [0m        else:[0m
[1;34m@@ -297,7 +294,7 @@ class Container(object):
[0m[33m297[0m [0m        try:[0m                                                                                                                        [0m[33m294[0m [0m        try:[0m
[33m298[0m [0m            ini.read(self.cont_ini)[0m                                                                                                 [0m[33m295[0m [0m            ini.read(self.cont_ini)[0m
[33m299[0m [0m        except ConfigParser.Error as exc:[0m                                                                                           [0m[33m296[0m [0m        except ConfigParser.Error as exc:[0m
[33m300[0m [31m            msg = exc[4m[31m.message[0m[31m.replace('\n', ' - ')[0m                                                                                  [0m[33m297[0m [32m            msg = [7m[32mstr([0m[32mexc[4m[32m)[0m[32m.replace('\n', ' - ')[0m
[33m301[0m [0m            self.log.error(msg)[0m                                                                                                     [0m[33m298[0m [0m            self.log.error(msg)[0m
[33m302[0m [0m            raise UserException(msg)[0m                                                                                                [0m[33m299[0m [0m            raise UserException(msg)[0m
[33m303[0m [0m[0m                                                                                                                                    [0m[33m300[0m [0m[0m
[36mdiff --git a/scripts/python/lib/db.py b/scripts/python/lib/db.py
[0m[36mindex cf45f79..ace96e4 100644
[0m[33m--- a/scripts/python/lib/db.py
[0m[33m+++ b/scripts/python/lib/db.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Database"""[0m                                                                                                                       [0m[33m 2[0m [0m"""Database"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport os[0m                                                                                                                            [0m[33m20[0m [0mimport os[0m
[33m24[0m [0mimport yaml[0m                                                                                                                          [0m[33m21[0m [0mimport yaml[0m
[33m25[0m [0mfrom orderedattrdict.yamlutils import AttrDictYAMLLoader[0m                                                                             [0m[33m22[0m [0mfrom orderedattrdict.yamlutils import AttrDictYAMLLoader[0m
[36mdiff --git a/scripts/python/lib/exception.py b/scripts/python/lib/exception.py
[0m[36mindex 029451d..580e4a3 100644
[0m[33m--- a/scripts/python/lib/exception.py
[0m[33m+++ b/scripts/python/lib/exception.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""User Exception"""[0m                                                                                                                 [0m[33m 2[0m [0m"""User Exception"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[33m24[0m [0mclass UserException(Exception):[0m                                                                                                      [0m[33m21[0m [0mclass UserException(Exception):[0m
[33m25[0m [0m    pass[0m                                                                                                                             [0m[33m22[0m [0m    pass[0m
[36mdiff --git a/scripts/python/lib/genesis.py b/scripts/python/lib/genesis.py
[0m[36mindex e4c86eb..02953ac 100644
[0m[33m--- a/scripts/python/lib/genesis.py
[0m[33m+++ b/scripts/python/lib/genesis.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m
[33m 15[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 15[0m [0m# limitations under the License.[0m
[33m 16[0m [1;31m[0m [0m[33m   [0m 
[33m 17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 19[0m [0m[0m                                                                                                                                    [0m[33m 16[0m [0m[0m
[33m 20[0m [0mimport sys[0m                                                                                                                          [0m[33m 17[0m [0mimport sys[0m
[33m 21[0m [0mimport platform[0m                                                                                                                     [0m[33m 18[0m [0mimport platform[0m
[33m 22[0m [0mimport os.path[0m                                                                                                                      [0m[33m 19[0m [0mimport os.path[0m
[1;34m@@ -125,7 +122,8 @@ def get_container_name(config_path=None):
[0m[33m125[0m [0m[0m                                                                                                                                    [0m[33m122[0m [0m[0m
[33m126[0m [0mdef is_container_running():[0m                                                                                                         [0m[33m123[0m [0mdef is_container_running():[0m
[33m127[0m [0m    cont_running = False[0m                                                                                                            [0m[33m124[0m [0m    cont_running = False[0m
[33m128[0m [31m    lxc_ls_output = subprocess.check_output(['bash', '-c', 'lxc-ls -f'][7m[31m)[0m[31m[0m                                                            [0m[33m125[0m [32m    lxc_ls_output = subprocess.check_output(['bash', '-c', 'lxc-ls -f'][0m
[33m   [0m                                                                                                                                     [0m[33m126[0m [32m                                            ).decode("utf-8")[0m
[33m129[0m [0m    lxc_ls_output_search = re.search('^%s\d+\s+RUNNING' %[0m                                                                           [0m[33m127[0m [0m    lxc_ls_output_search = re.search('^%s\d+\s+RUNNING' %[0m
[33m130[0m [0m                                     (DEFAULT_CONTAINER_NAME + '-pxe'),[0m                                                             [0m[33m128[0m [0m                                     (DEFAULT_CONTAINER_NAME + '-pxe'),[0m
[33m131[0m [0m                                     lxc_ls_output, re.MULTILINE)[0m                                                                   [0m[33m129[0m [0m                                     lxc_ls_output, re.MULTILINE)[0m
[1;34m@@ -136,7 +134,8 @@ def is_container_running():
[0m[33m136[0m [0m[0m                                                                                                                                    [0m[33m134[0m [0m[0m
[33m137[0m [0mdef container_addr():[0m                                                                                                               [0m[33m135[0m [0mdef container_addr():[0m
[33m138[0m [0m    cont_address = None[0m                                                                                                             [0m[33m136[0m [0m    cont_address = None[0m
[33m139[0m [31m    lxc_ls_output = subprocess.check_output(['bash', '-c', 'sudo lxc-ls -f'][7m[31m)[0m[31m[0m                                                       [0m[33m137[0m [32m    lxc_ls_output = subprocess.check_output(['bash', '-c', 'sudo lxc-ls -f'][0m
[33m   [0m                                                                                                                                     [0m[33m138[0m [32m                                            ).decode("utf-8")[0m
[33m140[0m [0m    cont_address = re.search('(\S+),\s+(\S+),', lxc_ls_output, re.MULTILINE)[0m                                                        [0m[33m139[0m [0m    cont_address = re.search('(\S+),\s+(\S+),', lxc_ls_output, re.MULTILINE)[0m
[33m141[0m [0m    if cont_address is None:[0m                                                                                                        [0m[33m140[0m [0m    if cont_address is None:[0m
[33m142[0m [0m        return None[0m                                                                                                                 [0m[33m141[0m [0m        return None[0m
[36mdiff --git a/scripts/python/lib/inv_nodes.py b/scripts/python/lib/inv_nodes.py
[0m[36mindex 6177376..6f65a92 100644
[0m[33m--- a/scripts/python/lib/inv_nodes.py
[0m[33m+++ b/scripts/python/lib/inv_nodes.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mfrom netaddr import iter_iprange[0m                                                                                                     [0m[33m18[0m [0mfrom netaddr import iter_iprange[0m
[33m22[0m [0mfrom netaddr import IPAddress[0m                                                                                                        [0m[33m19[0m [0mfrom netaddr import IPAddress[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/lib/inventory.py b/scripts/python/lib/inventory.py
[0m[36mindex b53dff3..aa79ccd 100644
[0m[33m--- a/scripts/python/lib/inventory.py
[0m[33m+++ b/scripts/python/lib/inventory.py
[0m[1;34m@@ -16,9 +16,6 @@
[0m[33m 16[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 16[0m [0m# See the License for the specific language governing permissions and[0m
[33m 17[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 17[0m [0m# limitations under the License.[0m
[33m 18[0m [1;31m[0m [0m[33m   [0m 
[33m 19[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 20[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 21[0m [0m[0m                                                                                                                                    [0m[33m 18[0m [0m[0m
[33m 22[0m [0mfrom enum import Enum[0m                                                                                                               [0m[33m 19[0m [0mfrom enum import Enum[0m
[33m 23[0m [0mfrom orderedattrdict import AttrDict, DefaultAttrDict[0m                                                                               [0m[33m 20[0m [0mfrom orderedattrdict import AttrDict, DefaultAttrDict[0m
[33m 24[0m [0m[0m                                                                                                                                    [0m[33m 21[0m [0m[0m
[1;34m@@ -212,9 +209,9 @@ class Inventory(object):
[0m[33m212[0m [0m[0m                                                                                                                                    [0m[33m209[0m [0m[0m
[33m213[0m [0m    def _flatten(self, data):[0m                                                                                                       [0m[33m210[0m [0m    def _flatten(self, data):[0m
[33m214[0m [0m        def items():[0m                                                                                                                [0m[33m211[0m [0m        def items():[0m
[33m215[0m [31m            for key, value in data.[7m[31miter[0m[31mitems():[0m                                                                                     [0m[33m212[0m [32m            for key, value in data.items():[0m
[33m216[0m [0m                if isinstance(value, dict):[0m                                                                                         [0m[33m213[0m [0m                if isinstance(value, dict):[0m
[33m217[0m [31m                    for subkey, subvalue in self._flatten(value).ite[7m[31mrite[0m[31mms():[0m                                                       [0m[33m214[0m [32m                    for subkey, subvalue in self._flatten(value).items():[0m
[33m218[0m [0m                        yield key + '.' + subkey, subvalue[0m                                                                          [0m[33m215[0m [0m                        yield key + '.' + subkey, subvalue[0m
[33m219[0m [0m                else:[0m                                                                                                               [0m[33m216[0m [0m                else:[0m
[33m220[0m [0m                    yield key, value[0m                                                                                                [0m[33m217[0m [0m                    yield key, value[0m
[1;34m@@ -224,7 +221,7 @@ class Inventory(object):
[0m[33m224[0m [0m        nodes = [][0m                                                                                                                  [0m[33m221[0m [0m        nodes = [][0m
[33m225[0m [0m        flat = self._flatten(self.nodes)[0m                                                                                            [0m[33m222[0m [0m        flat = self._flatten(self.nodes)[0m
[33m226[0m [0m[0m                                                                                                                                    [0m[33m223[0m [0m[0m
[33m227[0m [31m        for item_key, item_values in flat.[7m[31miter[0m[31mitems():[0m                                                                              [0m[33m224[0m [32m        for item_key, item_values in flat.items():[0m
[33m228[0m [0m            for index, item_value in enumerate(item_values):[0m                                                                        [0m[33m225[0m [0m            for index, item_value in enumerate(item_values):[0m
[33m229[0m [0m                if len(nodes) <= index:[0m                                                                                             [0m[33m226[0m [0m                if len(nodes) <= index:[0m
[33m230[0m [0m                    nodes.append(DefaultAttrDict(dict))[0m                                                                             [0m[33m227[0m [0m                    nodes.append(DefaultAttrDict(dict))[0m
[1;34m@@ -731,7 +728,7 @@ class Inventory(object):
[0m[33m731[0m [0m                                "MAC: %s" % set_mac)[0m                                                                                [0m[33m728[0m [0m                                "MAC: %s" % set_mac)[0m
[33m732[0m [0m[0m                                                                                                                                    [0m[33m729[0m [0m[0m
[33m733[0m [0m        for interface in self.inv.nodes[node_index][self.InvKey.INTERFACES]:[0m                                                        [0m[33m730[0m [0m        for interface in self.inv.nodes[node_index][self.InvKey.INTERFACES]:[0m
[33m734[0m [31m            for key, value in interface.ite[7m[31mrite[0m[31mms():[0m                                                                                [0m[33m731[0m [32m            for key, value in interface.items():[0m
[33m735[0m [0m                if isinstance(value, basestring):[0m                                                                                   [0m[33m732[0m [0m                if isinstance(value, basestring):[0m
[33m736[0m [0m                    value_split = [][0m                                                                                                [0m[33m733[0m [0m                    value_split = [][0m
[33m737[0m [0m                    for _value in value.split():[0m                                                                                    [0m[33m734[0m [0m                    for _value in value.split():[0m
[36mdiff --git a/scripts/python/lib/ipmi_power.py b/scripts/python/lib/ipmi_power.py
[0m[36mindex bf389db..451b09a 100644
[0m[33m--- a/scripts/python/lib/ipmi_power.py
[0m[33m+++ b/scripts/python/lib/ipmi_power.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m                                                                                      [0m[33m19[0m [0mfrom pyghmi.ipmi import command as ipmi_command[0m
[33m23[0m [0mfrom pyghmi import exceptions as pyghmi_exception[0m                                                                                    [0m[33m20[0m [0mfrom pyghmi import exceptions as pyghmi_exception[0m
[36mdiff --git a/scripts/python/lib/lenovo.py b/scripts/python/lib/lenovo.py
[0m[36mindex 4f9d646..e2a6633 100644
[0m[33m--- a/scripts/python/lib/lenovo.py
[0m[33m+++ b/scripts/python/lib/lenovo.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m
[33m15[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m15[0m [0m# limitations under the License.[0m
[33m16[0m [1;31m[0m [0m[33m  [0m 
[33m17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m19[0m [0m[0m                                                                                                                                     [0m[33m16[0m [0m[0m
[33m20[0m [0mimport re[0m                                                                                                                            [0m[33m17[0m [0mimport re[0m
[33m21[0m [0mimport os.path[0m                                                                                                                       [0m[33m18[0m [0mimport os.path[0m
[33m22[0m [0mimport datetime[0m                                                                                                                      [0m[33m19[0m [0mimport datetime[0m
[36mdiff --git a/scripts/python/lib/logger.py b/scripts/python/lib/logger.py
[0m[36mindex ae5d215..de3148b 100644
[0m[33m--- a/scripts/python/lib/logger.py
[0m[33m+++ b/scripts/python/lib/logger.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m
[33m15[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m15[0m [0m# limitations under the License.[0m
[33m16[0m [1;31m[0m [0m[33m  [0m 
[33m17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m19[0m [0m[0m                                                                                                                                     [0m[33m16[0m [0m[0m
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m17[0m [0mimport sys[0m
[33m21[0m [0mimport os.path[0m                                                                                                                       [0m[33m18[0m [0mimport os.path[0m
[33m22[0m [0mimport logging[0m                                                                                                                       [0m[33m19[0m [0mimport logging[0m
[36mdiff --git a/scripts/python/lib/mellanox.py b/scripts/python/lib/mellanox.py
[0m[36mindex 09619b6..7a7b2e9 100644
[0m[33m--- a/scripts/python/lib/mellanox.py
[0m[33m+++ b/scripts/python/lib/mellanox.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m14[0m [0m# See the License for the specific language governing permissions and[0m
[33m15[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m15[0m [0m# limitations under the License.[0m
[33m16[0m [1;31m[0m [0m[33m  [0m 
[33m17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m19[0m [0m[0m                                                                                                                                     [0m[33m16[0m [0m[0m
[33m20[0m [0mimport re[0m                                                                                                                            [0m[33m17[0m [0mimport re[0m
[33m21[0m [0mimport os.path[0m                                                                                                                       [0m[33m18[0m [0mimport os.path[0m
[33m22[0m [0mimport netaddr[0m                                                                                                                       [0m[33m19[0m [0mimport netaddr[0m
[36mdiff --git a/scripts/python/lib/menu.py b/scripts/python/lib/menu.py
[0m[36mindex ddd8998..8ade3c3 100644
[0m[33m--- a/scripts/python/lib/menu.py
[0m[33m+++ b/scripts/python/lib/menu.py
[0m[1;34m@@ -3,7 +3,7 @@
[0m[33m 3[0m [0m    Attributes:[0m                                                                                                                      [0m[33m 3[0m [0m    Attributes:[0m
[33m 4[0m [0m        KEY_ESC (int): Unicode code point of ``ESC`` key.[0m                                                                            [0m[33m 4[0m [0m        KEY_ESC (int): Unicode code point of ``ESC`` key.[0m
[33m 5[0m [0m"""[0m                                                                                                                                  [0m[33m 5[0m [0m"""[0m
[33m 6[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 6[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[33m 8[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 8[0m [0m# All Rights Reserved.[0m
[33m 9[0m [0m#[0m                                                                                                                                    [0m[33m 9[0m [0m#[0m
[1;34m@@ -19,9 +19,6 @@
[0m[33m19[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m19[0m [0m# See the License for the specific language governing permissions and[0m
[33m20[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m20[0m [0m# limitations under the License.[0m
[33m21[0m [1;31m[0m [0m[33m  [0m 
[33m22[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m23[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m24[0m [0m[0m                                                                                                                                     [0m[33m21[0m [0m[0m
[33m25[0m [0mimport curses[0m                                                                                                                        [0m[33m22[0m [0mimport curses[0m
[33m26[0m [0m[0m                                                                                                                                     [0m[33m23[0m [0m[0m
[33m27[0m [0mKEY_ESC = 27[0m                                                                                                                         [0m[33m24[0m [0mKEY_ESC = 27[0m
[36mdiff --git a/scripts/python/lib/ssh.py b/scripts/python/lib/ssh.py
[0m[36mindex 9c30bf3..a8567c8 100644
[0m[33m--- a/scripts/python/lib/ssh.py
[0m[33m+++ b/scripts/python/lib/ssh.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport socket[0m                                                                                                                        [0m[33m20[0m [0mimport socket[0m
[36mdiff --git a/scripts/python/lib/switch.py b/scripts/python/lib/switch.py
[0m[36mindex 70ee69a..ce62c09 100644
[0m[33m--- a/scripts/python/lib/switch.py
[0m[33m+++ b/scripts/python/lib/switch.py
[0m[1;34m@@ -16,9 +16,6 @@
[0m[33m16[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m16[0m [0m# See the License for the specific language governing permissions and[0m
[33m17[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m17[0m [0m# limitations under the License.[0m
[33m18[0m [1;31m[0m [0m[33m  [0m 
[33m19[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m20[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m21[0m [0m[0m                                                                                                                                     [0m[33m18[0m [0m[0m
[33m22[0m [0mfrom lib import lenovo[0m                                                                                                               [0m[33m19[0m [0mfrom lib import lenovo[0m
[33m23[0m [0mfrom lib import mellanox[0m                                                                                                             [0m[33m20[0m [0mfrom lib import mellanox[0m
[33m24[0m [0mfrom lib import cisco[0m                                                                                                                [0m[33m21[0m [0mfrom lib import cisco[0m
[36mdiff --git a/scripts/python/lib/switch_common.py b/scripts/python/lib/switch_common.py
[0m[36mindex 24eb3e2..7bdae25 100644
[0m[33m--- a/scripts/python/lib/switch_common.py
[0m[33m+++ b/scripts/python/lib/switch_common.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m
[33m 15[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 15[0m [0m# limitations under the License.[0m
[33m 16[0m [1;31m[0m [0m[33m   [0m 
[33m 17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 19[0m [0m[0m                                                                                                                                    [0m[33m 16[0m [0m[0m
[33m 20[0m [0mimport os[0m                                                                                                                           [0m[33m 17[0m [0mimport os[0m
[33m 21[0m [0mimport stat[0m                                                                                                                         [0m[33m 18[0m [0mimport stat[0m
[33m 22[0m [0mimport subprocess[0m                                                                                                                   [0m[33m 19[0m [0mimport subprocess[0m
[1;34m@@ -134,7 +131,7 @@ class SwitchCommon(object):
[0m[33m134[0m [0m            sleep(0.06 + random() / 100)  # lock acquire polls at 50 ms[0m                                                             [0m[33m131[0m [0m            sleep(0.06 + random() / 100)  # lock acquire polls at 50 ms[0m
[33m135[0m [0m            if lock.is_locked:[0m                                                                                                      [0m[33m132[0m [0m            if lock.is_locked:[0m
[33m136[0m [0m                self.log.error('Lock is locked. Should be unlocked')[0m                                                                [0m[33m133[0m [0m                self.log.error('Lock is locked. Should be unlocked')[0m
[33m137[0m [31m            return data[0m                                                                                                             [0m[33m134[0m [32m            return data[7m[32m.decode("utf-8")[0m[32m[0m
[33m138[0m [0m        else:[0m                                                                                                                       [0m[33m135[0m [0m        else:[0m
[33m139[0m [0m            self.log.error('Unable to acquire lock for switch {}'.format(self.host))[0m                                                [0m[33m136[0m [0m            self.log.error('Unable to acquire lock for switch {}'.format(self.host))[0m
[33m140[0m [0m            raise SwitchException('Unable to acquire lock for switch {}'.[0m                                                           [0m[33m137[0m [0m            raise SwitchException('Unable to acquire lock for switch {}'.[0m
[1;34m@@ -408,7 +405,7 @@ class SwitchCommon(object):
[0m[33m408[0m [0m            if self.mode == 'passive':[0m                                                                                              [0m[33m405[0m [0m            if self.mode == 'passive':[0m
[33m409[0m [0m                return None[0m                                                                                                         [0m[33m406[0m [0m                return None[0m
[33m410[0m [0m            output = subprocess.check_output([0m                                                                                       [0m[33m407[0m [0m            output = subprocess.check_output([0m
[33m411[0m [31m                ['bash', '-c', 'ping -c2 -i.5 ' + self.host])[0m                                                                       [0m[33m408[0m [32m                ['bash', '-c', 'ping -c2 -i.5 ' + self.host])[7m[32m.decode("utf-8")[0m[32m[0m
[33m412[0m [0m            if '0% packet loss' in output:[0m                                                                                          [0m[33m409[0m [0m            if '0% packet loss' in output:[0m
[33m413[0m [0m                return True[0m                                                                                                         [0m[33m410[0m [0m                return True[0m
[33m414[0m [0m            else:[0m                                                                                                                   [0m[33m411[0m [0m            else:[0m
[1;34m@@ -455,7 +452,8 @@ class SwitchCommon(object):
[0m[33m455[0m [0m                iter = re.finditer(r'--+', line)[0m                                                                                    [0m[33m452[0m [0m                iter = re.finditer(r'--+', line)[0m
[33m456[0m [0m                for i, match in enumerate(iter):[0m                                                                                    [0m[33m453[0m [0m                for i, match in enumerate(iter):[0m
[33m457[0m [0m                    # find column aligned with 'Port'[0m                                                                               [0m[33m454[0m [0m                    # find column aligned with 'Port'[0m
[33m458[0m [31m[7m[31m                    if pos >= match.span()[0] and pos < match.span()[1]:[0m[31m[0m                                                            [0m[33m455[0m [32m[7m[32m                    if (pos is not None and pos >= match.span()[0] and[0m[32m[0m
[33m   [0m                                                                                                                                     [0m[33m456[0m [32m                            pos < match.span()[1]):[0m
[33m459[0m [0m                        port_span = (match.span()[0], match.span()[1])[0m                                                              [0m[33m457[0m [0m                        port_span = (match.span()[0], match.span()[1])[0m
[33m460[0m [0m            # find rows with MACs[0m                                                                                                   [0m[33m458[0m [0m            # find rows with MACs[0m
[33m461[0m [0m            match = _mac_regex.search(line)[0m                                                                                         [0m[33m459[0m [0m            match = _mac_regex.search(line)[0m
[36mdiff --git a/scripts/python/lib/switches.py b/scripts/python/lib/switches.py
[0m[36mindex d0f9e9f..0f18eff 100644
[0m[33m--- a/scripts/python/lib/switches.py
[0m[33m+++ b/scripts/python/lib/switches.py
[0m[1;34m@@ -1,7 +1,7 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Library for Network Switch Classes."""[0m                                                                                            [0m[33m 2[0m [0m"""Library for Network Switch Classes."""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 4[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[33m 6[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 6[0m [0m# All Rights Reserved.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport paramiko[0m                                                                                                                      [0m[33m20[0m [0mimport paramiko[0m
[33m24[0m [0mimport re[0m                                                                                                                            [0m[33m21[0m [0mimport re[0m
[33m25[0m [0mfrom orderedattrdict import AttrDict[0m                                                                                                 [0m[33m22[0m [0mfrom orderedattrdict import AttrDict[0m
[36mdiff --git a/scripts/python/lib/utilities.py b/scripts/python/lib/utilities.py
[0m[36mindex 3563586..6ec1847 100644
[0m[33m--- a/scripts/python/lib/utilities.py
[0m[33m+++ b/scripts/python/lib/utilities.py
[0m[1;34m@@ -14,9 +14,6 @@
[0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 14[0m [0m# See the License for the specific language governing permissions and[0m
[33m 15[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 15[0m [0m# limitations under the License.[0m
[33m 16[0m [1;31m[0m [0m[33m   [0m 
[33m 17[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 18[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 19[0m [0m[0m                                                                                                                                    [0m[33m 16[0m [0m[0m
[33m 20[0m [0mimport os[0m                                                                                                                           [0m[33m 17[0m [0mimport os[0m
[33m 21[0m [0mimport re[0m                                                                                                                           [0m[33m 18[0m [0mimport re[0m
[33m 22[0m [0mimport sys[0m                                                                                                                          [0m[33m 19[0m [0mimport sys[0m
[1;34m@@ -159,7 +156,7 @@ def sub_proc_exec(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE):
[0m[33m159[0m [0m    """[0m                                                                                                                             [0m[33m156[0m [0m    """[0m
[33m160[0m [0m    proc = subprocess.Popen(cmd.split(), stdout=stdout, stderr=stderr)[0m                                                              [0m[33m157[0m [0m    proc = subprocess.Popen(cmd.split(), stdout=stdout, stderr=stderr)[0m
[33m161[0m [0m    stdout, stderr = proc.communicate()[0m                                                                                             [0m[33m158[0m [0m    stdout, stderr = proc.communicate()[0m
[33m162[0m [31m    return stdout, proc.returncode[0m                                                                                                  [0m[33m159[0m [32m    return stdout[7m[32m.decode("utf-8")[0m[32m, proc.returncode[0m
[33m163[0m [0m[0m                                                                                                                                    [0m[33m160[0m [0m[0m
[33m164[0m [0m[0m                                                                                                                                    [0m[33m161[0m [0m[0m
[33m165[0m [0mdef sub_proc_display(cmd, stdout=None, stderr=None):[0m                                                                                [0m[33m162[0m [0mdef sub_proc_display(cmd, stdout=None, stderr=None):[0m
[36mdiff --git a/scripts/python/lib/validate_config_logic.py b/scripts/python/lib/validate_config_logic.py
[0m[36mindex 386d31d..f0a652a 100644
[0m[33m--- a/scripts/python/lib/validate_config_logic.py
[0m[33m+++ b/scripts/python/lib/validate_config_logic.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Config logic validation"""[0m                                                                                                        [0m[33m 2[0m [0m"""Config logic validation"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mfrom netaddr import IPNetwork[0m                                                                                                        [0m[33m20[0m [0mfrom netaddr import IPNetwork[0m
[33m24[0m [0mimport re[0m                                                                                                                            [0m[33m21[0m [0mimport re[0m
[33m25[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[36mdiff --git a/scripts/python/lib/validate_config_schema.py b/scripts/python/lib/validate_config_schema.py
[0m[36mindex 667e157..2e99a6c 100644
[0m[33m--- a/scripts/python/lib/validate_config_schema.py
[0m[33m+++ b/scripts/python/lib/validate_config_schema.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m"""Config schema validation"""[0m                                                                                                      [0m[33m  2[0m [0m"""Config schema validation"""[0m
[33m  3[0m [0m[0m                                                                                                                                    [0m[33m  3[0m [0m[0m
[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 17[0m [0m# See the License for the specific language governing permissions and[0m
[33m 18[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 18[0m [0m# limitations under the License.[0m
[33m 19[0m [1;31m[0m [0m[33m   [0m 
[33m 20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 22[0m [0m[0m                                                                                                                                    [0m[33m 19[0m [0m[0m
[33m 23[0m [0mimport jsonschema[0m                                                                                                                   [0m[33m 20[0m [0mimport jsonschema[0m
[33m 24[0m [0mfrom jsonschema import validate[0m                                                                                                     [0m[33m 21[0m [0mfrom jsonschema import validate[0m
[33m 25[0m [0mimport jsl[0m                                                                                                                          [0m[33m 22[0m [0mimport jsl[0m
[1;34m@@ -261,11 +258,11 @@ class ValidateConfigSchema(object):
[0m[33m261[0m [0m                        else:[0m                                                                                                       [0m[33m258[0m [0m                        else:[0m
[33m262[0m [0m                            path += '.{}'.format(element)[0m                                                                           [0m[33m259[0m [0m                            path += '.{}'.format(element)[0m
[33m263[0m [0m                exc = 'Schema validation failed - {} - {}'.format([0m                                                                  [0m[33m260[0m [0m                exc = 'Schema validation failed - {} - {}'.format([0m
[33m264[0m [31m                    path, error[4m[31m.message[0m[31m)[0m                                                                                            [0m[33m261[0m [32m                    path, [7m[32mstr([0m[32merror[4m[32m)[0m[32m)[0m
[33m265[0m [0m            else:[0m                                                                                                                   [0m[33m262[0m [0m            else:[0m
[33m266[0m [0m                exc = 'Schema validation failed - {} - {}'.format([0m                                                                  [0m[33m263[0m [0m                exc = 'Schema validation failed - {} - {}'.format([0m
[33m267[0m [31m                    error.cause, error[4m[31m.message[0m[31m)[0m                                                                                     [0m[33m264[0m [32m                    error.cause, [7m[32mstr([0m[32merror[4m[32m)[0m[32m)[0m
[33m268[0m [31m            if 'Additional properties are not allowed' in error[4m[31m.message[0m[31m:[0m                                                            [0m[33m265[0m [32m            if 'Additional properties are not allowed' in [7m[32mstr([0m[32merror[4m[32m)[0m[32m:[0m
[33m269[0m [0m                raise UserException(exc)[0m                                                                                            [0m[33m266[0m [0m                raise UserException(exc)[0m
[33m270[0m [0m            else:[0m                                                                                                                   [0m[33m267[0m [0m            else:[0m
[33m271[0m [0m                raise UserCriticalException(exc)[0m                                                                                    [0m[33m268[0m [0m                raise UserCriticalException(exc)[0m
[36mdiff --git a/scripts/python/lxc_conf.py b/scripts/python/lxc_conf.py
[0m[36mindex 1145fdc..af71cb9 100644
[0m[33m--- a/scripts/python/lxc_conf.py
[0m[33m+++ b/scripts/python/lxc_conf.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Create lxc-conf.yml"""[0m                                                                                                            [0m[33m 2[0m [0m"""Create lxc-conf.yml"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[33m24[0m [0mimport os[0m                                                                                                                            [0m[33m21[0m [0mimport os[0m
[33m25[0m [0mimport platform[0m                                                                                                                      [0m[33m22[0m [0mimport platform[0m
[1;34m@@ -64,15 +61,15 @@ class LxcConf(object):
[0m[33m64[0m [0m            sys.exit(1)[0m                                                                                                              [0m[33m61[0m [0m            sys.exit(1)[0m
[33m65[0m [0m        except TemplateAssertionError as exc:[0m                                                                                        [0m[33m62[0m [0m        except TemplateAssertionError as exc:[0m
[33m66[0m [0m            self.log.error('Template assertion error: %s in %s, line %d' % ([0m                                                         [0m[33m63[0m [0m            self.log.error('Template assertion error: %s in %s, line %d' % ([0m
[33m67[0m [31m                exc[4m[31m.message[0m[31m, exc.filename, exc.lineno))[0m                                                                              [0m[33m64[0m [32m                [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, exc.filename, exc.lineno))[0m
[33m68[0m [0m            print('Template assertion error: %s in %s, line %d' % ([0m                                                                  [0m[33m65[0m [0m            print('Template assertion error: %s in %s, line %d' % ([0m
[33m69[0m [31m                exc[4m[31m.message[0m[31m, exc.filename, exc.lineno))[0m                                                                              [0m[33m66[0m [32m                [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, exc.filename, exc.lineno))[0m
[33m70[0m [0m            sys.exit(1)[0m                                                                                                              [0m[33m67[0m [0m            sys.exit(1)[0m
[33m71[0m [0m        except TemplateSyntaxError as exc:[0m                                                                                           [0m[33m68[0m [0m        except TemplateSyntaxError as exc:[0m
[33m72[0m [0m            self.log.error('Template syntax error: %s in %s, line %d' % ([0m                                                            [0m[33m69[0m [0m            self.log.error('Template syntax error: %s in %s, line %d' % ([0m
[33m73[0m [31m                exc[4m[31m.message[0m[31m, exc.filename, exc.lineno))[0m                                                                              [0m[33m70[0m [32m                [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, exc.filename, exc.lineno))[0m
[33m74[0m [0m            print('Template syntax error: %s in %s, line %d' % ([0m                                                                     [0m[33m71[0m [0m            print('Template syntax error: %s in %s, line %d' % ([0m
[33m75[0m [31m                exc[4m[31m.message[0m[31m, exc.filename, exc.lineno))[0m                                                                              [0m[33m72[0m [32m                [7m[32mstr([0m[32mexc[4m[32m)[0m[32m, exc.filename, exc.lineno))[0m
[33m76[0m [0m            sys.exit(1)[0m                                                                                                              [0m[33m73[0m [0m            sys.exit(1)[0m
[33m77[0m [0m[0m                                                                                                                                     [0m[33m74[0m [0m[0m
[33m78[0m [0m        nets = [][0m                                                                                                                    [0m[33m75[0m [0m        nets = [][0m
[36mdiff --git a/scripts/python/mock_inventory.py b/scripts/python/mock_inventory.py
[0m[36mindex 4bbc7e4..4a4954d 100755
[0m[33m--- a/scripts/python/mock_inventory.py
[0m[33m+++ b/scripts/python/mock_inventory.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                          [0m[33m  2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[33m  5[0m [0m#[0m                                                                                                                                   [0m[33m  5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport argparse[0m                                                                                                                     [0m[33m 18[0m [0mimport argparse[0m
[33m 22[0m [0mimport os[0m                                                                                                                           [0m[33m 19[0m [0mimport os[0m
[33m 23[0m [0mfrom shutil import copy2[0m                                                                                                            [0m[33m 20[0m [0mfrom shutil import copy2[0m
[1;34m@@ -109,7 +106,7 @@ def get_switch_ip_to_mac_map(inv):
[0m[33m109[0m [0m    switch_ip_to_mac_map = AttrDict()[0m                                                                                               [0m[33m106[0m [0m    switch_ip_to_mac_map = AttrDict()[0m
[33m110[0m [0m    rack_id_to_ip = AttrDict()[0m                                                                                                      [0m[33m107[0m [0m    rack_id_to_ip = AttrDict()[0m
[33m111[0m [0m[0m                                                                                                                                    [0m[33m108[0m [0m[0m
[33m112[0m [31m    for rack_id, rack_ip in inv.inv['ipaddr-data-switch'].ite[7m[31mrite[0m[31mms():[0m                                                              [0m[33m109[0m [32m    for rack_id, rack_ip in inv.inv['ipaddr-data-switch'].items():[0m
[33m113[0m [0m        rack_id_to_ip[rack_id] = rack_ip[0m                                                                                            [0m[33m110[0m [0m        rack_id_to_ip[rack_id] = rack_ip[0m
[33m114[0m [0m[0m                                                                                                                                    [0m[33m111[0m [0m[0m
[33m115[0m [0m    for _, template in inv.inv['node-templates'].items():[0m                                                                           [0m[33m112[0m [0m    for _, template in inv.inv['node-templates'].items():[0m
[36mdiff --git a/scripts/python/remove_client_host_keys.py b/scripts/python/remove_client_host_keys.py
[0m[36mindex 8c24662..54d89e2 100644
[0m[33m--- a/scripts/python/remove_client_host_keys.py
[0m[33m+++ b/scripts/python/remove_client_host_keys.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport sys[0m                                                                                                                           [0m[33m19[0m [0mimport sys[0m
[33m23[0m [0mimport os.path[0m                                                                                                                       [0m[33m20[0m [0mimport os.path[0m
[36mdiff --git a/scripts/python/set_data_switch_config.py b/scripts/python/set_data_switch_config.py
[0m[36mindex a43ccf2..0526b0b 100644
[0m[33m--- a/scripts/python/set_data_switch_config.py
[0m[33m+++ b/scripts/python/set_data_switch_config.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0m[0m                                                                                                                                     [0m[33m20[0m [0m[0m
[36mdiff --git a/scripts/python/set_port_macs.py b/scripts/python/set_port_macs.py
[0m[36mindex 9803db8..b96df86 100644
[0m[33m--- a/scripts/python/set_port_macs.py
[0m[33m+++ b/scripts/python/set_port_macs.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[36mdiff --git a/scripts/python/show_mgmt_switches.py b/scripts/python/show_mgmt_switches.py
[0m[36mindex 139e2e3..fe445dc 100755
[0m[33m--- a/scripts/python/show_mgmt_switches.py
[0m[33m+++ b/scripts/python/show_mgmt_switches.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                          [0m[33m  2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[33m  5[0m [0m#[0m                                                                                                                                   [0m[33m  5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport sys[0m                                                                                                                          [0m[33m 18[0m [0mimport sys[0m
[33m 22[0m [0mimport os.path[0m                                                                                                                      [0m[33m 19[0m [0mimport os.path[0m
[33m 23[0m [0mimport subprocess[0m                                                                                                                   [0m[33m 20[0m [0mimport subprocess[0m
[1;34m@@ -35,7 +32,7 @@ ssh_log = FILE_PATH + '/gen_ssh.log'
[0m[33m 35[0m [0mdef rlinput(prompt, prefill=''):[0m                                                                                                    [0m[33m 32[0m [0mdef rlinput(prompt, prefill=''):[0m
[33m 36[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m                                                                [0m[33m 33[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m
[33m 37[0m [0m    try:[0m                                                                                                                            [0m[33m 34[0m [0m    try:[0m
[33m 38[0m [31m        return [7m[31mraw_[0m[31minput(prompt)[0m                                                                                                    [0m[33m 35[0m [32m        return input(prompt)[0m
[33m 39[0m [0m    finally:[0m                                                                                                                        [0m[33m 36[0m [0m    finally:[0m
[33m 40[0m [0m        readline.set_startup_hook()[0m                                                                                                 [0m[33m 37[0m [0m        readline.set_startup_hook()[0m
[33m 41[0m [0m[0m                                                                                                                                    [0m[33m 38[0m [0m[0m
[1;34m@@ -59,7 +56,8 @@ def main(log, inv_file):
[0m[33m 59[0m [0m        print('Switch access information not present in: {}'.format(inv_file))[0m                                                      [0m[33m 56[0m [0m        print('Switch access information not present in: {}'.format(inv_file))[0m
[33m 60[0m [0m        print('Cluster Genesis may be in "passive" mode')[0m                                                                           [0m[33m 57[0m [0m        print('Cluster Genesis may be in "passive" mode')[0m
[33m 61[0m [0m    else:[0m                                                                                                                           [0m[33m 58[0m [0m    else:[0m
[33m 62[0m [31m        output = subprocess.check_output(['bash', '-c', 'ip route'][7m[31m)[0m[31m[0m                                                                [0m[33m 59[0m [32m        output = subprocess.check_output(['bash', '-c', 'ip route'][0m
[33m   [0m                                                                                                                                     [0m[33m 60[0m [32m                                         ).decode("utf-8")[0m
[33m 63[0m [0m        if mgmt_network_ext_cidr in output:[0m                                                                                         [0m[33m 61[0m [0m        if mgmt_network_ext_cidr in output:[0m
[33m 64[0m [0m            key_addr = 'addr_ext'[0m                                                                                                   [0m[33m 62[0m [0m            key_addr = 'addr_ext'[0m
[33m 65[0m [0m        elif mgmt_network_gen in output:[0m                                                                                            [0m[33m 63[0m [0m        elif mgmt_network_gen in output:[0m
[1;34m@@ -104,7 +102,8 @@ def main(log, inv_file):
[0m[33m104[0m [0m            password = rlinput("Enter a password for the management switch (last char = '.' to terminate): ", password)[0m             [0m[33m102[0m [0m            password = rlinput("Enter a password for the management switch (last char = '.' to terminate): ", password)[0m
[33m105[0m [0m            if password[-1:] == '.':[0m                                                                                                [0m[33m103[0m [0m            if password[-1:] == '.':[0m
[33m106[0m [0m                sys.exit(0)[0m                                                                                                         [0m[33m104[0m [0m                sys.exit(0)[0m
[33m107[0m [31m            output = subprocess.check_output(['bash', '-c', 'ip route'][7m[31m)[0m[31m[0m                                                            [0m[33m105[0m [32m            output = subprocess.check_output(['bash', '-c', 'ip route'][0m
[33m   [0m                                                                                                                                     [0m[33m106[0m [32m                                             ).decode("utf-8")[0m
[33m108[0m [0m            if mgmt_network_ext_cidr in output:[0m                                                                                     [0m[33m107[0m [0m            if mgmt_network_ext_cidr in output:[0m
[33m109[0m [0m                addr = addr[:addr.find('/')][0m                                                                                        [0m[33m108[0m [0m                addr = addr[:addr.find('/')][0m
[33m110[0m [0m                break[0m                                                                                                               [0m[33m109[0m [0m                break[0m
[1;34m@@ -153,7 +152,7 @@ def print_lines(str, line_list):
[0m[33m153[0m [0mdef get_int_input(prompt_str, minn, maxx):[0m                                                                                          [0m[33m152[0m [0mdef get_int_input(prompt_str, minn, maxx):[0m
[33m154[0m [0m    while 1:[0m                                                                                                                        [0m[33m153[0m [0m    while 1:[0m
[33m155[0m [0m        try:[0m                                                                                                                        [0m[33m154[0m [0m        try:[0m
[33m156[0m [31m            input = int([7m[31mraw_[0m[31minput(prompt_str))[0m                                                                                      [0m[33m155[0m [32m            input = int(input(prompt_str))[0m
[33m157[0m [0m            if not (minn <= input <= maxx):[0m                                                                                         [0m[33m156[0m [0m            if not (minn <= input <= maxx):[0m
[33m158[0m [0m                raise ValueError()[0m                                                                                                  [0m[33m157[0m [0m                raise ValueError()[0m
[33m159[0m [0m            else:[0m                                                                                                                   [0m[33m158[0m [0m            else:[0m
[36mdiff --git a/scripts/python/show_status.py b/scripts/python/show_status.py
[0m[36mindex b1af353..4c64fc7 100755
[0m[33m--- a/scripts/python/show_status.py
[0m[33m+++ b/scripts/python/show_status.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                          [0m[33m  2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -16,9 +16,6 @@
[0m[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [0m# python ./show_status.py /home/rhel72/config-test.yml DEBUG[0m                                                                        [0m[33m 17[0m [0m# python ./show_status.py /home/rhel72/config-test.yml DEBUG[0m
[33m 18[0m [1;31m[0m [0m[33m   [0m 
[33m 19[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 20[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 21[0m [0m[0m                                                                                                                                    [0m[33m 18[0m [0m[0m
[33m 22[0m [0mimport os[0m                                                                                                                           [0m[33m 19[0m [0mimport os[0m
[33m 23[0m [0mimport sys[0m                                                                                                                          [0m[33m 20[0m [0mimport sys[0m
[33m 24[0m [0mimport subprocess[0m                                                                                                                   [0m[33m 21[0m [0mimport subprocess[0m
[1;34m@@ -42,7 +39,7 @@ FILE_PATH = os.path.dirname(os.path.abspath(__file__))
[0m[33m 42[0m [0mdef rlinput(prompt, prefill=''):[0m                                                                                                    [0m[33m 39[0m [0mdef rlinput(prompt, prefill=''):[0m
[33m 43[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m                                                                [0m[33m 40[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m
[33m 44[0m [0m    try:[0m                                                                                                                            [0m[33m 41[0m [0m    try:[0m
[33m 45[0m [31m        return [7m[31mraw_[0m[31minput(prompt)[0m                                                                                                    [0m[33m 42[0m [32m        return input(prompt)[0m
[33m 46[0m [0m    finally:[0m                                                                                                                        [0m[33m 43[0m [0m    finally:[0m
[33m 47[0m [0m        readline.set_startup_hook()[0m                                                                                                 [0m[33m 44[0m [0m        readline.set_startup_hook()[0m
[33m 48[0m [0m[0m                                                                                                                                    [0m[33m 45[0m [0m[0m
[1;34m@@ -58,7 +55,8 @@ def main(log, inv_file):
[0m[33m 58[0m [0m    vlan_mgmt_client = inv.get_vlan_mgmt_client_network()[0m                                                                           [0m[33m 55[0m [0m    vlan_mgmt_client = inv.get_vlan_mgmt_client_network()[0m
[33m 59[0m [0m    bridge_vlan_mgmt_client = 'br' + str(vlan_mgmt_client)[0m                                                                          [0m[33m 56[0m [0m    bridge_vlan_mgmt_client = 'br' + str(vlan_mgmt_client)[0m
[33m 60[0m [0m[0m                                                                                                                                    [0m[33m 57[0m [0m[0m
[33m 61[0m [31m    output = subprocess.check_output(['bash', '-c', 'brctl show'][7m[31m)[0m[31m[0m                                                                  [0m[33m 58[0m [32m    output = subprocess.check_output(['bash', '-c', 'brctl show'][0m
[33m   [0m                                                                                                                                     [0m[33m 59[0m [32m                                     ).decode("utf-8")[0m
[33m 62[0m [0m    if bridge_vlan_mgmt not in output:[0m                                                                                              [0m[33m 60[0m [0m    if bridge_vlan_mgmt not in output:[0m
[33m 63[0m [0m        print('    Management bridge {} not found\n'.format(bridge_vlan_mgmt))[0m                                                      [0m[33m 61[0m [0m        print('    Management bridge {} not found\n'.format(bridge_vlan_mgmt))[0m
[33m 64[0m [0m    else:[0m                                                                                                                           [0m[33m 62[0m [0m    else:[0m
[1;34m@@ -71,7 +69,8 @@ def main(log, inv_file):
[0m[33m 71[0m [0m            ['bash', '-c', 'brctl show ' + bridge_vlan_mgmt_client]))[0m                                                               [0m[33m 69[0m [0m            ['bash', '-c', 'brctl show ' + bridge_vlan_mgmt_client]))[0m
[33m 72[0m [0m[0m                                                                                                                                    [0m[33m 70[0m [0m[0m
[33m 73[0m [0m    print('Container Status: \n')[0m                                                                                                   [0m[33m 71[0m [0m    print('Container Status: \n')[0m
[33m 74[0m [31m    output = subprocess.check_output(['bash', '-c', 'sudo lxc-ls -f'][7m[31m)[0m[31m[0m                                                              [0m[33m 72[0m [32m    output = subprocess.check_output(['bash', '-c', 'sudo lxc-ls -f'][0m
[33m   [0m                                                                                                                                     [0m[33m 73[0m [32m                                     ).decode("utf-8")[0m
[33m 75[0m [0m    if GEN_CONTAINER_NAME + ' ' in output:[0m                                                                                          [0m[33m 74[0m [0m    if GEN_CONTAINER_NAME + ' ' in output:[0m
[33m 76[0m [0m        print(output)[0m                                                                                                               [0m[33m 75[0m [0m        print(output)[0m
[33m 77[0m [0m    else:[0m                                                                                                                           [0m[33m 76[0m [0m    else:[0m
[1;34m@@ -154,7 +153,7 @@ def print_lines(str, line_list):
[0m[33m154[0m [0mdef get_int_input(prompt_str, minn, maxx):[0m                                                                                          [0m[33m153[0m [0mdef get_int_input(prompt_str, minn, maxx):[0m
[33m155[0m [0m    while 1:[0m                                                                                                                        [0m[33m154[0m [0m    while 1:[0m
[33m156[0m [0m        try:[0m                                                                                                                        [0m[33m155[0m [0m        try:[0m
[33m157[0m [31m            input = int([7m[31mraw_[0m[31minput(prompt_str))[0m                                                                                      [0m[33m156[0m [32m            input = int(input(prompt_str))[0m
[33m158[0m [0m            if not (minn <= input <= maxx):[0m                                                                                         [0m[33m157[0m [0m            if not (minn <= input <= maxx):[0m
[33m159[0m [0m                raise ValueError()[0m                                                                                                  [0m[33m158[0m [0m                raise ValueError()[0m
[33m160[0m [0m            else:[0m                                                                                                                   [0m[33m159[0m [0m            else:[0m
[36mdiff --git a/scripts/python/switch-cfg.py b/scripts/python/switch-cfg.py
[0m[36mindex 796bf65..e2d332f 100755
[0m[33m--- a/scripts/python/switch-cfg.py
[0m[33m+++ b/scripts/python/switch-cfg.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport sys[0m                                                                                                                           [0m[33m19[0m [0mimport sys[0m
[33m23[0m [0mimport re[0m                                                                                                                            [0m[33m20[0m [0mimport re[0m
[1;34m@@ -34,7 +31,7 @@ from lib.genesis import GEN_PATH, Color
[0m[33m34[0m [0mdef rlinput(prompt, prefill=''):[0m                                                                                                     [0m[33m31[0m [0mdef rlinput(prompt, prefill=''):[0m
[33m35[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m                                                                 [0m[33m32[0m [0m    readline.set_startup_hook(lambda: readline.insert_text(prefill))[0m
[33m36[0m [0m    try:[0m                                                                                                                             [0m[33m33[0m [0m    try:[0m
[33m37[0m [31m        return [7m[31mraw_[0m[31minput(prompt)[0m                                                                                                     [0m[33m34[0m [32m        return input(prompt)[0m
[33m38[0m [0m    finally:[0m                                                                                                                         [0m[33m35[0m [0m    finally:[0m
[33m39[0m [0m        readline.set_startup_hook()[0m                                                                                                  [0m[33m36[0m [0m        readline.set_startup_hook()[0m
[33m40[0m [0m[0m                                                                                                                                     [0m[33m37[0m [0m[0m
[36mdiff --git a/scripts/python/switch-test-passive.py b/scripts/python/switch-test-passive.py
[0m[36mindex fe65f19..b596404 100755
[0m[33m--- a/scripts/python/switch-test-passive.py
[0m[33m+++ b/scripts/python/switch-test-passive.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mfrom lib.logger import Logger[0m                                                                                                        [0m[33m20[0m [0mfrom lib.logger import Logger[0m
[36mdiff --git a/scripts/python/teardown.py b/scripts/python/teardown.py
[0m[36mindex b0dae4e..c0305f9 100755
[0m[33m--- a/scripts/python/teardown.py
[0m[33m+++ b/scripts/python/teardown.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Cluster Genesis 'teardown' command"""[0m                                                                                             [0m[33m 2[0m [0m"""Cluster Genesis 'teardown' command"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 4[0m [0m# Copyright 2018 IBM Corp.[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[33m24[0m [0mimport os.path[0m                                                                                                                       [0m[33m21[0m [0mimport os.path[0m
[33m25[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[1;34m@@ -78,7 +75,7 @@ class Teardown(object):
[0m[33m78[0m [0m        self.config_file_path = os.path.abspath(self.config_file_path)[0m                                                               [0m[33m75[0m [0m        self.config_file_path = os.path.abspath(self.config_file_path)[0m
[33m79[0m [0m[0m                                                                                                                                     [0m[33m76[0m [0m[0m
[33m80[0m [0m        print('\nUsing {}'.format(self.config_file_path))[0m                                                                            [0m[33m77[0m [0m        print('\nUsing {}'.format(self.config_file_path))[0m
[33m81[0m [31m        resp = [7m[31mraw_[0m[31minput('Enter to continue. "T" to terminate ')[0m                                                                     [0m[33m78[0m [32m        resp = input('Enter to continue. "T" to terminate ')[0m
[33m82[0m [0m        if resp == 'T':[0m                                                                                                              [0m[33m79[0m [0m        if resp == 'T':[0m
[33m83[0m [0m            sys.exit('POWER-Up stopped at user request')[0m                                                                             [0m[33m80[0m [0m            sys.exit('POWER-Up stopped at user request')[0m
[33m84[0m [0m[0m                                                                                                                                     [0m[33m81[0m [0m[0m
[36mdiff --git a/scripts/python/teardown_deployer_container.py b/scripts/python/teardown_deployer_container.py
[0m[36mindex c5cd7df..ad66695 100755
[0m[33m--- a/scripts/python/teardown_deployer_container.py
[0m[33m+++ b/scripts/python/teardown_deployer_container.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport argparse[0m                                                                                                                      [0m[33m18[0m [0mimport argparse[0m
[33m22[0m [0mimport os.path[0m                                                                                                                       [0m[33m19[0m [0mimport os.path[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[1;34m@@ -32,7 +29,7 @@ import lib.logger as logger
[0m[33m32[0m [0mdef _sub_proc_exec(cmd):[0m                                                                                                             [0m[33m29[0m [0mdef _sub_proc_exec(cmd):[0m
[33m33[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m                                                                              [0m[33m30[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m
[33m34[0m [0m    stdout, stderr = data.communicate()[0m                                                                                              [0m[33m31[0m [0m    stdout, stderr = data.communicate()[0m
[33m35[0m [31m[7m[31m    return stdout, stderr[0m[31m[0m                                                                                                            [0m[33m32[0m [32m[7m[32m    return stdout.decode("utf-8"), stderr.decode("utf-8")[0m[32m[0m
[33m36[0m [0m[0m                                                                                                                                     [0m[33m33[0m [0m[0m
[33m37[0m [0m[0m                                                                                                                                     [0m[33m34[0m [0m[0m
[33m38[0m [0mdef teardown_deployer_container(config_path):[0m                                                                                        [0m[33m35[0m [0mdef teardown_deployer_container(config_path):[0m
[36mdiff --git a/scripts/python/teardown_deployer_networks.py b/scripts/python/teardown_deployer_networks.py
[0m[36mindex d686782..4897376 100755
[0m[33m--- a/scripts/python/teardown_deployer_networks.py
[0m[33m+++ b/scripts/python/teardown_deployer_networks.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                          [0m[33m  2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[33m  5[0m [0m#[0m                                                                                                                                   [0m[33m  5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport sys[0m                                                                                                                          [0m[33m 18[0m [0mimport sys[0m
[33m 22[0m [0mimport os[0m                                                                                                                           [0m[33m 19[0m [0mimport os[0m
[33m 23[0m [0mimport re[0m                                                                                                                           [0m[33m 20[0m [0mimport re[0m
[1;34m@@ -174,10 +171,10 @@ def _delete_br_cfg_file(bridge):
[0m[33m174[0m [0m    """[0m                                                                                                                             [0m[33m171[0m [0m    """[0m
[33m175[0m [0m    opsys = platform.dist()[0][0m                                                                                                      [0m[33m172[0m [0m    opsys = platform.dist()[0][0m
[33m176[0m [0m    LOG.debug('OS: ' + opsys)[0m                                                                                                       [0m[33m173[0m [0m    LOG.debug('OS: ' + opsys)[0m
[33m177[0m [31m    if opsys not in ('[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m', 'redhat'):[0m                                                                                           [0m[33m174[0m [32m    if opsys not in ('[4m[32mde[0m[32mb[4m[32mia[0m[32mn', 'redhat'):[0m
[33m178[0m [0m        LOG.error('Unsupported Operating System')[0m                                                                                   [0m[33m175[0m [0m        LOG.error('Unsupported Operating System')[0m
[33m179[0m [0m        sys.exit('Unsupported Operating System')[0m                                                                                    [0m[33m176[0m [0m        sys.exit('Unsupported Operating System')[0m
[33m180[0m [31m    if opsys == '[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m':[0m                                                                                                           [0m[33m177[0m [32m    if opsys == '[4m[32mde[0m[32mb[4m[32mia[0m[32mn':[0m
[33m181[0m [0m        if os.path.exists('/etc/network/interfaces.d/' + bridge):[0m                                                                   [0m[33m178[0m [0m        if os.path.exists('/etc/network/interfaces.d/' + bridge):[0m
[33m182[0m [0m            LOG.info('Deleting bridge config file {}'.format(bridge))[0m                                                               [0m[33m179[0m [0m            LOG.info('Deleting bridge config file {}'.format(bridge))[0m
[33m183[0m [0m            os.system('sudo rm /etc/network/interfaces.d/{}'.format(bridge))[0m                                                        [0m[33m180[0m [0m            os.system('sudo rm /etc/network/interfaces.d/{}'.format(bridge))[0m
[1;34m@@ -204,7 +201,7 @@ def _get_ifcs_file_list():
[0m[33m204[0m [0m    """ Returns the absolute path for all interface definition files[0m                                                                [0m[33m201[0m [0m    """ Returns the absolute path for all interface definition files[0m
[33m205[0m [0m    """[0m                                                                                                                             [0m[33m202[0m [0m    """[0m
[33m206[0m [0m    opsys = platform.dist()[0][0m                                                                                                      [0m[33m203[0m [0m    opsys = platform.dist()[0][0m
[33m207[0m [31m    if opsys == '[4m[31mU[0m[31mb[4m[31mu[0m[31mn[7m[31mtu[0m[31m':[0m                                                                                                           [0m[33m204[0m [32m    if opsys == '[4m[32mde[0m[32mb[4m[32mia[0m[32mn':[0m
[33m208[0m [0m        path = '/etc/network/'[0m                                                                                                      [0m[33m205[0m [0m        path = '/etc/network/'[0m
[33m209[0m [0m        pathd = '/etc/network/interfaces.d/'[0m                                                                                        [0m[33m206[0m [0m        pathd = '/etc/network/interfaces.d/'[0m
[33m210[0m [0m        file_list = [][0m                                                                                                              [0m[33m207[0m [0m        file_list = [][0m
[1;34m@@ -249,7 +246,8 @@ def _is_ifc_attached_elsewhere(ifc, bridge):
[0m[33m249[0m [0m    Returns:[0m                                                                                                                        [0m[33m246[0m [0m    Returns:[0m
[33m250[0m [0m        True if the interface is already being used (is unavailable)[0m                                                                [0m[33m247[0m [0m        True if the interface is already being used (is unavailable)[0m
[33m251[0m [0m    """[0m                                                                                                                             [0m[33m248[0m [0m    """[0m
[33m252[0m [31m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][7m[31m).splitlines()[0m[31m[0m                                                    [0m[33m249[0m [32m    br_list = subprocess.check_output(['bash', '-c', 'brctl show'][0m
[33m   [0m                                                                                                                                     [0m[33m250[0m [32m                                      ).decode("utf-8").splitlines()[0m
[33m253[0m [0m    output = [][0m                                                                                                                     [0m[33m251[0m [0m    output = [][0m
[33m254[0m [0m    for line in br_list[1:]:[0m                                                                                                        [0m[33m252[0m [0m    for line in br_list[1:]:[0m
[33m255[0m [0m        if line.startswith('\t'):[0m                                                                                                   [0m[33m253[0m [0m        if line.startswith('\t'):[0m
[36mdiff --git a/scripts/python/validate_cluster_hardware.py b/scripts/python/validate_cluster_hardware.py
[0m[36mindex 1cf8c0a..3b744e4 100755
[0m[33m--- a/scripts/python/validate_cluster_hardware.py
[0m[33m+++ b/scripts/python/validate_cluster_hardware.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m   1[0m [31m#!/usr/bin/env python[0m                                                                                                              [0m[33m   1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m   2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                         [0m[33m   2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m   3[0m [0m#[0m                                                                                                                                  [0m[33m   3[0m [0m#[0m
[33m   4[0m [0m# All Rights Reserved.[0m                                                                                                             [0m[33m   4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m  15[0m [0m# See the License for the specific language governing permissions and[0m                                                              [0m[33m  15[0m [0m# See the License for the specific language governing permissions and[0m
[33m  16[0m [0m# limitations under the License.[0m                                                                                                   [0m[33m  16[0m [0m# limitations under the License.[0m
[33m  17[0m [1;31m[0m [0m[33m    [0m 
[33m  18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m    [0m 
[33m  19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m    [0m 
[33m  20[0m [0m[0m                                                                                                                                   [0m[33m  17[0m [0m[0m
[33m  21[0m [0mimport argparse[0m                                                                                                                    [0m[33m  18[0m [0mimport argparse[0m
[33m  22[0m [0mimport time[0m                                                                                                                        [0m[33m  19[0m [0mimport time[0m
[33m  23[0m [0mimport sys[0m                                                                                                                         [0m[33m  20[0m [0mimport sys[0m
[1;34m@@ -27,6 +24,7 @@ from subprocess import Popen, PIPE
[0m[33m  27[0m [0mfrom pyroute2 import IPRoute, NetlinkError[0m                                                                                         [0m[33m  24[0m [0mfrom pyroute2 import IPRoute, NetlinkError[0m
[33m  28[0m [0mfrom netaddr import IPNetwork[0m                                                                                                      [0m[33m  25[0m [0mfrom netaddr import IPNetwork[0m
[33m  29[0m [0mfrom pyghmi.ipmi import command[0m                                                                                                    [0m[33m  26[0m [0mfrom pyghmi.ipmi import command[0m
[33m    [0m                                                                                                                                    [0m[33m  27[0m [32mfrom pyghmi.ipmi.private import session[0m
[33m  30[0m [0mfrom pyghmi.exceptions import IpmiException[0m                                                                                        [0m[33m  28[0m [0mfrom pyghmi.exceptions import IpmiException[0m
[33m  31[0m [0mfrom orderedattrdict import AttrDict[0m                                                                                               [0m[33m  29[0m [0mfrom orderedattrdict import AttrDict[0m
[33m  32[0m [0mfrom tabulate import tabulate[0m                                                                                                      [0m[33m  30[0m [0mfrom tabulate import tabulate[0m
[1;34m@@ -71,7 +69,7 @@ def _sub_proc_launch(cmd, stdout=PIPE, stderr=PIPE):
[0m[33m  71[0m [0mdef _sub_proc_exec(cmd, stdout=PIPE, stderr=PIPE):[0m                                                                                 [0m[33m  69[0m [0mdef _sub_proc_exec(cmd, stdout=PIPE, stderr=PIPE):[0m
[33m  72[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m                                                                            [0m[33m  70[0m [0m    data = Popen(cmd.split(), stdout=PIPE, stderr=PIPE)[0m
[33m  73[0m [0m    stdout, stderr = data.communicate()[0m                                                                                            [0m[33m  71[0m [0m    stdout, stderr = data.communicate()[0m
[33m  74[0m [31m[7m[31m    return stdout, stderr[0m[31m[0m                                                                                                          [0m[33m  72[0m [32m[7m[32m    return stdout.decode("utf-8"), stderr.decode("utf-8")[0m[32m[0m
[33m  75[0m [0m[0m                                                                                                                                   [0m[33m  73[0m [0m[0m
[33m  76[0m [0m[0m                                                                                                                                   [0m[33m  74[0m [0m[0m
[33m  77[0m [0mclass NetNameSpace(object):[0m                                                                                                        [0m[33m  75[0m [0mclass NetNameSpace(object):[0m
[1;34m@@ -108,10 +106,10 @@ class NetNameSpace(object):
[0m[33m 108[0m [0m        self.peer_ifc = 'veth-' + self.name[0m                                                                                        [0m[33m 106[0m [0m        self.peer_ifc = 'veth-' + self.name[0m
[33m 109[0m [0m[0m                                                                                                                                   [0m[33m 107[0m [0m[0m
[33m 110[0m [0m        try:[0m                                                                                                                       [0m[33m 108[0m [0m        try:[0m
[33m 111[0m [31m            self.ip.link[7m[31m_create[0m[31m([0m                                                                                                   [0m[33m 109[0m [32m            self.ip.link([0m
[33m 112[0m [31m                ifname=self.br_ifc, peer=self.peer_ifc, kind='veth')[0m                                                               [0m[33m 110[0m [32m               [7m[32m "add",[0m[32m ifname=self.br_ifc, peer=self.peer_ifc, kind='veth')[0m
[33m 113[0m [0m        except NetlinkError as exc:[0m                                                                                                [0m[33m 111[0m [0m        except NetlinkError as exc:[0m
[33m 114[0m [31m            if 'File exists' not in exc:[0m                                                                                           [0m[33m 112[0m [32m            if 'File exists' not in [7m[32mstr([0m[32mexc[7m[32m)[0m[32m:[0m
[33m 115[0m [0m                self.log.error('Failed creating veth pair. {}'.format(exc))[0m                                                        [0m[33m 113[0m [0m                self.log.error('Failed creating veth pair. {}'.format(exc))[0m
[33m 116[0m [0m                sys.exit(1)[0m                                                                                                        [0m[33m 114[0m [0m                sys.exit(1)[0m
[33m 117[0m [0m[0m                                                                                                                                   [0m[33m 115[0m [0m[0m
[1;34m@@ -287,17 +285,14 @@ class ValidateClusterHardware(object):
[0m[33m 287[0m [0m            cred_list.sort(key=lambda x: x[2], reverse=True)[0m                                                                       [0m[33m 285[0m [0m            cred_list.sort(key=lambda x: x[2], reverse=True)[0m
[33m 288[0m [0m            for j, creds in enumerate(cred_list):[0m                                                                                  [0m[33m 286[0m [0m            for j, creds in enumerate(cred_list):[0m
[33m 289[0m [0m                try:[0m                                                                                                               [0m[33m 287[0m [0m                try:[0m
[33m 290[0m [31m[7m[31m                    bmc = command.Command([0m[31m[0m                                                                                         [0m[33m 288[0m [32m[7m[32m                    bmc = self._bmc_ipmi_login(node, creds[0], creds[1])[0m[32m[0m
[33m 291[0m [1;31m                        node,[0m [0m[33m    [0m 
[33m 292[0m [1;31m                        userid=creds[0],[0m [0m[33m    [0m 
[33m 293[0m [1;31m                        password=creds[1])[0m [0m[33m    [0m 
[33m 294[0m [0m                except IpmiException as exc:[0m                                                                                       [0m[33m 289[0m [0m                except IpmiException as exc:[0m
[33m 295[0m [31m                    if exc[4m[31m.message[0m[31m is not None:[0m                                                                                    [0m[33m 290[0m [32m                    if [7m[32mstr([0m[32mexc[4m[32m)[0m[32m is not None:[0m
[33m 296[0m [31m                        if 'Incorrect password' in exc[4m[31m.message[0m[31m or \[0m                                                                [0m[33m 291[0m [32m                        if 'Incorrect password' in [7m[32mstr([0m[32mexc[4m[32m)[0m[32m or \[0m
[33m 297[0m [31m                                'Unauthorized name' in exc[4m[31m.message[0m[31m:[0m                                                                [0m[33m 292[0m [32m                                'Unauthorized name' in [7m[32mstr([0m[32mexc[4m[32m)[0m[32m:[0m
[33m 298[0m [0m                            pass[0m                                                                                                   [0m[33m 293[0m [0m                            pass[0m
[33m 299[0m [0m                    else:[0m                                                                                                          [0m[33m 294[0m [0m                    else:[0m
[33m 300[0m [31m                        self.log.error(exc[4m[31m.message[0m[31m)[0m                                                                                [0m[33m 295[0m [32m                        self.log.error([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m 301[0m [0m                else:[0m                                                                                                              [0m[33m 296[0m [0m                else:[0m
[33m 302[0m [0m                    self.log.debug([0m                                                                                                [0m[33m 297[0m [0m                    self.log.debug([0m
[33m 303[0m [0m                        node + ' power is ' + bmc.get_power()['powerstate'])[0m                                                       [0m[33m 298[0m [0m                        node + ' power is ' + bmc.get_power()['powerstate'])[0m
[1;34m@@ -314,8 +309,7 @@ class ValidateClusterHardware(object):
[0m[33m 314[0m [0m                    except IpmiException as exc:[0m                                                                                   [0m[33m 309[0m [0m                    except IpmiException as exc:[0m
[33m 315[0m [0m                        self.log.error('Failed attempting reset on {}. {}'[0m                                                         [0m[33m 310[0m [0m                        self.log.error('Failed attempting reset on {}. {}'[0m
[33m 316[0m [0m                                       .format(node, exc))[0m                                                                         [0m[33m 311[0m [0m                                       .format(node, exc))[0m
[33m 317[0m [31m                    [4m[31mrc = [0m[31mbmc[4m[31m.[0m[31mipmi_[7m[31msession.[0m[31mlogout()[0m                                                                                 [0m[33m 312[0m [32m                    [4m[32mself._[0m[32mbmc[4m[32m_[0m[32mipmi_logout([7m[32mbmc[0m[32m)[0m
[33m 318[0m [1;31m                    self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m 319[0m [0m                    break[0m                                                                                                          [0m[33m 313[0m [0m                    break[0m
[33m 320[0m [0m        if left != 0:[0m                                                                                                              [0m[33m 314[0m [0m        if left != 0:[0m
[33m 321[0m [0m            self.log.error('IPMI communication succesful with only {} of {} '[0m                                                      [0m[33m 315[0m [0m            self.log.error('IPMI communication succesful with only {} of {} '[0m
[1;34m@@ -472,25 +466,21 @@ class ValidateClusterHardware(object):
[0m[33m 472[0m [0m            reset = False[0m                                                                                                          [0m[33m 466[0m [0m            reset = False[0m
[33m 473[0m [0m            for j, creds in enumerate(cred_list):[0m                                                                                  [0m[33m 467[0m [0m            for j, creds in enumerate(cred_list):[0m
[33m 474[0m [0m                try:[0m                                                                                                               [0m[33m 468[0m [0m                try:[0m
[33m 475[0m [31m[7m[31m                    bmc = command.Command([0m[31m[0m                                                                                         [0m[33m 469[0m [32m[7m[32m                    bmc = self._bmc_ipmi_login(node, creds[0], creds[1])[0m[32m[0m
[33m 476[0m [1;31m                        node,[0m [0m[33m    [0m 
[33m 477[0m [1;31m                        userid=creds[0],[0m [0m[33m    [0m 
[33m 478[0m [1;31m                        password=creds[1])[0m [0m[33m    [0m 
[33m 479[0m [0m                except IpmiException as exc:[0m                                                                                       [0m[33m 470[0m [0m                except IpmiException as exc:[0m
[33m 480[0m [31m                    if exc[4m[31m.message[0m[31m is not None:[0m                                                                                    [0m[33m 471[0m [32m                    if [7m[32mstr([0m[32mexc[4m[32m)[0m[32m is not None:[0m
[33m 481[0m [31m                        if 'Incorrect password' in exc[4m[31m.message[0m[31m or \[0m                                                                [0m[33m 472[0m [32m                        if 'Incorrect password' in [7m[32mstr([0m[32mexc[4m[32m)[0m[32m or \[0m
[33m 482[0m [31m                                'Unauthorized name' in exc[4m[31m.message[0m[31m:[0m                                                                [0m[33m 473[0m [32m                                'Unauthorized name' in [7m[32mstr([0m[32mexc[4m[32m)[0m[32m:[0m
[33m 483[0m [0m                            pass[0m                                                                                                   [0m[33m 474[0m [0m                            pass[0m
[33m 484[0m [0m                    else:[0m                                                                                                          [0m[33m 475[0m [0m                    else:[0m
[33m 485[0m [31m                        self.log.error(exc[4m[31m.message[0m[31m)[0m                                                                                [0m[33m 476[0m [32m                        self.log.error([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m 486[0m [0m                else:[0m                                                                                                              [0m[33m 477[0m [0m                else:[0m
[33m 487[0m [0m                    try:[0m                                                                                                           [0m[33m 478[0m [0m                    try:[0m
[33m 488[0m [0m                        rc = bmc.reset_bmc()[0m                                                                                       [0m[33m 479[0m [0m                        rc = bmc.reset_bmc()[0m
[33m 489[0m [0m                    except IpmiException as exc:[0m                                                                                   [0m[33m 480[0m [0m                    except IpmiException as exc:[0m
[33m 490[0m [0m                        self.log.error('Failed attempting reset on {}'.format(node))[0m                                               [0m[33m 481[0m [0m                        self.log.error('Failed attempting reset on {}'.format(node))[0m
[33m 491[0m [0m                    reset = True[0m                                                                                                   [0m[33m 482[0m [0m                    reset = True[0m
[33m 492[0m [31m                    [4m[31mrc = [0m[31mbmc[4m[31m.[0m[31mipmi_[7m[31msession.[0m[31mlogout()[0m                                                                                 [0m[33m 483[0m [32m                    [4m[32mself._[0m[32mbmc[4m[32m_[0m[32mipmi_logout([7m[32mbmc[0m[32m)[0m
[33m 493[0m [1;31m                    self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m 494[0m [0m                    break[0m                                                                                                          [0m[33m 484[0m [0m                    break[0m
[33m 495[0m [0m            if not reset:[0m                                                                                                          [0m[33m 485[0m [0m            if not reset:[0m
[33m 496[0m [0m                self.log.warning('Unable to reset BMC: {}'.format(node))[0m                                                           [0m[33m 486[0m [0m                self.log.warning('Unable to reset BMC: {}'.format(node))[0m
[1;34m@@ -503,9 +493,9 @@ class ValidateClusterHardware(object):
[0m[33m 503[0m [0m        #           "running IPMI hardware validation.")[0m                                                                           [0m[33m 493[0m [0m        #           "running IPMI hardware validation.")[0m
[33m 504[0m [0m        #     print("Type 'C' to validate cluster nodes defined in current "[0m                                                       [0m[33m 494[0m [0m        #     print("Type 'C' to validate cluster nodes defined in current "[0m
[33m 505[0m [0m        #           "'config.yml'")[0m                                                                                                [0m[33m 495[0m [0m        #           "'config.yml'")[0m
[33m 506[0m [31m        #     resp = [7m[31mraw_[0m[31minput("Type 'T' to terminate Cluster Genesis ")[0m                                                           [0m[33m 496[0m [32m        #     resp = input("Type 'T' to terminate Cluster Genesis ")[0m
[33m 507[0m [0m        #     if resp == 'T':[0m                                                                                                      [0m[33m 497[0m [0m        #     if resp == 'T':[0m
[33m 508[0m [31m        #         resp = [7m[31mraw_[0m[31minput("Type 'y' to confirm ")[0m                                                                         [0m[33m 498[0m [32m        #         resp = input("Type 'y' to confirm ")[0m
[33m 509[0m [0m        #         if resp == 'y':[0m                                                                                                  [0m[33m 499[0m [0m        #         if resp == 'y':[0m
[33m 510[0m [0m        #             self.log.info("'{}' entered. Terminating Genesis at user "[0m                                                   [0m[33m 500[0m [0m        #             self.log.info("'{}' entered. Terminating Genesis at user "[0m
[33m 511[0m [0m        #                           "request".format(resp))[0m                                                                        [0m[33m 501[0m [0m        #                           "request".format(resp))[0m
[1;34m@@ -597,9 +587,9 @@ class ValidateClusterHardware(object):
[0m[33m 597[0m [0m                break[0m                                                                                                              [0m[33m 587[0m [0m                break[0m
[33m 598[0m [0m            print('\n\nPress Enter to continue scanning for cluster nodes.\nOr')[0m                                                   [0m[33m 588[0m [0m            print('\n\nPress Enter to continue scanning for cluster nodes.\nOr')[0m
[33m 599[0m [0m            print("Or enter 'C' to continue cluster deployment with a subset of nodes")[0m                                            [0m[33m 589[0m [0m            print("Or enter 'C' to continue cluster deployment with a subset of nodes")[0m
[33m 600[0m [31m            resp = [7m[31mraw_[0m[31minput("Or Enter 'T' to terminate Cluster Genesis ")[0m                                                         [0m[33m 590[0m [32m            resp = input("Or Enter 'T' to terminate Cluster Genesis ")[0m
[33m 601[0m [0m            if resp == 'T':[0m                                                                                                        [0m[33m 591[0m [0m            if resp == 'T':[0m
[33m 602[0m [31m                resp = [7m[31mraw_[0m[31minput("Enter 'y' to confirm ")[0m                                                                          [0m[33m 592[0m [32m                resp = input("Enter 'y' to confirm ")[0m
[33m 603[0m [0m                if resp == 'y':[0m                                                                                                    [0m[33m 593[0m [0m                if resp == 'y':[0m
[33m 604[0m [0m                    self.log.info("'{}' entered. Terminating Genesis at user request"[0m                                              [0m[33m 594[0m [0m                    self.log.info("'{}' entered. Terminating Genesis at user request"[0m
[33m 605[0m [0m                                  .format(resp))[0m                                                                                   [0m[33m 595[0m [0m                                  .format(resp))[0m
[1;34m@@ -607,7 +597,7 @@ class ValidateClusterHardware(object):
[0m[33m 607[0m [0m                    sys.exit(1)[0m                                                                                                    [0m[33m 597[0m [0m                    sys.exit(1)[0m
[33m 608[0m [0m            elif resp == 'C':[0m                                                                                                      [0m[33m 598[0m [0m            elif resp == 'C':[0m
[33m 609[0m [0m                print('\nNot all nodes have been discovered')[0m                                                                      [0m[33m 599[0m [0m                print('\nNot all nodes have been discovered')[0m
[33m 610[0m [31m                resp = [7m[31mraw_[0m[31minput("Enter 'y' to confirm continuation of"[0m                                                            [0m[33m 600[0m [32m                resp = input("Enter 'y' to confirm continuation of"[0m
[33m 611[0m [0m                                 " deployment without all nodes ")[0m                                                                 [0m[33m 601[0m [0m                                 " deployment without all nodes ")[0m
[33m 612[0m [0m                if resp == 'y':[0m                                                                                                    [0m[33m 602[0m [0m                if resp == 'y':[0m
[33m 613[0m [0m                    self.log.info("'{}' entered. Continuing Genesis".format(resp))[0m                                                 [0m[33m 603[0m [0m                    self.log.info("'{}' entered. Continuing Genesis".format(resp))[0m
[1;34m@@ -711,9 +701,9 @@ class ValidateClusterHardware(object):
[0m[33m 711[0m [0m        #           "running PXE hardware validation.")[0m                                                                            [0m[33m 701[0m [0m        #           "running PXE hardware validation.")[0m
[33m 712[0m [0m        #     print("Type 'C' to validate cluster nodes defined in current "[0m                                                       [0m[33m 702[0m [0m        #     print("Type 'C' to validate cluster nodes defined in current "[0m
[33m 713[0m [0m        #           "'config.yml'")[0m                                                                                                [0m[33m 703[0m [0m        #           "'config.yml'")[0m
[33m 714[0m [31m        #     resp = [7m[31mraw_[0m[31minput("Type 'T' to terminate Cluster Genesis ")[0m                                                           [0m[33m 704[0m [32m        #     resp = input("Type 'T' to terminate Cluster Genesis ")[0m
[33m 715[0m [0m        #     if resp == 'T':[0m                                                                                                      [0m[33m 705[0m [0m        #     if resp == 'T':[0m
[33m 716[0m [31m        #         resp = [7m[31mraw_[0m[31minput("Type 'y' to confirm ")[0m                                                                         [0m[33m 706[0m [32m        #         resp = input("Type 'y' to confirm ")[0m
[33m 717[0m [0m        #         if resp == 'y':[0m                                                                                                  [0m[33m 707[0m [0m        #         if resp == 'y':[0m
[33m 718[0m [0m        #             self.log.info("'{}' entered. Terminating Genesis at user "[0m                                                   [0m[33m 708[0m [0m        #             self.log.info("'{}' entered. Terminating Genesis at user "[0m
[33m 719[0m [0m        #                           "request".format(resp))[0m                                                                        [0m[33m 709[0m [0m        #                           "request".format(resp))[0m
[1;34m@@ -829,9 +819,9 @@ class ValidateClusterHardware(object):
[0m[33m 829[0m [0m            print('\n\nPress Enter to continue scanning for cluster nodes.')[0m                                                       [0m[33m 819[0m [0m            print('\n\nPress Enter to continue scanning for cluster nodes.')[0m
[33m 830[0m [0m            print("Or enter 'C' to continue cluster deployment with a subset of nodes")[0m                                            [0m[33m 820[0m [0m            print("Or enter 'C' to continue cluster deployment with a subset of nodes")[0m
[33m 831[0m [0m            print("Or enter 'R' to cycle power to missing nodes")[0m                                                                  [0m[33m 821[0m [0m            print("Or enter 'R' to cycle power to missing nodes")[0m
[33m 832[0m [31m            resp = [7m[31mraw_[0m[31minput("Or enter 'T' to terminate Cluster Genesis ")[0m                                                         [0m[33m 822[0m [32m            resp = input("Or enter 'T' to terminate Cluster Genesis ")[0m
[33m 833[0m [0m            if resp == 'T':[0m                                                                                                        [0m[33m 823[0m [0m            if resp == 'T':[0m
[33m 834[0m [31m                resp = [7m[31mraw_[0m[31minput("Enter 'y' to confirm ")[0m                                                                          [0m[33m 824[0m [32m                resp = input("Enter 'y' to confirm ")[0m
[33m 835[0m [0m                if resp == 'y':[0m                                                                                                    [0m[33m 825[0m [0m                if resp == 'y':[0m
[33m 836[0m [0m                    self.log.info("'{}' entered. Terminating Genesis at user"[0m                                                      [0m[33m 826[0m [0m                    self.log.info("'{}' entered. Terminating Genesis at user"[0m
[33m 837[0m [0m                                  " request".format(resp))[0m                                                                         [0m[33m 827[0m [0m                                  " request".format(resp))[0m
[1;34m@@ -842,7 +832,7 @@ class ValidateClusterHardware(object):
[0m[33m 842[0m [0m                self._reset_unfound_nodes()[0m                                                                                        [0m[33m 832[0m [0m                self._reset_unfound_nodes()[0m
[33m 843[0m [0m            elif resp == 'C':[0m                                                                                                      [0m[33m 833[0m [0m            elif resp == 'C':[0m
[33m 844[0m [0m                print('\nNot all nodes have been discovered')[0m                                                                      [0m[33m 834[0m [0m                print('\nNot all nodes have been discovered')[0m
[33m 845[0m [31m                resp = [7m[31mraw_[0m[31minput("Enter 'y' to confirm continuation of"[0m                                                            [0m[33m 835[0m [32m                resp = input("Enter 'y' to confirm continuation of"[0m
[33m 846[0m [0m                                 " deployment without all nodes ")[0m                                                                 [0m[33m 836[0m [0m                                 " deployment without all nodes ")[0m
[33m 847[0m [0m                if resp == 'y':[0m                                                                                                    [0m[33m 837[0m [0m                if resp == 'y':[0m
[33m 848[0m [0m                    self.log.info("'{}' entered. Continuing Genesis".format(resp))[0m                                                 [0m[33m 838[0m [0m                    self.log.info("'{}' entered. Continuing Genesis".format(resp))[0m
[1;34m@@ -920,12 +910,11 @@ class ValidateClusterHardware(object):
[0m[33m 920[0m [0m        for node in ipmi_list_ai.keys():[0m                                                                                           [0m[33m 910[0m [0m        for node in ipmi_list_ai.keys():[0m
[33m 921[0m [0m            print(node)[0m                                                                                                            [0m[33m 911[0m [0m            print(node)[0m
[33m 922[0m [0m            try:[0m                                                                                                                   [0m[33m 912[0m [0m            try:[0m
[33m 923[0m [31m[7m[31m                bmc = command.Command([0m[31m[0m                                                                                             [0m[33m 913[0m [32m[7m[32m                bmc = self._bmc_ipmi_login(node,[0m[32m[0m
[33m 924[0m [1;31m                    node,[0m [0m[33m    [0m 
[33m 925[0m [31m                    [4m[31muserid=[0m[31mself.ipmi_list_ai[node][0],[0m                                                                             [0m[33m 914[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][0],[0m
[33m 926[0m [31m                    [4m[31mpassword=[0m[31mself.ipmi_list_ai[node][1])[0m                                                                           [0m[33m 915[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][1])[0m
[33m 927[0m [0m            except IpmiException as exc:[0m                                                                                           [0m[33m 916[0m [0m            except IpmiException as exc:[0m
[33m 928[0m [31m                self.log.error(exc[4m[31m.message[0m[31m)[0m                                                                                        [0m[33m 917[0m [32m                self.log.error([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m 929[0m [0m                break[0m                                                                                                              [0m[33m 918[0m [0m                break[0m
[33m 930[0m [0m[0m                                                                                                                                   [0m[33m 919[0m [0m[0m
[33m 931[0m [0m            try:[0m                                                                                                                   [0m[33m 920[0m [0m            try:[0m
[1;34m@@ -933,8 +922,7 @@ class ValidateClusterHardware(object):
[0m[33m 933[0m [0m            except IpmiException as exc:[0m                                                                                           [0m[33m 922[0m [0m            except IpmiException as exc:[0m
[33m 934[0m [0m                self.log.error('Failed attempting BMC reset on {}'.format(node[0]))[0m                                                [0m[33m 923[0m [0m                self.log.error('Failed attempting BMC reset on {}'.format(node[0]))[0m
[33m 935[0m [0m[0m                                                                                                                                   [0m[33m 924[0m [0m[0m
[33m 936[0m [31m[7m[31m            rc = bmc.ipmi_session.logout()[0m[31m[0m                                                                                         [0m[33m 925[0m [32m[7m[32m            self._bmc_ipmi_logout(bmc)[0m[32m[0m
[33m 937[0m [1;31m            self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m 938[0m [0m[0m                                                                                                                                   [0m[33m 926[0m [0m[0m
[33m 939[0m [0m    def _power_all(self, ipmi_list_ai, state, bootdev=None, persist=False):[0m                                                        [0m[33m 927[0m [0m    def _power_all(self, ipmi_list_ai, state, bootdev=None, persist=False):[0m
[33m 940[0m [0m        """Power on or off all nodes in node_list[0m                                                                                  [0m[33m 928[0m [0m        """Power on or off all nodes in node_list[0m
[1;34m@@ -947,26 +935,25 @@ class ValidateClusterHardware(object):
[0m[33m 947[0m [0m            t1 = time.time()[0m                                                                                                       [0m[33m 935[0m [0m            t1 = time.time()[0m
[33m 948[0m [0m            for node in sorted(ipmi_list_ai):[0m                                                                                      [0m[33m 936[0m [0m            for node in sorted(ipmi_list_ai):[0m
[33m 949[0m [0m                try:[0m                                                                                                               [0m[33m 937[0m [0m                try:[0m
[33m 950[0m [31m[7m[31m                    bmc = command.Command([0m[31m[0m                                                                                         [0m[33m 938[0m [32m[7m[32m                    bmc = self._bmc_ipmi_login(node,[0m[32m[0m
[33m 951[0m [1;31m                        node,[0m [0m[33m    [0m 
[33m 952[0m [31m                        [4m[31muserid=[0m[31mself.ipmi_list_ai[node][0],[0m                                                                         [0m[33m 939[0m [32m                        [4m[32m                       [0m[32mself.ipmi_list_ai[node][0],[0m
[33m 953[0m [31m                        [4m[31mpassword=[0m[31mself.ipmi_list_ai[node][1])[0m                                                                       [0m[33m 940[0m [32m                        [4m[32m                       [0m[32mself.ipmi_list_ai[node][1])[0m
[33m 954[0m [0m                except IpmiException as exc:[0m                                                                                       [0m[33m 941[0m [0m                except IpmiException as exc:[0m
[33m 955[0m [0m                    self.log.error('Failed login attempting set bootdev ' +[0m                                                        [0m[33m 942[0m [0m                    self.log.error('Failed login attempting set bootdev ' +[0m
[33m 956[0m [31m                                   exc[4m[31m.message[0m[31m)[0m                                                                                    [0m[33m 943[0m [32m                                   [7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m 957[0m [0m                else:[0m                                                                                                              [0m[33m 944[0m [0m                else:[0m
[33m 958[0m [0m                    try:[0m                                                                                                           [0m[33m 945[0m [0m                    try:[0m
[33m 959[0m [0m                        rc = bmc.set_bootdev(bootdev, persist)[0m                                                                     [0m[33m 946[0m [0m                        rc = bmc.set_bootdev(bootdev, persist)[0m
[33m 960[0m [0m                        self.log.debug('Node boot device set to {}'.format(bootdev))[0m                                               [0m[33m 947[0m [0m                        self.log.debug('Node boot device set to {}'.format(bootdev))[0m
[33m 961[0m [0m                    except IpmiException as exc:[0m                                                                                   [0m[33m 948[0m [0m                    except IpmiException as exc:[0m
[33m 962[0m [0m                        self.log.error('Failed attempting set boot device. {}'[0m                                                     [0m[33m 949[0m [0m                        self.log.error('Failed attempting set boot device. {}'[0m
[33m 963[0m [31m                                       .format(exc[4m[31m.message[0m[31m))[0m                                                                       [0m[33m 950[0m [32m                                       .format([7m[32mstr([0m[32mexc[4m[32m)[0m[32m))[0m
[33m 964[0m [0m                    else:[0m                                                                                                          [0m[33m 951[0m [0m                    else:[0m
[33m 965[0m [0m                        try:[0m                                                                                                       [0m[33m 952[0m [0m                        try:[0m
[33m 966[0m [0m                            rc = bmc.get_bootdev()[0m                                                                                 [0m[33m 953[0m [0m                            rc = bmc.get_bootdev()[0m
[33m 967[0m [0m                        except IpmiException as exc:[0m                                                                               [0m[33m 954[0m [0m                        except IpmiException as exc:[0m
[33m 968[0m [0m                            self.log.error('Failed attempting get boot device. {}'[0m                                                 [0m[33m 955[0m [0m                            self.log.error('Failed attempting get boot device. {}'[0m
[33m 969[0m [31m                                           .format(exc[4m[31m.message[0m[31m))[0m                                                                   [0m[33m 956[0m [32m                                           .format([7m[32mstr([0m[32mexc[4m[32m)[0m[32m))[0m
[33m 970[0m [0m                        else:[0m                                                                                                      [0m[33m 957[0m [0m                        else:[0m
[33m 971[0m [0m                            if 'error' in rc or rc['bootdev'] != bootdev:[0m                                                          [0m[33m 958[0m [0m                            if 'error' in rc or rc['bootdev'] != bootdev:[0m
[33m 972[0m [0m                                self.log.error('Failed attempting get boot device on {}'[0m                                           [0m[33m 959[0m [0m                                self.log.error('Failed attempting get boot device on {}'[0m
[1;34m@@ -974,20 +961,18 @@ class ValidateClusterHardware(object):
[0m[33m 974[0m [0m                            else:[0m                                                                                                  [0m[33m 961[0m [0m                            else:[0m
[33m 975[0m [0m                                self.log.debug('Get boot successful on {}: \n{}'.[0m                                                  [0m[33m 962[0m [0m                                self.log.debug('Get boot successful on {}: \n{}'.[0m
[33m 976[0m [0m                                               format(node, rc))[0m                                                                   [0m[33m 963[0m [0m                                               format(node, rc))[0m
[33m 977[0m [31m                    [4m[31mrc = [0m[31mbmc[4m[31m.[0m[31mipmi_[7m[31msession.[0m[31mlogout()[0m                                                                                 [0m[33m 964[0m [32m                    [4m[32mself._[0m[32mbmc[4m[32m_[0m[32mipmi_logout([7m[32mbmc[0m[32m)[0m
[33m 978[0m [1;31m                    self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m 979[0m [0m[0m                                                                                                                                   [0m[33m 965[0m [0m[0m
[33m 980[0m [0m            while time.time() < t1 + 1:[0m                                                                                            [0m[33m 966[0m [0m            while time.time() < t1 + 1:[0m
[33m 981[0m [0m                time.sleep(0.5)[0m                                                                                                    [0m[33m 967[0m [0m                time.sleep(0.5)[0m
[33m 982[0m [0m[0m                                                                                                                                   [0m[33m 968[0m [0m[0m
[33m 983[0m [0m        for node in sorted(ipmi_list_ai):[0m                                                                                          [0m[33m 969[0m [0m        for node in sorted(ipmi_list_ai):[0m
[33m 984[0m [0m            try:[0m                                                                                                                   [0m[33m 970[0m [0m            try:[0m
[33m 985[0m [31m[7m[31m                bmc = command.Command([0m[31m[0m                                                                                             [0m[33m 971[0m [32m[7m[32m                bmc = self._bmc_ipmi_login(node,[0m[32m[0m
[33m 986[0m [1;31m                    node,[0m [0m[33m    [0m 
[33m 987[0m [31m                    [4m[31muserid=[0m[31mself.ipmi_list_ai[node][0],[0m                                                                             [0m[33m 972[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][0],[0m
[33m 988[0m [31m                    [4m[31mpassword=[0m[31mself.ipmi_list_ai[node][1])[0m                                                                           [0m[33m 973[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][1])[0m
[33m 989[0m [0m            except IpmiException as exc:[0m                                                                                           [0m[33m 974[0m [0m            except IpmiException as exc:[0m
[33m 990[0m [31m                self.log.error(exc[4m[31m.message[0m[31m)[0m                                                                                        [0m[33m 975[0m [32m                self.log.error([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m 991[0m [0m                break[0m                                                                                                              [0m[33m 976[0m [0m                break[0m
[33m 992[0m [0m[0m                                                                                                                                   [0m[33m 977[0m [0m[0m
[33m 993[0m [0m            try:[0m                                                                                                                   [0m[33m 978[0m [0m            try:[0m
[1;34m@@ -996,17 +981,15 @@ class ValidateClusterHardware(object):
[0m[33m 996[0m [0m            except IpmiException as exc:[0m                                                                                           [0m[33m 981[0m [0m            except IpmiException as exc:[0m
[33m 997[0m [0m                self.log.error('Failed attempting power {} of {}'.format(state, node))[0m                                             [0m[33m 982[0m [0m                self.log.error('Failed attempting power {} of {}'.format(state, node))[0m
[33m 998[0m [0m[0m                                                                                                                                   [0m[33m 983[0m [0m[0m
[33m 999[0m [31m[7m[31m            rc = bmc.ipmi_session.logout()[0m[31m[0m                                                                                         [0m[33m 984[0m [32m[7m[32m            self._bmc_ipmi_logout(bmc)[0m[32m[0m
[33m1000[0m [1;31m            self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m1001[0m [0m[0m                                                                                                                                   [0m[33m 985[0m [0m[0m
[33m1002[0m [0m        for node in sorted(ipmi_list_ai):[0m                                                                                          [0m[33m 986[0m [0m        for node in sorted(ipmi_list_ai):[0m
[33m1003[0m [0m            try:[0m                                                                                                                   [0m[33m 987[0m [0m            try:[0m
[33m1004[0m [31m[7m[31m                bmc = command.Command([0m[31m[0m                                                                                             [0m[33m 988[0m [32m[7m[32m                bmc = self._bmc_ipmi_login(node,[0m[32m[0m
[33m1005[0m [1;31m                    node,[0m [0m[33m    [0m 
[33m1006[0m [31m                    [4m[31muserid=[0m[31mself.ipmi_list_ai[node][0],[0m                                                                             [0m[33m 989[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][0],[0m
[33m1007[0m [31m                    [4m[31mpassword=[0m[31mself.ipmi_list_ai[node][1])[0m                                                                           [0m[33m 990[0m [32m                    [4m[32m                       [0m[32mself.ipmi_list_ai[node][1])[0m
[33m1008[0m [0m            except IpmiException as exc:[0m                                                                                           [0m[33m 991[0m [0m            except IpmiException as exc:[0m
[33m1009[0m [31m                self.log.error(exc[4m[31m.message[0m[31m)[0m                                                                                        [0m[33m 992[0m [32m                self.log.error([7m[32mstr([0m[32mexc[4m[32m)[0m[32m)[0m
[33m1010[0m [0m                break[0m                                                                                                              [0m[33m 993[0m [0m                break[0m
[33m1011[0m [0m[0m                                                                                                                                   [0m[33m 994[0m [0m[0m
[33m1012[0m [0m            success = False[0m                                                                                                        [0m[33m 995[0m [0m            success = False[0m
[1;34m@@ -1024,8 +1007,7 @@ class ValidateClusterHardware(object):
[0m[33m1024[0m [0m            if not success:[0m                                                                                                        [0m[33m1007[0m [0m            if not success:[0m
[33m1025[0m [0m                self.log.error('Failed setting power state to {} for node {}'[0m                                                      [0m[33m1008[0m [0m                self.log.error('Failed setting power state to {} for node {}'[0m
[33m1026[0m [0m                               .format(state, node))[0m                                                                               [0m[33m1009[0m [0m                               .format(state, node))[0m
[33m1027[0m [31m[7m[31m            rc = bmc.ipmi_session.logout()[0m[31m[0m                                                                                         [0m[33m1010[0m [32m[7m[32m            self._bmc_ipmi_logout(bmc)[0m[32m[0m
[33m1028[0m [1;31m            self.log.debug('Logging out rc: {}'.format(rc['success']))[0m [0m[33m    [0m 
[33m1029[0m [0m[0m                                                                                                                                   [0m[33m1011[0m [0m[0m
[33m1030[0m [0m    def _get_network(self, type_):[0m                                                                                                 [0m[33m1012[0m [0m    def _get_network(self, type_):[0m
[33m1031[0m [0m        """Returns details of a Genesis network.[0m                                                                                   [0m[33m1013[0m [0m        """Returns details of a Genesis network.[0m
[1;34m@@ -1203,6 +1185,20 @@ class ValidateClusterHardware(object):
[0m[33m1203[0m [0m        else:[0m                                                                                                                      [0m[33m1185[0m [0m        else:[0m
[33m1204[0m [0m            raise UserCriticalException('Failed verification of management switches')[0m                                              [0m[33m1186[0m [0m            raise UserCriticalException('Failed verification of management switches')[0m
[33m    [0m                                                                                                                                    [0m[33m1187[0m [32m[0m
[33m    [0m                                                                                                                                    [0m[33m1188[0m [32m    def _bmc_ipmi_logout(self, bmc):[0m
[33m    [0m                                                                                                                                    [0m[33m1189[0m [32m        rc = bmc.ipmi_session.logout()[0m
[33m    [0m                                                                                                                                    [0m[33m1190[0m [32m        self.log.debug(f'Closing IPMI connection to: {bmc.bmc} '[0m
[33m    [0m                                                                                                                                    [0m[33m1191[0m [32m                       f'rc: {rc.success}')[0m
[33m    [0m                                                                                                                                    [0m[33m1192[0m [32m        del bmc.ipmi_session.initialized[0m
[33m    [0m                                                                                                                                    [0m[33m1193[0m [32m[0m
[33m    [0m                                                                                                                                    [0m[33m1194[0m [32m    def _bmc_ipmi_login(self, node, userid, password):[0m
[33m    [0m                                                                                                                                    [0m[33m1195[0m [32m        self.log.debug(f'Attempting to open IPMI connection to: {node} / '[0m
[33m    [0m                                                                                                                                    [0m[33m1196[0m [32m                       f'{userid} / {password}')[0m
[33m    [0m                                                                                                                                    [0m[33m1197[0m [32m        session.Session.initting_sessions = {}[0m
[33m    [0m                                                                                                                                    [0m[33m1198[0m [32m        return command.Command(bmc=node,[0m
[33m    [0m                                                                                                                                    [0m[33m1199[0m [32m                               userid=userid,[0m
[33m    [0m                                                                                                                                    [0m[33m1200[0m [32m                               password=password)[0m
[33m1205[0m [0m[0m                                                                                                                                   [0m[33m1201[0m [0m[0m
[33m1206[0m [0m[0m                                                                                                                                   [0m[33m1202[0m [0m[0m
[33m1207[0m [0mif __name__ == '__main__':[0m                                                                                                         [0m[33m1203[0m [0mif __name__ == '__main__':[0m
[33m1208[0m [0m    parser = argparse.ArgumentParser()[0m                                                                                             [0m[33m1204[0m [0m    parser = argparse.ArgumentParser()[0m
[36mdiff --git a/scripts/python/validate_config.py b/scripts/python/validate_config.py
[0m[36mindex af10a0e..6f70e00 100644
[0m[33m--- a/scripts/python/validate_config.py
[0m[33m+++ b/scripts/python/validate_config.py
[0m[1;34m@@ -1,7 +1,7 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Validate config"""[0m                                                                                                                [0m[33m 2[0m [0m"""Validate config"""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 4[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[33m 6[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 6[0m [0m# All Rights Reserved.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mfrom lib.logger import Logger[0m                                                                                                        [0m[33m20[0m [0mfrom lib.logger import Logger[0m
[33m24[0m [0mfrom lib.db import Database[0m                                                                                                          [0m[33m21[0m [0mfrom lib.db import Database[0m
[33m25[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[36mdiff --git a/scripts/python/validate_mac_table_files.py b/scripts/python/validate_mac_table_files.py
[0m[36mindex 13784ea..7f55968 100755
[0m[33m--- a/scripts/python/validate_mac_table_files.py
[0m[33m+++ b/scripts/python/validate_mac_table_files.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m  1[0m [31m#!/usr/bin/env python[0m                                                                                                               [0m[33m  1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m  2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                          [0m[33m  2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m  3[0m [0m#[0m                                                                                                                                   [0m[33m  3[0m [0m#[0m
[33m  4[0m [0m# All Rights Reserved.[0m                                                                                                              [0m[33m  4[0m [0m# All Rights Reserved.[0m
[33m  5[0m [0m#[0m                                                                                                                                   [0m[33m  5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m                                                               [0m[33m 15[0m [0m# See the License for the specific language governing permissions and[0m
[33m 16[0m [0m# limitations under the License.[0m                                                                                                    [0m[33m 16[0m [0m# limitations under the License.[0m
[33m 17[0m [1;31m[0m [0m[33m   [0m 
[33m 18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m   [0m 
[33m 19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m   [0m 
[33m 20[0m [0m[0m                                                                                                                                    [0m[33m 17[0m [0m[0m
[33m 21[0m [0mimport sys[0m                                                                                                                          [0m[33m 18[0m [0mimport sys[0m
[33m 22[0m [0mimport os.path[0m                                                                                                                      [0m[33m 19[0m [0mimport os.path[0m
[33m 23[0m [0mimport re[0m                                                                                                                           [0m[33m 20[0m [0mimport re[0m
[1;34m@@ -75,7 +72,7 @@ def validate_data_mac_table_files(log, inv):
[0m[33m 75[0m [0m    validation = True[0m                                                                                                               [0m[33m 72[0m [0m    validation = True[0m
[33m 76[0m [0m[0m                                                                                                                                    [0m[33m 73[0m [0m[0m
[33m 77[0m [0m    if inv.is_passive_data_switches():[0m                                                                                              [0m[33m 74[0m [0m    if inv.is_passive_data_switches():[0m
[33m 78[0m [31m        for switch_ip, x in inv.get_data_switches().ite[7m[31mrite[0m[31mms():[0m                                                                    [0m[33m 75[0m [32m        for switch_ip, x in inv.get_data_switches().items():[0m
[33m 79[0m [0m            file_path = get_mac_table_file_path(switch_ip)[0m                                                                          [0m[33m 76[0m [0m            file_path = get_mac_table_file_path(switch_ip)[0m
[33m 80[0m [0m            if not os.path.isfile(file_path):[0m                                                                                       [0m[33m 77[0m [0m            if not os.path.isfile(file_path):[0m
[33m 81[0m [0m                validation = False[0m                                                                                                  [0m[33m 78[0m [0m                validation = False[0m
[1;34m@@ -137,18 +134,18 @@ def check_duplicate_files(log, inv):
[0m[33m137[0m [0m                                return True[0m                                                                                         [0m[33m134[0m [0m                                return True[0m
[33m138[0m [0m[0m                                                                                                                                    [0m[33m135[0m [0m[0m
[33m139[0m [0m                if inv.is_passive_data_switches():[0m                                                                                  [0m[33m136[0m [0m                if inv.is_passive_data_switches():[0m
[33m140[0m [31m                    for switch_ip_2, x in inv.get_data_switches().ite[7m[31mrite[0m[31mms():[0m                                                      [0m[33m137[0m [32m                    for switch_ip_2, x in inv.get_data_switches().items():[0m
[33m141[0m [0m                        file_path_2 = get_mac_table_file_path(switch_ip_2)[0m                                                          [0m[33m138[0m [0m                        file_path_2 = get_mac_table_file_path(switch_ip_2)[0m
[33m142[0m [0m                        if os.path.isfile(file_path_2):[0m                                                                             [0m[33m139[0m [0m                        if os.path.isfile(file_path_2):[0m
[33m143[0m [0m                            if compare_files(file_path_1, file_path_2, log):[0m                                                        [0m[33m140[0m [0m                            if compare_files(file_path_1, file_path_2, log):[0m
[33m144[0m [0m                                return True[0m                                                                                         [0m[33m141[0m [0m                                return True[0m
[33m145[0m [0m[0m                                                                                                                                    [0m[33m142[0m [0m[0m
[33m146[0m [0m    if inv.is_passive_data_switches():[0m                                                                                              [0m[33m143[0m [0m    if inv.is_passive_data_switches():[0m
[33m147[0m [31m        for switch_ip_1, x in inv.get_data_switches().ite[7m[31mrite[0m[31mms():[0m                                                                  [0m[33m144[0m [32m        for switch_ip_1, x in inv.get_data_switches().items():[0m
[33m148[0m [0m            file_path_1 = get_mac_table_file_path(switch_ip_1)[0m                                                                      [0m[33m145[0m [0m            file_path_1 = get_mac_table_file_path(switch_ip_1)[0m
[33m149[0m [0m[0m                                                                                                                                    [0m[33m146[0m [0m[0m
[33m150[0m [0m            if os.path.isfile(file_path_1):[0m                                                                                         [0m[33m147[0m [0m            if os.path.isfile(file_path_1):[0m
[33m151[0m [31m                for switch_ip_2, x in inv.get_data_switches().ite[7m[31mrite[0m[31mms():[0m                                                          [0m[33m148[0m [32m                for switch_ip_2, x in inv.get_data_switches().items():[0m
[33m152[0m [0m                    if switch_ip_1 != switch_ip_2:[0m                                                                                  [0m[33m149[0m [0m                    if switch_ip_1 != switch_ip_2:[0m
[33m153[0m [0m                        file_path_2 = get_mac_table_file_path(switch_ip_2)[0m                                                          [0m[33m150[0m [0m                        file_path_2 = get_mac_table_file_path(switch_ip_2)[0m
[33m154[0m [0m                        if compare_files(file_path_1, file_path_2, log):[0m                                                            [0m[33m151[0m [0m                        if compare_files(file_path_1, file_path_2, log):[0m
[36mdiff --git a/scripts/python/watch_log.py b/scripts/python/watch_log.py
[0m[36mindex 1e34a7b..1a214f5 100644
[0m[33m--- a/scripts/python/watch_log.py
[0m[33m+++ b/scripts/python/watch_log.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,8 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m21[0m [0mimport time[0m                                                                                                                          [0m[33m19[0m [0mimport time[0m
[33m22[0m [0mimport re[0m                                                                                                                            [0m[33m20[0m [0mimport re[0m
[36mdiff --git a/scripts/python/write_switch_memory.py b/scripts/python/write_switch_memory.py
[0m[36mindex b00080e..fcbb739 100644
[0m[33m--- a/scripts/python/write_switch_memory.py
[0m[33m+++ b/scripts/python/write_switch_memory.py
[0m[1;34m@@ -1,7 +1,7 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m"""Write switch memory."""[0m                                                                                                           [0m[33m 2[0m [0m"""Write switch memory."""[0m
[33m 3[0m [0m[0m                                                                                                                                     [0m[33m 3[0m [0m[0m
[33m 4[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 4[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[33m 6[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 6[0m [0m# All Rights Reserved.[0m
[33m 7[0m [0m#[0m                                                                                                                                    [0m[33m 7[0m [0m#[0m
[1;34m@@ -17,9 +17,6 @@
[0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m17[0m [0m# See the License for the specific language governing permissions and[0m
[33m18[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m18[0m [0m# limitations under the License.[0m
[33m19[0m [1;31m[0m [0m[33m  [0m 
[33m20[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m21[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m22[0m [0m[0m                                                                                                                                     [0m[33m19[0m [0m[0m
[33m23[0m [0mimport sys[0m                                                                                                                           [0m[33m20[0m [0mimport sys[0m
[33m24[0m [0m[0m                                                                                                                                     [0m[33m21[0m [0m[0m
[33m25[0m [0mfrom lib.inventory import Inventory[0m                                                                                                  [0m[33m22[0m [0mfrom lib.inventory import Inventory[0m
[1;34m@@ -52,7 +49,7 @@ class WriteSwitchMemory(object):
[0m[33m52[0m [0m[0m                                                                                                                                     [0m[33m49[0m [0m[0m
[33m53[0m [0m    def write_data_switch_memory(self):[0m                                                                                              [0m[33m50[0m [0m    def write_data_switch_memory(self):[0m
[33m54[0m [0m        self.enable_remote = self.ENABLE_REMOTE_CONFIG_DATA[0m                                                                          [0m[33m51[0m [0m        self.enable_remote = self.ENABLE_REMOTE_CONFIG_DATA[0m
[33m55[0m [31m        for self.ipv4, value in self.inv.get_data_switches().ite[7m[31mrite[0m[31mms():[0m                                                            [0m[33m52[0m [32m        for self.ipv4, value in self.inv.get_data_switches().items():[0m
[33m56[0m [0m            self.userid = value['user'][0m                                                                                              [0m[33m53[0m [0m            self.userid = value['user'][0m
[33m57[0m [0m            self.password = value['password'][0m                                                                                        [0m[33m54[0m [0m            self.password = value['password'][0m
[33m58[0m [0m            self._send_cmd(self.WRITE_MEMORY, 'Write memory')[0m                                                                        [0m[33m55[0m [0m            self._send_cmd(self.WRITE_MEMORY, 'Write memory')[0m
[36mdiff --git a/scripts/venv_install.sh b/scripts/venv_install.sh
[0m[36mindex bb11a5d..c84fb0a 100755
[0m[33m--- a/scripts/venv_install.sh
[0m[33m+++ b/scripts/venv_install.sh
[0m[1;34m@@ -15,22 +15,27 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m18[0m [31m[7m[31msudo -E -H pip install --upgrade virtualenv[0m[31m[0m                                                                                          [0m[33m18[0m [32m[7m[32mpython3.6 -m venv ${1}pup-venv[0m[32m[0m
[33m19[0m [1;31mvirtualenv --no-wheel --system-site-packages ${1}pup-venv[0m [0m[33m  [0m 
[33m20[0m [0msource ${1}pup-venv/bin/activate[0m                                                                                                     [0m[33m19[0m [0msource ${1}pup-venv/bin/activate[0m
[33m  [0m                                                                                                                                      [0m[33m20[0m [32mpip install --upgrade pip[0m
[33m  [0m                                                                                                                                      [0m[33m21[0m [32mpip install --upgrade setuptools==40.0.0[0m
[33m21[0m [0mpip install \[0m                                                                                                                        [0m[33m22[0m [0mpip install \[0m
[33m22[0m [31m    'ansible==2.[4m[31m5[0m[31m.[4m[31m5[0m[31m' \[0m                                                                                                               [0m[33m23[0m [32m    'ansible==2.[4m[32m7[0m[32m.[4m[32m0[0m[32m' \[0m
[33m  [0m                                                                                                                                      [0m[33m24[0m [32m    'ansible-vault==1.2.0' \[0m
[33m  [0m                                                                                                                                      [0m[33m25[0m [32m    'click==7.0' \[0m
[33m  [0m                                                                                                                                      [0m[33m26[0m [32m    'filelock==3.0.9' \[0m
[33m  [0m                                                                                                                                      [0m[33m27[0m [32m    'gitpython==2.1.11' \[0m
[33m  [0m                                                                                                                                      [0m[33m28[0m [32m    'jsl==0.2.4' \[0m
[33m  [0m                                                                                                                                      [0m[33m29[0m [32m    'jsonschema==2.6.0' \[0m
[33m  [0m                                                                                                                                      [0m[33m30[0m [32m    'netaddr==0.7.19' \[0m
[33m23[0m [0m    'orderedattrdict==1.5' \[0m                                                                                                         [0m[33m31[0m [0m    'orderedattrdict==1.5' \[0m
[33m24[0m [31m[7m[31m    'pyroute2==0.5.0' \[0m[31m[0m                                                                                                              [0m[33m32[0m [32m[7m[32m    'paramiko==2.4.2' \[0m[32m[0m
[33m25[0m [31m[7m[31m    'jsonschema==2.6.0' \[0m[31m[0m                                                                                                            [0m[33m33[0m [32m[7m[32m    'pip2pi==0.7.0' \[0m[32m[0m
[33m26[0m [1;31m    'jsl==0.2.4' \[0m [0m[33m  [0m 
[33m27[0m [1;31m    'pyghmi==1.0.42' \[0m [0m[33m  [0m 
[33m28[0m [1;31m    'wget==3.2' \[0m [0m[33m  [0m 
[33m29[0m [1;31m    'pyasn1==0.4.2' \[0m [0m[33m  [0m 
[33m30[0m [1;31m    'pysnmp==4.4.4' \[0m [0m[33m  [0m 
[33m31[0m [0m    'pyaml==17.12.1' \[0m                                                                                                               [0m[33m34[0m [0m    'pyaml==17.12.1' \[0m
[33m32[0m [31m[7m[31m    'paramiko==2.4.2' \[0m[31m[0m                                                                                                              [0m[33m35[0m [32m[7m[32m    'pyasn1==0.4.4' \[0m[32m[0m
[33m  [0m                                                                                                                                      [0m[33m36[0m [32m    'pyghmi==1.2.14' \[0m
[33m  [0m                                                                                                                                      [0m[33m37[0m [32m    'pyroute2==0.5.3' \[0m
[33m  [0m                                                                                                                                      [0m[33m38[0m [32m    'pysnmp==4.4.6' \[0m
[33m33[0m [0m    'tabulate==0.8.2' \[0m                                                                                                              [0m[33m39[0m [0m    'tabulate==0.8.2' \[0m
[33m34[0m [31m[7m[31m    'gitpython==2.1.9' \[0m[31m[0m                                                                                                             [0m[33m40[0m [32m[7m[32m    'wget==3.2'[0m[32m[0m
[33m35[0m [1;31m    'filelock==3.0.4'[0m [0m[33m  [0m 
[33m36[0m [0mdeactivate[0m                                                                                                                           [0m[33m41[0m [0mdeactivate[0m
[36mdiff --git a/setup.py b/setup.py
[0m[36mindex 94a8c44..c44b19d 100644
[0m[33m--- a/setup.py
[0m[33m+++ b/setup.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m1[0m [31m#!/usr/bin/env python[0m                                                                                                                 [0m[33m1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                            [0m[33m2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m3[0m [0m#[0m                                                                                                                                     [0m[33m3[0m [0m#[0m
[33m4[0m [0m# Licensed under the Apache License, Version 2.0 (the "License");[0m                                                                     [0m[33m4[0m [0m# Licensed under the Apache License, Version 2.0 (the "License");[0m
[33m5[0m [0m# you may not use this file except in compliance with the License.[0m                                                                    [0m[33m5[0m [0m# you may not use this file except in compliance with the License.[0m
[36mdiff --git a/test-requirements.txt b/test-requirements.txt
[0m[36mindex c370c29..fc02140 100644
[0m[33m--- a/test-requirements.txt
[0m[33m+++ b/test-requirements.txt
[0m[1;34m@@ -1,21 +1,26 @@
[0m[33m 1[0m [31mansible-lint>=3.[4m[31m4[0m[31m.[4m[31m9[0m[31m[0m                                                                                                                  [0m[33m 1[0m [32mansible-lint>=3.[4m[32m5[0m[32m.[4m[32m0[0m[32m[0m
[33m 2[0m [31mbashate>=0.[4m[31m5[0m[31m.[4m[31m1[0m[31m[0m                                                                                                                       [0m[33m 2[0m [32mbashate>=0.[4m[32m6[0m[32m.[4m[32m0[0m[32m[0m
[33m  [0m                                                                                                                                      [0m[33m 3[0m [32mflake8>=3.5.0[0m
[33m  [0m                                                                                                                                      [0m[33m 4[0m [32mmock>=2.0.0[0m
[33m 3[0m [31mpep8>=1.7.[4m[31m0[0m[31m[0m                                                                                                                          [0m[33m 5[0m [32mpep8>=1.7.[4m[32m1[0m[32m[0m
[33m 4[0m [1;31mflake8>=3.4.1[0m [0m[33m  [0m 
[33m 5[0m [31mpylint>=1.[4m[31m7.2[0m[31m[0m                                                                                                                        [0m[33m 6[0m [32mpylint>=[7m[32m2.[0m[32m1.[4m[32m1[0m[32m[0m
[33m 6[0m [1;31mmock>=1.2[0m [0m[33m  [0m 
[33m 7[0m [1;31mnetaddr~=0.7.18[0m [0m[33m  [0m 
[33m 8[0m [0mtestrepository>=0.0.20  # Apache-2.0/BSD[0m                                                                                             [0m[33m 7[0m [0mtestrepository>=0.0.20  # Apache-2.0/BSD[0m
[33m  [0m                                                                                                                                      [0m[33m 8[0m [32m[0m
[33m 9[0m [31mansible[4m[31m~[0m[31m=2.[4m[31m5[0m[31m.[4m[31m5[0m[31m[0m                                                                                                                       [0m[33m 9[0m [32mansible[4m[32m=[0m[32m=2.[4m[32m7[0m[32m.[4m[32m0[0m[32m[0m
[33m  [0m                                                                                                                                      [0m[33m10[0m [32mansible-vault==1.2.0[0m
[33m  [0m                                                                                                                                      [0m[33m11[0m [32mclick==7.0[0m
[33m  [0m                                                                                                                                      [0m[33m12[0m [32mfilelock==3.0.9[0m
[33m  [0m                                                                                                                                      [0m[33m13[0m [32mgitpython==2.1.11[0m
[33m  [0m                                                                                                                                      [0m[33m14[0m [32mjsl==0.2.4[0m
[33m  [0m                                                                                                                                      [0m[33m15[0m [32mjsonschema==2.6.0[0m
[33m  [0m                                                                                                                                      [0m[33m16[0m [32mnetaddr==0.7.19[0m
[33m10[0m [0morderedattrdict==1.5[0m                                                                                                                 [0m[33m17[0m [0morderedattrdict==1.5[0m
[33m  [0m                                                                                                                                      [0m[33m18[0m [32mparamiko==2.4.2[0m
[33m  [0m                                                                                                                                      [0m[33m19[0m [32mpip2pi==0.7.0[0m
[33m  [0m                                                                                                                                      [0m[33m20[0m [32mpyaml==17.12.1[0m
[33m  [0m                                                                                                                                      [0m[33m21[0m [32mpyasn1==0.4.4[0m
[33m  [0m                                                                                                                                      [0m[33m22[0m [32mpyghmi==1.2.14[0m
[33m11[0m [31mpyroute2==0.5.[4m[31m0[0m[31m[0m                                                                                                                      [0m[33m23[0m [32mpyroute2==0.5.[4m[32m3[0m[32m[0m
[33m12[0m [31m[7m[31mjsonschema==2.6.0[0m[31m[0m                                                                                                                    [0m[33m24[0m [32m[7m[32mpysnmp==4.4.6[0m[32m[0m
[33m13[0m [31m[7m[31mjsl==0.2.4[0m[31m[0m                                                                                                                           [0m[33m25[0m [32m[7m[32mtabulate==0.8.2[0m[32m[0m
[33m14[0m [1;31mpyghmi==1.0.42[0m [0m[33m  [0m 
[33m15[0m [0mwget==3.2[0m                                                                                                                            [0m[33m26[0m [0mwget==3.2[0m
[33m16[0m [1;31mpyasn1==0.4.2[0m [0m[33m  [0m 
[33m17[0m [1;31mpysnmp==4.4.4[0m [0m[33m  [0m 
[33m18[0m [1;31mpyaml==17.12.1[0m [0m[33m  [0m 
[33m19[0m [1;31mparamiko==2.4.2[0m [0m[33m  [0m 
[33m20[0m [1;31mtabulate==0.8.2[0m [0m[33m  [0m 
[33m21[0m [1;31mgitpython==2.1.9[0m [0m[33m  [0m 
[36mdiff --git a/tests/commit_message_validate.py b/tests/commit_message_validate.py
[0m[36mindex bded399..4c0fbdc 100755
[0m[33m--- a/tests/commit_message_validate.py
[0m[33m+++ b/tests/commit_message_validate.py
[0m[1;34m@@ -1,4 +1,4 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m                                                                                                           [0m[33m 2[0m [0m# Copyright 2018 IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[1;34m@@ -15,16 +15,14 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport subprocess[0m                                                                                                                    [0m[33m19[0m [0mimport subprocess[0m
[33m23[0m [0mimport re[0m                                                                                                                            [0m[33m20[0m [0mimport re[0m
[33m24[0m [0m[0m                                                                                                                                     [0m[33m21[0m [0m[0m
[33m25[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[33m26[0m [0mdef get_head_commit_message():[0m                                                                                                       [0m[33m23[0m [0mdef get_head_commit_message():[0m
[33m27[0m [31m    return subprocess.check_output(['git', 'log', '-1', '--pretty=%B'][7m[31m)[0m[31m[0m                                                              [0m[33m24[0m [32m    return subprocess.check_output(['git', 'log', '-1', '--pretty=%B'][0m
[33m  [0m                                                                                                                                      [0m[33m25[0m [32m                                   ).decode("utf-8")[0m
[33m28[0m [0m[0m                                                                                                                                     [0m[33m26[0m [0m[0m
[33m29[0m [0m[0m                                                                                                                                     [0m[33m27[0m [0m[0m
[33m30[0m [0mvalid_subject_tags = [[0m                                                                                                               [0m[33m28[0m [0mvalid_subject_tags = [[0m
[1;34m@@ -39,7 +37,7 @@ for i, line in enumerate(get_head_commit_message().splitlines()):
[0m[33m39[0m [0m            no_errors = False[0m                                                                                                        [0m[33m37[0m [0m            no_errors = False[0m
[33m40[0m [0m            errors.append("Subject line does not start with valid tag")[0m                                                              [0m[33m38[0m [0m            errors.append("Subject line does not start with valid tag")[0m
[33m41[0m [0m        if line.split()[0] not in ['Revert', 'Merge']:[0m                                                                               [0m[33m39[0m [0m        if line.split()[0] not in ['Revert', 'Merge']:[0m
[33m42[0m [31m            if line.split()[1][0].islower():[0m                                                                                         [0m[33m40[0m [32m            if[7m[32m len(line.split()) > 2 and[0m[32m line.split()[1][0].islower():[0m
[33m43[0m [0m                no_errors = False[0m                                                                                                    [0m[33m41[0m [0m                no_errors = False[0m
[33m44[0m [0m                errors.append("Subject line first word after tag is not "[0m                                                            [0m[33m42[0m [0m                errors.append("Subject line first word after tag is not "[0m
[33m45[0m [0m                              "capitalized")[0m                                                                                         [0m[33m43[0m [0m                              "capitalized")[0m
[1;34m@@ -54,7 +52,7 @@ for i, line in enumerate(get_head_commit_message().splitlines()):
[0m[33m54[0m [0m            no_errors = False[0m                                                                                                        [0m[33m52[0m [0m            no_errors = False[0m
[33m55[0m [0m            errors.append("Line after subject should be blank")[0m                                                                      [0m[33m53[0m [0m            errors.append("Line after subject should be blank")[0m
[33m56[0m [0m    elif i > 1:[0m                                                                                                                      [0m[33m54[0m [0m    elif i > 1:[0m
[33m57[0m [31m        if [7m[31mb[0m[31m".  " in line:[0m                                                                                                           [0m[33m55[0m [32m        if ".  " in line:[0m
[33m58[0m [0m            no_errors = False[0m                                                                                                        [0m[33m56[0m [0m            no_errors = False[0m
[33m59[0m [0m            errors.append("Body line #%d - period should be followed by "[0m                                                            [0m[33m57[0m [0m            errors.append("Body line #%d - period should be followed by "[0m
[33m60[0m [0m                          "single space" % (i + 1))[0m                                                                                  [0m[33m58[0m [0m                          "single space" % (i + 1))[0m
[36mdiff --git a/tests/verify_copyright.py b/tests/verify_copyright.py
[0m[36mindex 9971177..f076b9e 100755
[0m[33m--- a/tests/verify_copyright.py
[0m[33m+++ b/tests/verify_copyright.py
[0m[1;34m@@ -1,5 +1,5 @@
[0m[33m 1[0m [31m#!/usr/bin/env python[0m                                                                                                                [0m[33m 1[0m [32m#!/usr/bin/env python[7m[32m3[0m[32m[0m
[33m 2[0m [31m# Copyright 201[4m[31m7[0m[31m IBM Corp.[0m                                                                                                           [0m[33m 2[0m [32m# Copyright 201[4m[32m8[0m[32m IBM Corp.[0m
[33m 3[0m [0m#[0m                                                                                                                                    [0m[33m 3[0m [0m#[0m
[33m 4[0m [0m# All Rights Reserved.[0m                                                                                                               [0m[33m 4[0m [0m# All Rights Reserved.[0m
[33m 5[0m [0m#[0m                                                                                                                                    [0m[33m 5[0m [0m#[0m
[1;34m@@ -15,9 +15,6 @@
[0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m                                                                [0m[33m15[0m [0m# See the License for the specific language governing permissions and[0m
[33m16[0m [0m# limitations under the License.[0m                                                                                                     [0m[33m16[0m [0m# limitations under the License.[0m
[33m17[0m [1;31m[0m [0m[33m  [0m 
[33m18[0m [1;31mfrom __future__ import nested_scopes, generators, division, absolute_import, \[0m [0m[33m  [0m 
[33m19[0m [1;31m    with_statement, print_function, unicode_literals[0m [0m[33m  [0m 
[33m20[0m [0m[0m                                                                                                                                     [0m[33m17[0m [0m[0m
[33m21[0m [0mimport sys[0m                                                                                                                           [0m[33m18[0m [0mimport sys[0m
[33m22[0m [0mimport subprocess[0m                                                                                                                    [0m[33m19[0m [0mimport subprocess[0m
[33m23[0m [0mfrom datetime import datetime[0m                                                                                                        [0m[33m20[0m [0mfrom datetime import datetime[0m
[1;34m@@ -25,8 +22,8 @@ import re
[0m[33m25[0m [0m[0m                                                                                                                                     [0m[33m22[0m [0m[0m
[33m26[0m [0m[0m                                                                                                                                     [0m[33m23[0m [0m[0m
[33m27[0m [0mdef get_changed_files():[0m                                                                                                             [0m[33m24[0m [0mdef get_changed_files():[0m
[33m28[0m [31m[7m[31m    return subprocess.check_output([0m[31m[0m                                                                                                  [0m[33m25[0m [32m[7m[32m    return subprocess.check_output(['git', 'diff', 'HEAD~', '--name-only',[0m[32m[0m
[33m29[0m [31m[7m[31m        ['git', 'diff', 'HEAD~', '--name-only', '--diff-filter=d'])[0m[31m[0m                                                                  [0m[33m26[0m [32m[7m[32m                                    '--diff-filter=d']).decode("utf-8")[0m[32m[0m
[33m30[0m [0m[0m                                                                                                                                     [0m[33m27[0m [0m[0m
[33m31[0m [0m[0m                                                                                                                                     [0m[33m28[0m [0m[0m
[33m32[0m [0mcurrent_year = str(datetime.today().year)[0m                                                                                            [0m[33m29[0m [0mcurrent_year = str(datetime.today().year)[0m
[36mdiff --git a/tox.ini b/tox.ini
[0m[36mindex 8919e37..7ca3692 100644
[0m[33m--- a/tox.ini
[0m[33m+++ b/tox.ini
[0m[1;34m@@ -1,13 +1,13 @@
[0m[33m 1[0m [0m[tox][0m                                                                                                                                [0m[33m 1[0m [0m[tox][0m
[33m 2[0m [0mminversion = 2.0[0m                                                                                                                     [0m[33m 2[0m [0mminversion = 2.0[0m
[33m 3[0m [0mskipsdist = True[0m                                                                                                                     [0m[33m 3[0m [0mskipsdist = True[0m
[33m 4[0m [31menvlist = py[4m[31m27[0m[31m,bashate,flake8,ansible-lint,commit-message-validate,verify-copyright,file-format[0m                                      [0m[33m 4[0m [32menvlist = py[4m[32m36[0m[32m,bashate,flake8,ansible-lint,commit-message-validate,verify-copyright,file-format[0m
[33m 5[0m [0m[0m                                                                                                                                     [0m[33m 5[0m [0m[0m
[33m 6[0m [0m[testenv][0m                                                                                                                            [0m[33m 6[0m [0m[testenv][0m
[33m 7[0m [0musedevelop = True[0m                                                                                                                    [0m[33m 7[0m [0musedevelop = True[0m
[33m 8[0m [0minstall_command = pip install -U {opts} {packages}[0m                                                                                   [0m[33m 8[0m [0minstall_command = pip install -U {opts} {packages}[0m
[33m 9[0m [0msetenv = VIRTUAL_ENV={envdir}[0m                                                                                                        [0m[33m 9[0m [0msetenv = VIRTUAL_ENV={envdir}[0m
[33m10[0m [31menvdir = {toxinidir}/.tox/py[4m[31m27[0m[31m[0m                                                                                                       [0m[33m10[0m [32menvdir = {toxinidir}/.tox/py[4m[32m36[0m[32m[0m
[33m11[0m [0mdeps = -r{toxinidir}/test-requirements.txt[0m                                                                                           [0m[33m11[0m [0mdeps = -r{toxinidir}/test-requirements.txt[0m
[33m12[0m [0mwhitelist_externals =[0m                                                                                                                [0m[33m12[0m [0mwhitelist_externals =[0m
[33m13[0m [0m    /bin/bash[0m                                                                                                                        [0m[33m13[0m [0m    /bin/bash[0m
[1;34m@@ -17,7 +17,7 @@ commands =
[0m[33m17[0m [0m    python setup.py testr[0m                                                                                                            [0m[33m17[0m [0m    python setup.py testr[0m
[33m18[0m [0m[0m                                                                                                                                     [0m[33m18[0m [0m[0m
[33m19[0m [0m[testenv:bashate][0m                                                                                                                    [0m[33m19[0m [0m[testenv:bashate][0m
[33m20[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m20[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m21[0m [0mcommands =[0m                                                                                                                           [0m[33m21[0m [0mcommands =[0m
[33m22[0m [0m    bash -c "find {toxinidir} \[0m                                                                                                      [0m[33m22[0m [0m    bash -c "find {toxinidir} \[0m
[33m23[0m [0m    -path {toxinidir}/.tox -prune -o -name '*.sh' -print | xargs \[0m                                                                   [0m[33m23[0m [0m    -path {toxinidir}/.tox -prune -o -name '*.sh' -print | xargs \[0m
[1;34m@@ -26,12 +26,12 @@ commands =
[0m[33m26[0m [0mwhitelist_externals = bash[0m                                                                                                           [0m[33m26[0m [0mwhitelist_externals = bash[0m
[33m27[0m [0m[0m                                                                                                                                     [0m[33m27[0m [0m[0m
[33m28[0m [0m[testenv:pycodestyle][0m                                                                                                                [0m[33m28[0m [0m[testenv:pycodestyle][0m
[33m29[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m29[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m30[0m [0mcommands =[0m                                                                                                                           [0m[33m30[0m [0mcommands =[0m
[33m31[0m [0m    pycodestyle scripts/python/ tests/[0m                                                                                               [0m[33m31[0m [0m    pycodestyle scripts/python/ tests/[0m
[33m32[0m [0m[0m                                                                                                                                     [0m[33m32[0m [0m[0m
[33m33[0m [0m[testenv:flake8][0m                                                                                                                     [0m[33m33[0m [0m[testenv:flake8][0m
[33m34[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m34[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m35[0m [0mcommands =[0m                                                                                                                           [0m[33m35[0m [0mcommands =[0m
[33m36[0m [0m    flake8[0m                                                                                                                           [0m[33m36[0m [0m    flake8[0m
[33m37[0m [0m[0m                                                                                                                                     [0m[33m37[0m [0m[0m
[1;34m@@ -42,7 +42,7 @@ ignore =
[0m[33m42[0m [0m    E402,E501,F403,F405,E722,F812[0m                                                                                                    [0m[33m42[0m [0m    E402,E501,F403,F405,E722,F812[0m
[33m43[0m [0m[0m                                                                                                                                     [0m[33m43[0m [0m[0m
[33m44[0m [0m[testenv:pylint][0m                                                                                                                     [0m[33m44[0m [0m[testenv:pylint][0m
[33m45[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m45[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m46[0m [0mdeps =[0m                                                                                                                               [0m[33m46[0m [0mdeps =[0m
[33m47[0m [0m    pyflakes[0m                                                                                                                         [0m[33m47[0m [0m    pyflakes[0m
[33m48[0m [0m    pylint[0m                                                                                                                           [0m[33m48[0m [0m    pylint[0m
[1;34m@@ -50,7 +50,7 @@ commands =
[0m[33m50[0m [0m    pylint scripts/python/ tests/[0m                                                                                                    [0m[33m50[0m [0m    pylint scripts/python/ tests/[0m
[33m51[0m [0m[0m                                                                                                                                     [0m[33m51[0m [0m[0m
[33m52[0m [0m[testenv:pylint-errors][0m                                                                                                              [0m[33m52[0m [0m[testenv:pylint-errors][0m
[33m53[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m53[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m54[0m [0mdeps =[0m                                                                                                                               [0m[33m54[0m [0mdeps =[0m
[33m55[0m [0m    pyflakes[0m                                                                                                                         [0m[33m55[0m [0m    pyflakes[0m
[33m56[0m [0m    pylint[0m                                                                                                                           [0m[33m56[0m [0m    pylint[0m
[1;34m@@ -58,31 +58,31 @@ commands =
[0m[33m58[0m [0m    pylint --errors-only scripts/python/ tests/[0m                                                                                      [0m[33m58[0m [0m    pylint --errors-only scripts/python/ tests/[0m
[33m59[0m [0m[0m                                                                                                                                     [0m[33m59[0m [0m[0m
[33m60[0m [0m[testenv:ansible-lint][0m                                                                                                               [0m[33m60[0m [0m[testenv:ansible-lint][0m
[33m61[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m61[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m62[0m [0mcommands =[0m                                                                                                                           [0m[33m62[0m [0mcommands =[0m
[33m63[0m [0m    # Perform an Ansible lint check[0m                                                                                                  [0m[33m63[0m [0m    # Perform an Ansible lint check[0m
[33m64[0m [0m    bash -c "find {toxinidir} -name '*.yml' -o -name '*.yaml' | xargs \[0m                                                              [0m[33m64[0m [0m    bash -c "find {toxinidir} -name '*.yml' -o -name '*.yaml' | xargs \[0m
[33m65[0m [0m    ansible-lint -x ANSIBLE0006,ANSIBLE0012,ANSIBLE0013,ANSIBLE0014,ANSIBLE0016"[0m                                                     [0m[33m65[0m [0m    ansible-lint -x ANSIBLE0006,ANSIBLE0012,ANSIBLE0013,ANSIBLE0014,ANSIBLE0016"[0m
[33m66[0m [0m[0m                                                                                                                                     [0m[33m66[0m [0m[0m
[33m67[0m [0m[testenv:commit-message-validate][0m                                                                                                    [0m[33m67[0m [0m[testenv:commit-message-validate][0m
[33m68[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m68[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m69[0m [0mcommands =[0m                                                                                                                           [0m[33m69[0m [0mcommands =[0m
[33m70[0m [0m    bash -c "{toxinidir}/tests/commit_message_validate.py"[0m                                                                           [0m[33m70[0m [0m    bash -c "{toxinidir}/tests/commit_message_validate.py"[0m
[33m71[0m [0m[0m                                                                                                                                     [0m[33m71[0m [0m[0m
[33m72[0m [0m[testenv:verify-copyright][0m                                                                                                           [0m[33m72[0m [0m[testenv:verify-copyright][0m
[33m73[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m73[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m74[0m [0mcommands =[0m                                                                                                                           [0m[33m74[0m [0mcommands =[0m
[33m75[0m [0m    bash -c "{toxinidir}/tests/verify_copyright.py"[0m                                                                                  [0m[33m75[0m [0m    bash -c "{toxinidir}/tests/verify_copyright.py"[0m
[33m76[0m [0m[0m                                                                                                                                     [0m[33m76[0m [0m[0m
[33m77[0m [0m[testenv:linters][0m                                                                                                                    [0m[33m77[0m [0m[testenv:linters][0m
[33m78[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m78[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m79[0m [0mcommands =[0m                                                                                                                           [0m[33m79[0m [0mcommands =[0m
[33m80[0m [0m    {[testenv:flake8]commands}[0m                                                                                                       [0m[33m80[0m [0m    {[testenv:flake8]commands}[0m
[33m81[0m [0m    {[testenv:bashate]commands}[0m                                                                                                      [0m[33m81[0m [0m    {[testenv:bashate]commands}[0m
[33m82[0m [0m    {[testenv:ansible-lint]commands}[0m                                                                                                 [0m[33m82[0m [0m    {[testenv:ansible-lint]commands}[0m
[33m83[0m [0m[0m                                                                                                                                     [0m[33m83[0m [0m[0m
[33m84[0m [0m[testenv:file-format][0m                                                                                                                [0m[33m84[0m [0m[testenv:file-format][0m
[33m85[0m [31mbasepython = python[4m[31m2[0m[31m.[4m[31m7[0m[31m[0m                                                                                                               [0m[33m85[0m [32mbasepython = python[4m[32m3[0m[32m.[4m[32m6[0m[32m[0m
[33m86[0m [0mcommands =[0m                                                                                                                           [0m[33m86[0m [0mcommands =[0m
[33m87[0m [0m    bash -c "! find {toxinidir} \[0m                                                                                                    [0m[33m87[0m [0m    bash -c "! find {toxinidir} \[0m
[33m88[0m [0m    \( -path '{toxinidir}/pup-venv' -o -path '{toxinidir}/\.tox' -o -path '{toxinidir}/\.git' -o -path '{toxinidir}/\.eggs' \) \[0m     [0m[33m88[0m [0m    \( -path '{toxinidir}/pup-venv' -o -path '{toxinidir}/\.tox' -o -path '{toxinidir}/\.git' -o -path '{toxinidir}/\.eggs' \) \[0m
