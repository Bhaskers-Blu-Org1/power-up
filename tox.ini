[tox]
minversion = 2.0
skipsdist = True
envlist = py27,bashate,pep8,ansible-lint

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/test-requirements.txt
whitelist_externals =
    /bin/bash
    /usr/bin/find
commands =
    find . -type f -name "*.pyc" -delete
    python setup.py testr

[testenv:bashate]
basepython = python2.7
commands =
    bash -c "find {toxinidir} \
    -path {toxinidir}/.tox -prune -o -name '*.sh' -print | xargs \
    bashate -v"

whitelist_externals = bash

[testenv:pep8]
basepython = python2.7
commands =
    flake8
    {toxinidir}/tests/commit_message_validate.py

[flake8]
exclude =
    .venv,.git,.tox,*lib/python*,*egg,build
ignore =
    E126,E128,E211,E225,E226,E227,E241,E265,E305,E402,E501,E999,F401,
    F403,F405,F811,F812,F821,F841

[testenv:ansible-lint]
basepython = python2.7
commands =
    # Perform an Ansible lint check
    bash -c "find {toxinidir} -name '*.yml' -o -name '*.yaml' | xargs \
    ansible-lint -x ANSIBLE0006,ANSIBLE0012,ANSIBLE0013,ANSIBLE0016"

[testenv:linters]
basepython = python2.7
commands =
    {[testenv:pep8]commands}
    {[testenv:bashate]commands}
    {[testenv:ansible-lint]commands}
